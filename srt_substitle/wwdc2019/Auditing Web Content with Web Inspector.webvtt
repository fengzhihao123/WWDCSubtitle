WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:00:07.174 --> 00:00:08.809 align:middle line:0
大家好
我是Jonathan Davis

00:00:08.876 --> 00:00:12.312 align:middle line:0
Safari和WebKit团队的
网页技术传播员

00:00:12.613 --> 00:00:15.549 align:middle line:0
欢迎收看
使用网页查看器审查网页内容

00:00:16.049 --> 00:00:18.051 align:middle line:0
在创建网页内容的过程中

00:00:18.118 --> 00:00:20.220 align:middle line:-1
开发者需要检查许多细节

00:00:21.021 --> 00:00:23.724 align:middle line:-1
比如CSS类名的命名规则

00:00:23.790 --> 00:00:26.026 align:middle line:-1
还要保证网页可以正常访问

00:00:26.493 --> 00:00:27.861 align:middle line:-1
细节太多

00:00:27.928 --> 00:00:31.031 align:middle line:-1
很容易忘记 找起来也很乏味

00:00:31.331 --> 00:00:33.400 align:middle line:-1
内置清单是最理想的办法

00:00:33.867 --> 00:00:37.571 align:middle line:-2
部分团队会给持续集成系统
设置自动测试

00:00:37.638 --> 00:00:40.340 align:middle line:-2
就像Safari的
WebDriver

00:00:40.407 --> 00:00:43.343 align:middle line:-2
macOS可用
现在iOS也能用了

00:00:43.710 --> 00:00:46.113 align:middle line:-2
WebDriver
有益于查找代码变化

00:00:46.180 --> 00:00:48.749 align:middle line:-1
找到用户功能失败的原因

00:00:49.216 --> 00:00:50.417 align:middle line:-1
但对于网页开发者

00:00:50.484 --> 00:00:53.854 align:middle line:-1
他们要检查进程是否符合代码结果

00:00:54.121 --> 00:00:57.057 align:middle line:-1
网页查看器现在有个新的审查系统

00:00:57.124 --> 00:00:59.660 align:middle line:-2
可用于macOS的
Safari 13

00:00:59.726 --> 00:01:01.295 align:middle line:-1
它提供了快速 简单

00:01:01.361 --> 00:01:03.764 align:middle line:-1
更方便的方法 检查网页内容

00:01:05.599 --> 00:01:09.069 align:middle line:-2
本视频中 我会演示
如何使用网页查看器的审查

00:01:09.469 --> 00:01:12.206 align:middle line:-1
如何实现测试并分析测试结果

00:01:12.472 --> 00:01:13.307 align:middle line:-1
以及最后

00:01:13.373 --> 00:01:16.543 align:middle line:-1
如何为项目 创建自定义审查

00:01:17.411 --> 00:01:18.245 align:middle line:-1
首先

00:01:18.312 --> 00:01:21.315 align:middle line:-2
访问网页查看器
需要开启开发菜单

00:01:22.482 --> 00:01:24.384 align:middle line:-1
只要打开Safari偏好设置

00:01:24.751 --> 00:01:26.086 align:middle line:-1
点击“高级”

00:01:26.553 --> 00:01:30.390 align:middle line:-1
然后勾选“在菜单栏显示开发菜单”

00:01:32.192 --> 00:01:33.727 align:middle line:-1
然后加载一个网页

00:01:34.127 --> 00:01:36.430 align:middle line:-1
在开发菜单打开网页查看器

00:01:36.830 --> 00:01:39.466 align:middle line:-2
或使用快捷键
Command-Option-I

00:01:40.934 --> 00:01:43.804 align:middle line:-1
以WebKit.org为例

00:01:44.071 --> 00:01:45.672 align:middle line:-1
点击“审查”标签

00:01:48.308 --> 00:01:51.111 align:middle line:-1
左边栏列出了审查项

00:01:51.645 --> 00:01:54.581 align:middle line:-1
点击左侧的箭头 展开审查项

00:01:55.215 --> 00:01:58.452 align:middle line:-1
审查项是多个测试组或测试的集合

00:01:59.119 --> 00:02:00.854 align:middle line:-1
测试组没有任何功能

00:02:00.921 --> 00:02:05.325 align:middle line:-1
只是单个测试集合的组织容器

00:02:06.260 --> 00:02:07.694 align:middle line:-1
运行审查很简单

00:02:07.761 --> 00:02:10.564 align:middle line:-2
点击“开始”按钮
运行所有可用的审查项

00:02:11.265 --> 00:02:15.202 align:middle line:-2
或右击一个审查项
在上下文菜单中查看更多选项

00:02:15.903 --> 00:02:17.204 align:middle line:-1
如果只运行一个审查项

00:02:17.271 --> 00:02:19.473 align:middle line:-1
右击审查项 选择“开始”

00:02:19.940 --> 00:02:22.409 align:middle line:-1
或者将鼠标悬停在左边栏的右侧

00:02:22.476 --> 00:02:24.044 align:middle line:-1
会出现一个播放键

00:02:24.478 --> 00:02:26.947 align:middle line:-1
也可以点亮后 按下空格

00:02:27.347 --> 00:02:30.617 align:middle line:-2
审查十分迅速
并在测试完成后即时更新

00:02:32.286 --> 00:02:34.521 align:middle line:-1
选择审查项的另一个方法

00:02:34.888 --> 00:02:36.590 align:middle line:-1
是点击“编辑”按钮

00:02:36.657 --> 00:02:38.892 align:middle line:-1
在导航边栏的底部

00:02:41.195 --> 00:02:45.499 align:middle line:-1
这里可以勾选或取消单个测试

00:02:45.966 --> 00:02:47.167 align:middle line:-1
测试组

00:02:48.035 --> 00:02:51.572 align:middle line:-2
或整个审查项
来选择是否启用它们

00:02:54.308 --> 00:02:57.211 align:middle line:-1
完成后点击底部的“完成”按钮

00:02:59.112 --> 00:03:02.282 align:middle line:-1
测试的结果列表显示在审查项下方

00:03:02.349 --> 00:03:03.784 align:middle line:-1
在结果文件夹里

00:03:03.851 --> 00:03:06.820 align:middle line:-1
每个结果被存入“运行”文件夹

00:03:08.522 --> 00:03:12.459 align:middle line:-2
展开“运行”文件夹
可以查看运行审查的结果

00:03:13.160 --> 00:03:16.730 align:middle line:-1
结果运行在页面重新加载后也可用

00:03:16.797 --> 00:03:18.565 align:middle line:-1
因此你可以修改网页

00:03:18.632 --> 00:03:21.001 align:middle line:-1
然后重新审核更新后的结果

00:03:21.368 --> 00:03:23.937 align:middle line:-1
比如 你可以对比通过率

00:03:24.304 --> 00:03:27.207 align:middle line:-1
结果会在关闭网页查看器后清空

00:03:30.177 --> 00:03:32.646 align:middle line:-1
点击审查运行演示的结果

00:03:32.713 --> 00:03:36.483 align:middle line:-2
会出现一个报告
展现示例结果的级别和数据

00:03:38.619 --> 00:03:39.820 align:middle line:-1
前三个级别

00:03:39.887 --> 00:03:42.222 align:middle line:-2
应该很眼熟
如果你用过Xcode

00:03:42.623 --> 00:03:44.825 align:middle line:-1
“通过”代表测试通过

00:03:44.892 --> 00:03:47.227 align:middle line:-1
指代码符合测试要求

00:03:47.728 --> 00:03:49.229 align:middle line:-1
“警告”是基本通过

00:03:49.296 --> 00:03:51.298 align:middle line:-1
指虽然代码通过了测试

00:03:51.365 --> 00:03:53.133 align:middle line:-1
但还有需要修改的地方

00:03:53.433 --> 00:03:55.869 align:middle line:-1
“失败”指代码没能通过测试

00:03:57.905 --> 00:04:01.608 align:middle line:-2
另外这两个级别
是网页查看器特有的

00:04:01.975 --> 00:04:05.012 align:middle line:-2
“错误”是在使用
JavaScript运行测试时

00:04:05.078 --> 00:04:06.246 align:middle line:-1
出现的报错

00:04:06.747 --> 00:04:09.483 align:middle line:-1
“不支持”是个特殊情况 说明

00:04:09.550 --> 00:04:12.753 align:middle line:-1
当前页面不支持被测试的数据

00:04:12.819 --> 00:04:14.821 align:middle line:-1
比如API缺失

00:04:15.923 --> 00:04:18.559 align:middle line:-1
测试结果还可以包括测试数据

00:04:18.625 --> 00:04:21.295 align:middle line:-1
形式为DOM节点或报错消息

00:04:23.697 --> 00:04:26.300 align:middle line:-1
网页查看器自带部分默认的审查项

00:04:26.366 --> 00:04:28.602 align:middle line:-1
可以禁用 但不能删除

00:04:29.102 --> 00:04:30.370 align:middle line:-1
其中一个默认项

00:04:30.437 --> 00:04:33.006 align:middle line:-1
测试网页的标记

00:04:33.073 --> 00:04:36.276 align:middle line:-1
是否符合访问性的一般准则

00:04:37.744 --> 00:04:40.514 align:middle line:-1
然后是访问性审查的运行结果

00:04:40.581 --> 00:04:41.849 align:middle line:-1
在WebKit.org

00:04:43.150 --> 00:04:46.286 align:middle line:-1
整体评分说明WebKit运行不错

00:04:46.720 --> 00:04:48.288 align:middle line:-1
但还有提升空间

00:04:49.690 --> 00:04:51.892 align:middle line:-1
结果中显示“失败”的地方

00:04:51.959 --> 00:04:54.194 align:middle line:-1
是检测到失败的DOM节点

00:04:54.261 --> 00:04:56.663 align:middle line:-1
显示为可互动的DOM树

00:04:57.264 --> 00:04:58.732 align:middle line:-1
展开该节点的DOM树

00:04:58.799 --> 00:05:01.001 align:middle line:-1
就可以访问子节点

00:05:01.068 --> 00:05:04.838 align:middle line:-1
悬停鼠标会显示对应的页面元素

00:05:04.905 --> 00:05:06.840 align:middle line:-1
就像在使用元素标签

00:05:11.378 --> 00:05:13.547 align:middle line:-1
这就很容易理解

00:05:13.614 --> 00:05:16.350 align:middle line:-1
网页内容的哪个代码需要完善

00:05:17.417 --> 00:05:18.519 align:middle line:-1
要修复它

00:05:18.585 --> 00:05:20.120 align:middle line:-1
只要点击这个箭头

00:05:20.187 --> 00:05:22.155 align:middle line:-1
直接到元素标签里的节点

00:05:23.123 --> 00:05:25.492 align:middle line:-1
问题是作为菜单的元素

00:05:25.559 --> 00:05:28.695 align:middle line:-1
需要子元素才能形成菜单项

00:05:29.730 --> 00:05:32.533 align:middle line:-1
因此我只要添加一个新的角色属性

00:05:32.599 --> 00:05:34.334 align:middle line:-1
用菜单项的值

00:05:34.401 --> 00:05:36.870 align:middle line:-1
给菜单的每个子元素

00:05:37.871 --> 00:05:39.773 align:middle line:-1
我现在就补上缺失的属性

00:05:39.840 --> 00:05:41.308 align:middle line:-1
给每个元素

00:05:44.745 --> 00:05:46.180 align:middle line:-1
还有几个

00:05:50.717 --> 00:05:51.552 align:middle line:-1
好了

00:05:51.919 --> 00:05:53.654 align:middle line:-1
现在切换回审查标签

00:05:53.720 --> 00:05:55.289 align:middle line:-1
重新运行审查

00:05:55.355 --> 00:05:58.158 align:middle line:-1
看看DOM修改后的新结果

00:06:04.765 --> 00:06:08.936 align:middle line:-1
我只需将这些修改并入实际代码中

00:06:11.471 --> 00:06:13.740 align:middle line:-1
你看 检查问题就这么简单

00:06:13.807 --> 00:06:16.810 align:middle line:-2
修改它们也很方便
在网页查看器中

00:06:17.544 --> 00:06:21.548 align:middle line:-1
审查和审查结果可以导出 再导入

00:06:21.615 --> 00:06:25.385 align:middle line:-2
点击“导出”按钮
将结果保存到JSON文件

00:06:26.153 --> 00:06:28.222 align:middle line:-1
它们可以通过查看器再次导入

00:06:28.288 --> 00:06:29.923 align:middle line:-1
仍然可以访问完整结果

00:06:29.990 --> 00:06:31.892 align:middle line:-1
包括可互动的DOM节点

00:06:31.959 --> 00:06:35.229 align:middle line:-1
只要页面元素匹配报表节点

00:06:36.897 --> 00:06:38.799 align:middle line:-1
你也可以导出内置的审查项

00:06:38.866 --> 00:06:41.668 align:middle line:-1
作为你编写审查项的示例

00:06:41.735 --> 00:06:44.872 align:middle line:-1
由于许多团队都有独特的目标代码

00:06:44.938 --> 00:06:48.375 align:middle line:-2
编写自定义的审查项
是最大的用处之一

00:06:48.442 --> 00:06:51.011 align:middle line:-1
在使用网页查看器的审查框架时

00:06:52.312 --> 00:06:54.815 align:middle line:-1
使用JSON格式实现便携

00:06:55.082 --> 00:06:58.452 align:middle line:-2
每个测试都是字符串化的
JavaScript函数

00:06:58.519 --> 00:06:59.953 align:middle line:-1
提供简单的框架

00:07:02.756 --> 00:07:03.724 align:middle line:-1
在JavaScript

00:07:04.424 --> 00:07:05.592 align:middle line:-1
简单的JSON格式

00:07:05.659 --> 00:07:09.129 align:middle line:-1
方便分享测试给组员或其他开发者

00:07:10.330 --> 00:07:12.032 align:middle line:-1
这个例子是ESLint审查

00:07:12.099 --> 00:07:13.800 align:middle line:-1
WebKit博客上有

00:07:13.867 --> 00:07:15.936 align:middle line:-1
关于创建网页查看器审核

00:07:16.503 --> 00:07:19.740 align:middle line:-2
这篇博客深入讲解了
如何编写自定义审查

00:07:19.806 --> 00:07:23.243 align:middle line:-1
以及使用审查框架的其他好处

00:07:23.677 --> 00:07:26.446 align:middle line:-2
只要下载
ESLint JSON文档

00:07:27.247 --> 00:07:30.717 align:middle line:-1
就能拖拽到网页查看器中

00:07:30.784 --> 00:07:31.919 align:middle line:-1
导入它

00:07:34.154 --> 00:07:36.790 align:middle line:-1
网页查看器的审查又快又方便

00:07:36.857 --> 00:07:38.292 align:middle line:-1
希望你们可以尝试一下

00:07:38.358 --> 00:07:41.628 align:middle line:-2
使用内置访问性审查
检查你的网页

00:07:42.796 --> 00:07:45.465 align:middle line:-2
使用便携的审查格式
创建自定义审查项

00:07:45.532 --> 00:07:49.336 align:middle line:-1
保证进程中的代码符合项目标准

00:07:49.937 --> 00:07:51.371 align:middle line:-1
我们期待您的反馈

00:07:51.438 --> 00:07:53.774 align:middle line:-2
如果发现任何问题
请反馈错误报告

00:07:53.841 --> 00:07:55.576 align:middle line:-1
也可提出特殊要求

00:07:56.243 --> 00:07:57.211 align:middle line:-1
更多信息

00:07:57.277 --> 00:07:59.513 align:middle line:-1
和其他相关资料

00:07:59.580 --> 00:08:03.517 align:middle line:-1
请查看本视频相关讲演中的链接

