WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:00:01.516 --> 00:00:04.500 A:middle
[音乐]

00:00:08.516 --> 00:00:12.106 A:middle
[掌声和欢呼声]

00:00:12.606 --> 00:00:12.976 A:middle
&gt;&gt; 好的

00:00:14.086 --> 00:00:14.806 A:middle
我们开始吧

00:00:16.896 --> 00:00:18.636 A:middle
大家好 我是 Paolo 

00:00:18.636 --> 00:00:20.256 A:middle
之后我的同事 Tom 

00:00:20.356 --> 00:00:21.346 A:middle
也会上台

00:00:21.676 --> 00:00:23.636 A:middle
我们今天将为大家

00:00:23.636 --> 00:00:27.476 A:middle
介绍 SF Symbols

00:00:27.606 --> 00:00:28.886 A:middle
标志在界面上

00:00:28.886 --> 00:00:30.296 A:middle
有着很重要的作用

00:00:30.796 --> 00:00:31.966 A:middle
它们可以有效地

00:00:31.966 --> 00:00:33.136 A:middle
传递意义

00:00:34.156 --> 00:00:35.866 A:middle
它们可以显示

00:00:35.866 --> 00:00:36.556 A:middle
你选择的项目

00:00:37.336 --> 00:00:39.216 A:middle
也可以在视觉上

00:00:39.216 --> 00:00:40.476 A:middle
区分不同类型

00:00:40.476 --> 00:00:42.266 A:middle
的内容

00:00:42.956 --> 00:00:44.496 A:middle
标志通过系统

00:00:44.496 --> 00:00:45.826 A:middle
出现在不同的情景中

00:00:50.696 --> 00:00:52.396 A:middle
这在用户界面中

00:00:52.396 --> 00:00:55.576 A:middle
创造了一种熟悉感

00:00:56.786 --> 00:00:57.866 A:middle
标志的使用方法有很多种

00:00:57.866 --> 00:00:59.966 A:middle
设计标志有一种

00:00:59.966 --> 00:01:01.916 A:middle
固有的挑战

00:01:01.916 --> 00:01:03.936 A:middle
与 UI 其它的

00:01:03.936 --> 00:01:06.696 A:middle
必须的元素

00:01:06.696 --> 00:01:09.726 A:middle
相匹配 那就是文本

00:01:10.616 --> 00:01:12.286 A:middle
文本在 UI 的运用中

00:01:12.336 --> 00:01:13.326 A:middle
有不同的磅值

00:01:13.326 --> 00:01:14.976 A:middle
标志也是如此

00:01:19.456 --> 00:01:21.876 A:middle
我们经常使用标志

00:01:21.876 --> 00:01:22.206 A:middle
你们也是

00:01:23.296 --> 00:01:24.976 A:middle
我们想要让你们的工作更简单

00:01:27.086 --> 00:01:30.116 A:middle
在 iOS 13 系统中 我们重新设计了

00:01:30.116 --> 00:01:30.736 A:middle
我们的标志

00:01:31.936 --> 00:01:33.186 A:middle
你们会注意到这些标志

00:01:33.186 --> 00:01:34.906 A:middle
看起来更丰满

00:01:34.906 --> 00:01:36.676 A:middle
在粗细方面

00:01:36.676 --> 00:01:38.716 A:middle
也显得更粗 看起来更明显

00:01:38.716 --> 00:01:40.996 A:middle
我们也将其设计得

00:01:41.166 --> 00:01:43.966 A:middle
与文字完美融合

00:01:47.126 --> 00:01:49.206 A:middle
虽然我们花费大量精力

00:01:49.206 --> 00:01:51.136 A:middle
重新设计这些

00:01:51.136 --> 00:01:52.566 A:middle
系统中你们已经熟悉的

00:01:52.566 --> 00:01:54.796 A:middle
标志 我们还是很激动地

00:01:54.796 --> 00:01:56.586 A:middle
宣布我们已经

00:01:56.586 --> 00:01:58.606 A:middle
拓展了这个名单

00:01:58.606 --> 00:02:03.166 A:middle
并设计了更多

00:02:03.366 --> 00:02:03.806 A:middle
我们称之为 SF Symbols

00:02:04.296 --> 00:02:07.206 A:middle
它们是由 Apple 开发的

00:02:07.526 --> 00:02:09.816 A:middle
可以在你们的 App 中

00:02:09.816 --> 00:02:11.766 A:middle
使用的与平台兼容 高质量的

00:02:12.736 --> 00:02:12.836 A:middle
一个设置

00:02:14.776 --> 00:02:17.456 A:middle
它们是以矢量形式出现的

00:02:17.456 --> 00:02:19.506 A:middle
这意味着它们可缩放

00:02:19.506 --> 00:02:22.236 A:middle
不论磅值大小都

00:02:22.236 --> 00:02:22.956 A:middle
展示良好

00:02:25.936 --> 00:02:27.926 A:middle
它们的粗细也

00:02:27.926 --> 00:02:29.776 A:middle
适合我们的系统字体 San Francisco 中

00:02:29.776 --> 00:02:33.266 A:middle
所有的粗度

00:02:39.676 --> 00:02:42.706 A:middle
这里面有超过 1000 种可以选择

00:02:43.356 --> 00:02:46.066 A:middle
如果这些还不够

00:02:46.416 --> 00:02:48.706 A:middle
你甚至可以自定义

00:02:48.706 --> 00:02:49.596 A:middle
并创造你自己的标志

00:02:49.596 --> 00:02:52.426 A:middle
我们来详细地

00:02:52.426 --> 00:02:52.806 A:middle
了解一下

00:02:53.826 --> 00:02:55.596 A:middle
它们被设计成与文本匹配

00:02:56.036 --> 00:02:57.776 A:middle
它们的排版大小和文本一样

00:02:57.876 --> 00:03:00.106 A:middle
是指定好的

00:03:02.256 --> 00:03:03.806 A:middle
当标志出现在文本旁时

00:03:03.806 --> 00:03:05.636 A:middle
它们都完美的出现在同一

00:03:05.636 --> 00:03:06.586 A:middle
基线上

00:03:08.796 --> 00:03:10.416 A:middle
当标志和文本

00:03:10.416 --> 00:03:12.366 A:middle
垂直排列时 

00:03:12.366 --> 00:03:14.726 A:middle
有两个最常见的情形

00:03:14.726 --> 00:03:17.216 A:middle
文本支撑标志

00:03:18.596 --> 00:03:20.796 A:middle
或者标志支撑文本

00:03:21.596 --> 00:03:23.136 A:middle
平行排列让

00:03:23.136 --> 00:03:25.086 A:middle
一切看起来都比较好

00:03:26.996 --> 00:03:29.316 A:middle
这也可能是因为它的留白

00:03:31.616 --> 00:03:32.676 A:middle
它们并不一定是相同的

00:03:32.766 --> 00:03:34.586 A:middle
正如你们在右下角

00:03:35.076 --> 00:03:37.326 A:middle
蓝色长方形所看到的

00:03:37.746 --> 00:03:40.906 A:middle
留白是不可见的

00:03:40.906 --> 00:03:42.266 A:middle
在屏幕上展示元素时

00:03:42.266 --> 00:03:44.026 A:middle
却经常会考虑到它们

00:03:44.586 --> 00:03:47.266 A:middle
我们来看看粗细

00:03:47.766 --> 00:03:50.336 A:middle
SF Symbols 很仔细地

00:03:50.336 --> 00:03:52.886 A:middle
让其在不同粗度下

00:03:52.886 --> 00:03:54.686 A:middle
都显得很美观 不论是超细

00:03:54.686 --> 00:03:56.336 A:middle
还是黑体 就像我们的

00:03:56.336 --> 00:03:56.656 A:middle
系统字体一样

00:03:57.846 --> 00:03:59.346 A:middle
每个粗度都是手动

00:03:59.346 --> 00:04:00.686 A:middle
画成的 而且

00:04:00.686 --> 00:04:02.696 A:middle
每一个设计都加入了特殊的考量

00:04:03.456 --> 00:04:04.456 A:middle
较细的粗度有一种

00:04:04.456 --> 00:04:06.206 A:middle
独特而美丽的优雅感

00:04:07.336 --> 00:04:09.876 A:middle
而粗的更加能彰显

00:04:09.876 --> 00:04:11.716 A:middle
细节和清晰度

00:04:11.716 --> 00:04:16.836 A:middle
当它们与文本相邻时

00:04:16.836 --> 00:04:19.356 A:middle
即使文本的大小不变

00:04:19.356 --> 00:04:21.456 A:middle
我们也需要使用

00:04:21.456 --> 00:04:23.976 A:middle
不同大小的标志

00:04:25.336 --> 00:04:26.756 A:middle
这是我们中很多人

00:04:26.756 --> 00:04:29.386 A:middle
根据标志可能需要

00:04:29.386 --> 00:04:31.406 A:middle
强调的部分

00:04:31.406 --> 00:04:33.856 A:middle
以及可用的空间

00:04:33.976 --> 00:04:34.886 A:middle
已经做过的工作

00:04:36.216 --> 00:04:38.386 A:middle
在 iOS 13 中 我们将其

00:04:38.386 --> 00:04:39.286 A:middle
转换成了一个系统

00:04:40.756 --> 00:04:44.156 A:middle
我们用缩放大小来调用它们 --

00:04:44.636 --> 00:04:46.186 A:middle
小 中 大

00:04:46.796 --> 00:04:49.806 A:middle
值得注意的是

00:04:49.806 --> 00:04:51.216 A:middle
标志的尺寸

00:04:51.216 --> 00:04:52.446 A:middle
还是一样的

00:04:52.886 --> 00:04:54.436 A:middle
变化的只是缩放比例

00:04:56.016 --> 00:04:56.966 A:middle
每一个缩放

00:04:56.966 --> 00:04:58.336 A:middle
都与文本的粗细是相匹配的

00:04:59.056 --> 00:05:00.476 A:middle
提醒大家一句

00:05:00.476 --> 00:05:02.906 A:middle
这不仅仅是线性缩放

00:05:02.906 --> 00:05:04.266 A:middle
笔画的粗细

00:05:04.266 --> 00:05:07.066 A:middle
根据文本的粗细而进行调整

00:05:07.276 --> 00:05:08.896 A:middle
其他好处就是

00:05:08.896 --> 00:05:10.746 A:middle
使用缩放意味着

00:05:10.746 --> 00:05:13.346 A:middle
它们会自动

00:05:13.346 --> 00:05:15.056 A:middle
与大写字母的高度

00:05:15.056 --> 00:05:15.436 A:middle
垂直对齐

00:05:17.266 --> 00:05:19.736 A:middle
因此 标志和文本中间

00:05:20.866 --> 00:05:22.386 A:middle
垂直的布局

00:05:22.386 --> 00:05:25.106 A:middle
对于三种缩放大小来说都是自动的

00:05:27.156 --> 00:05:28.986 A:middle
那么这些缩放应该在哪里使用

00:05:28.986 --> 00:05:30.346 A:middle
你又应该在何时

00:05:30.376 --> 00:05:31.176 A:middle
使用一个特定的缩放大小呢

00:05:32.086 --> 00:05:33.716 A:middle
这里有三个 UI 的例子

00:05:34.686 --> 00:05:37.896 A:middle
它们都是 17 磅值的文本

00:05:37.896 --> 00:05:40.326 A:middle
但是这些标志的边框

00:05:40.326 --> 00:05:43.466 A:middle
拥有不同的高度

00:05:44.046 --> 00:05:47.606 A:middle
所以文本在这三个例子中

00:05:47.606 --> 00:05:49.206 A:middle
都是一样的 标志也是如此

00:05:49.206 --> 00:05:51.276 A:middle
但是标志使用了一个不同的

00:05:51.336 --> 00:05:53.376 A:middle
缩放比例 为了

00:05:53.506 --> 00:05:54.206 A:middle
来最好地适配空间

00:05:54.846 --> 00:05:58.136 A:middle
在某些如

00:05:58.136 --> 00:06:00.066 A:middle
工具栏的地方 你的工具包

00:06:00.066 --> 00:06:01.716 A:middle
会做出正确的事情

00:06:01.716 --> 00:06:03.146 A:middle
同时也会自动地为控制

00:06:03.556 --> 00:06:03.976 A:middle
选择正确的缩放比例

00:06:07.376 --> 00:06:09.376 A:middle
当我们把这些都放在一起的时候

00:06:09.656 --> 00:06:11.746 A:middle
-- 改变大小 缩放和粗细

00:06:11.746 --> 00:06:13.506 A:middle
-- 这意味着你可以通过

00:06:13.506 --> 00:06:14.586 A:middle
动态类型来使用它们

00:06:14.876 --> 00:06:16.056 A:middle
一切都运行得很好

00:06:16.566 --> 00:06:20.346 A:middle
当然 标志也可以

00:06:20.346 --> 00:06:21.126 A:middle
本地化

00:06:21.656 --> 00:06:23.006 A:middle
这是一个语音备忘录的 App

00:06:23.006 --> 00:06:25.206 A:middle
用英文运行

00:06:25.726 --> 00:06:28.166 A:middle
也用阿拉伯语运行

00:06:28.346 --> 00:06:30.136 A:middle
请注意时间控制

00:06:30.506 --> 00:06:31.846 A:middle
是如何反应

00:06:31.846 --> 00:06:32.676 A:middle
当地的数字系统的

00:06:33.246 --> 00:06:36.296 A:middle
如果你在想如何

00:06:36.296 --> 00:06:37.616 A:middle
理解这些标志的意思

00:06:37.986 --> 00:06:39.496 A:middle
每个标志都有一个

00:06:39.496 --> 00:06:39.836 A:middle
独特的名称

00:06:43.206 --> 00:06:44.806 A:middle
大部分标志

00:06:44.806 --> 00:06:47.546 A:middle
可以改变轮廓

00:06:47.546 --> 00:06:47.846 A:middle
或填充

00:06:48.476 --> 00:06:52.126 A:middle
它们可以被圆圈

00:06:52.606 --> 00:06:55.556 A:middle
或正方形所包围 也可能

00:06:55.556 --> 00:06:56.976 A:middle
会有标准化的标记系统

00:07:01.626 --> 00:07:02.726 A:middle
使用这些标志

00:07:04.086 --> 00:07:06.006 A:middle
首先 它们被包含在

00:07:06.006 --> 00:07:07.366 A:middle
San Francisco 字体中

00:07:07.426 --> 00:07:08.766 A:middle
而且可以下载 所以你们可以

00:07:08.766 --> 00:07:09.976 A:middle
在你们的设计提示符中使用

00:07:11.196 --> 00:07:12.446 A:middle
这些缩放大小可以在

00:07:12.446 --> 00:07:13.626 A:middle
打开类型这个功能中打开

00:07:14.296 --> 00:07:16.246 A:middle
默认的缩放大小是中等

00:07:16.246 --> 00:07:17.796 A:middle
小和大都可以通过

00:07:17.796 --> 00:07:20.156 A:middle
排版面板或者

00:07:20.686 --> 00:07:22.386 A:middle
App 特定的 UI 来选择

00:07:24.016 --> 00:07:25.436 A:middle
做个提醒

00:07:25.436 --> 00:07:27.006 A:middle
这些字体只能用于设计

00:07:27.006 --> 00:07:27.556 A:middle
不能用于部署

00:07:28.066 --> 00:07:31.296 A:middle
那你们如何使用这些标志呢

00:07:31.546 --> 00:07:33.196 A:middle
你如何访问它们

00:07:33.196 --> 00:07:34.076 A:middle
并将其运用到自己的设计中呢

00:07:35.186 --> 00:07:37.356 A:middle
为了帮助你们

00:07:37.426 --> 00:07:39.536 A:middle
我们开发了一个名字叫做

00:07:39.586 --> 00:07:42.116 A:middle
SF Symbols 的新 App

00:07:42.116 --> 00:07:43.406 A:middle
这就是它的样子

00:07:44.066 --> 00:07:45.396 A:middle
它会通过集合视图的形式

00:07:45.396 --> 00:07:48.906 A:middle
或是表格视图的形式

00:07:48.906 --> 00:07:49.946 A:middle
让你浏览标志

00:07:51.356 --> 00:07:52.696 A:middle
你可以通过名称搜索

00:07:52.696 --> 00:07:56.476 A:middle
也可以预览字体中

00:07:56.916 --> 00:07:59.686 A:middle
不同的粗度

00:08:05.706 --> 00:08:07.136 A:middle
下载带有新字体的 

00:08:07.136 --> 00:08:10.126 A:middle
SF Symbols App

00:08:10.936 --> 00:08:12.826 A:middle
说到设计

00:08:12.826 --> 00:08:14.446 A:middle
设计资源 -- 在 developer.apple.com 中

00:08:14.446 --> 00:08:17.416 A:middle
新的设计资源

00:08:17.416 --> 00:08:18.516 A:middle
同样使用标志

00:08:19.206 --> 00:08:21.366 A:middle
它们通过名称来引用

00:08:24.996 --> 00:08:27.406 A:middle
一些系统图标现在

00:08:27.466 --> 00:08:28.186 A:middle
也是标志

00:08:28.186 --> 00:08:29.616 A:middle
如果你要使用这些

00:08:29.616 --> 00:08:31.476 A:middle
它们会自动

00:08:31.766 --> 00:08:32.716 A:middle
使用新设计

00:08:33.405 --> 00:08:37.035 A:middle
现在我们已经了解了

00:08:37.035 --> 00:08:38.246 A:middle
如何寻找有效的标志

00:08:38.246 --> 00:08:40.236 A:middle
让我们来看一个真实的例子

00:08:40.655 --> 00:08:43.926 A:middle
这是一个你可能需要

00:08:43.926 --> 00:08:45.016 A:middle
为你的 App 装配的一个规范

00:08:46.476 --> 00:08:47.966 A:middle
你可以看到在这之前

00:08:47.966 --> 00:08:50.866 A:middle
你也许需要这样做 -- 

00:08:51.016 --> 00:08:52.166 A:middle
明确规定你的图像

00:08:52.616 --> 00:08:54.756 A:middle
矩形的范围 明确的

00:08:54.756 --> 00:08:57.986 A:middle
填充和插入 现在 

00:08:58.076 --> 00:08:59.536 A:middle
标志明显地简化了范式

00:09:01.696 --> 00:09:03.136 A:middle
它的磅值和对齐

00:09:04.286 --> 00:09:06.416 A:middle
如果合适的话 

00:09:06.416 --> 00:09:06.956 A:middle
也可以是其粗细和缩放大小

00:09:09.756 --> 00:09:11.006 A:middle
我和 Tom 一起在研发这个 App

00:09:11.036 --> 00:09:13.076 A:middle
第二行的标志

00:09:13.076 --> 00:09:14.536 A:middle
有点太普通了

00:09:14.536 --> 00:09:16.606 A:middle
这是一个饮料的清单

00:09:16.606 --> 00:09:17.706 A:middle
所以我想把它换成

00:09:17.706 --> 00:09:18.686 A:middle
更合适的标志

00:09:18.686 --> 00:09:20.106 A:middle
让其可以表达

00:09:20.106 --> 00:09:21.516 A:middle
这些是可口的热饮

00:09:22.636 --> 00:09:23.966 A:middle
所以我要把它给换了

00:09:23.966 --> 00:09:27.306 A:middle
我想把它换成茶杯

00:09:28.956 --> 00:09:30.206 A:middle
这个茶杯看起来很好

00:09:30.856 --> 00:09:32.776 A:middle
我相信 Tom 也会喜欢的

00:09:33.256 --> 00:09:34.866 A:middle
这并没有包含在

00:09:34.866 --> 00:09:36.836 A:middle
我们提供的标志中

00:09:38.046 --> 00:09:39.986 A:middle
SF Symbols App 让你可以

00:09:39.986 --> 00:09:41.686 A:middle
自定义并创建

00:09:41.686 --> 00:09:42.286 A:middle
你自己的标志

00:09:43.756 --> 00:09:45.596 A:middle
为了实现这一点

00:09:45.596 --> 00:09:47.096 A:middle
你需要从 App 中

00:09:47.096 --> 00:09:50.236 A:middle
输出标志 

00:09:50.236 --> 00:09:52.586 A:middle
标志也可以通过模板来输出

00:09:54.676 --> 00:09:56.306 A:middle
这就是模板的样子

00:09:57.516 --> 00:09:59.056 A:middle
这拥有标志所有的粗度和 

00:09:59.056 --> 00:10:00.166 A:middle
所有的大小

00:10:00.696 --> 00:10:04.766 A:middle
这个模板是 SVG 格式的

00:10:05.636 --> 00:10:07.416 A:middle
这意味着它可以被

00:10:07.416 --> 00:10:08.506 A:middle
大多数设计工具所编辑

00:10:09.056 --> 00:10:12.776 A:middle
它被专门设计成

00:10:12.776 --> 00:10:14.366 A:middle
在任何设计阶段

00:10:14.366 --> 00:10:17.476 A:middle
都有导向性且可使用

00:10:17.696 --> 00:10:19.856 A:middle
相同的模板也同样

00:10:19.856 --> 00:10:21.886 A:middle
作为源构件

00:10:21.966 --> 00:10:22.936 A:middle
直接运用在 Xcode 中

00:10:24.026 --> 00:10:25.316 A:middle
再也不会有成千上万的

00:10:25.406 --> 00:10:26.496 A:middle
文件四处浮动

00:10:27.916 --> 00:10:29.156 A:middle
那接下来就让我们看看我们是如何制作

00:10:29.266 --> 00:10:29.586 A:middle
茶杯标志的

00:10:30.056 --> 00:10:32.926 A:middle
首先 我们来到 SF Symbols App

00:10:32.926 --> 00:10:35.606 A:middle
我们先寻找一个好的起点

00:10:36.306 --> 00:10:37.806 A:middle
我们的茶杯被一个圆圈

00:10:37.836 --> 00:10:39.336 A:middle
所包围 所以我觉得

00:10:39.336 --> 00:10:40.346 A:middle
圆圈是一个很好的起点

00:10:40.996 --> 00:10:42.826 A:middle
所以我检索圆圈

00:10:43.306 --> 00:10:44.766 A:middle
找到了

00:10:44.826 --> 00:10:46.706 A:middle
我可以选择它

00:10:46.706 --> 00:10:48.176 A:middle
并从文件菜单导出样式

00:10:48.786 --> 00:10:52.506 A:middle
我可以保存它

00:10:52.506 --> 00:10:53.496 A:middle
现在就可以自定义了

00:10:54.146 --> 00:10:56.726 A:middle
在我的编辑器中打开

00:10:57.176 --> 00:10:59.716 A:middle
请注意这些图层都有

00:10:59.826 --> 00:11:00.536 A:middle
不同的名称

00:11:01.306 --> 00:11:02.576 A:middle
这些名称很重要

00:11:02.666 --> 00:11:04.516 A:middle
它们可以识别

00:11:04.516 --> 00:11:05.736 A:middle
标志的每个个性化配置

00:11:05.736 --> 00:11:06.946 A:middle
粗细 缩放大小

00:11:06.946 --> 00:11:09.026 A:middle
所以在你画画

00:11:09.026 --> 00:11:10.386 A:middle
来保证你的轮廓

00:11:10.456 --> 00:11:12.366 A:middle
是在合适的那一层时

00:11:12.366 --> 00:11:14.416 A:middle
需要非常仔细

00:11:14.416 --> 00:11:17.256 A:middle
现在我要开始我的自定义工作了

00:11:17.256 --> 00:11:19.676 A:middle
我把茶杯标志

00:11:19.796 --> 00:11:21.426 A:middle
放在中等大小的常规层

00:11:22.246 --> 00:11:24.156 A:middle
我要保证它居中

00:11:24.156 --> 00:11:27.756 A:middle
同时光学上是平衡的

00:11:27.756 --> 00:11:30.526 A:middle
然后我把它缩小

00:11:30.526 --> 00:11:33.676 A:middle
为了笔画粗细

00:11:33.676 --> 00:11:34.966 A:middle
我将它设为小的常规大小

00:11:35.016 --> 00:11:37.166 A:middle
接着我重复这个过程

00:11:37.386 --> 00:11:39.076 A:middle
我放大它的粗度

00:11:39.076 --> 00:11:40.826 A:middle
将其居中 保证它

00:11:40.826 --> 00:11:43.006 A:middle
在大的常规大小中也很好看

00:11:43.156 --> 00:11:45.046 A:middle
然后继续直到

00:11:45.176 --> 00:11:47.216 A:middle
这个样式完成

00:11:48.416 --> 00:11:50.466 A:middle
现在 我已经准备好

00:11:50.466 --> 00:11:54.366 A:middle
将 SVG 从设计工具中导出
 
00:11:54.556 --> 00:11:56.166 A:middle
我可以把接下来的事情交给 Tom

00:11:56.236 --> 00:11:59.356 A:middle
我相信他会很好地完成

00:11:59.356 --> 00:12:01.626 A:middle
实际上 他不需要做太多

00:12:01.836 --> 00:12:03.546 A:middle
它已经准备好按照原本的样子

00:12:03.546 --> 00:12:04.456 A:middle
被拖入 Xcode

00:12:10.516 --> 00:12:12.056 A:middle
所以如果你不想要

00:12:12.056 --> 00:12:14.086 A:middle
为你的标志提供

00:12:14.086 --> 00:12:16.536 A:middle
所有的粗度 你至少得

00:12:16.656 --> 00:12:18.716 A:middle
在中等大小中提供常规号

00:12:19.456 --> 00:12:22.526 A:middle
然后是常规号的大小

00:12:24.006 --> 00:12:26.046 A:middle
然后是针对粗体文本相同的粗体

00:12:26.356 --> 00:12:28.986 A:middle
如果你想要支撑

00:12:28.986 --> 00:12:30.586 A:middle
所有的动态类型

00:12:30.886 --> 00:12:34.836 A:middle
那也可以包含中等和粗体

00:12:35.486 --> 00:12:36.846 A:middle
当然 如果你想要

00:12:36.846 --> 00:12:38.376 A:middle
考虑你 App 的

00:12:38.376 --> 00:12:39.166 A:middle
排版调色

00:12:39.586 --> 00:12:42.156 A:middle
你可能会需要更细或更粗的粗度

00:12:43.026 --> 00:12:47.156 A:middle
简要概述一下 

00:12:47.156 --> 00:12:49.116 A:middle
我们需要了解一个

00:12:49.116 --> 00:12:50.016 A:middle
与 San Francisco 匹配的新标志库

00:12:51.036 --> 00:12:53.806 A:middle
它们是矢量图

00:12:53.806 --> 00:12:55.316 A:middle
拥有不同的粗度和大小

00:12:56.506 --> 00:12:58.366 A:middle
你可以通过 SF Symbols App

00:12:58.366 --> 00:12:59.106 A:middle
浏览它们

00:13:01.966 --> 00:13:03.806 A:middle
你们的规格中使用它们 如何通过名字检索

00:13:03.966 --> 00:13:05.056 A:middle
如何指定它们的

00:13:05.106 --> 00:13:07.796 A:middle
位置 最后就是

00:13:07.796 --> 00:13:09.606 A:middle
你们可以使用从 SF Symbols App 导出的

00:13:09.606 --> 00:13:11.546 A:middle
SVG 样板来

00:13:11.546 --> 00:13:12.076 A:middle
自定义标志

00:13:14.116 --> 00:13:15.376 A:middle
现在 我想邀请 Tom

00:13:15.376 --> 00:13:16.826 A:middle
来到台上 他会告诉你们

00:13:16.856 --> 00:13:18.206 A:middle
如何在代码中

00:13:18.206 --> 00:13:18.886 A:middle
使用这些标志

00:13:19.516 --> 00:13:21.546 A:middle
[掌声]

00:13:22.046 --> 00:13:22.346 A:middle
&gt;&gt; 谢谢 Paolo

00:13:23.516 --> 00:13:26.156 A:middle
[掌声]

00:13:26.656 --> 00:13:28.856 A:middle
我真的很激动

00:13:28.986 --> 00:13:30.396 A:middle
我想做的第一件事就是

00:13:30.396 --> 00:13:32.736 A:middle
看看能否在我自己的 App 中

00:13:32.736 --> 00:13:34.226 A:middle
使用这些标志

00:13:34.756 --> 00:13:36.386 A:middle
这是一个简单的幻灯片 App

00:13:36.386 --> 00:13:38.596 A:middle
它有一些 UI 

00:13:38.706 --> 00:13:39.956 A:middle
可以让你改变速度

00:13:40.406 --> 00:13:42.236 A:middle
但我真的不太喜欢

00:13:42.316 --> 00:13:43.296 A:middle
这些图片

00:13:43.716 --> 00:13:45.276 A:middle
它们非常基础 我们来看一看

00:13:45.436 --> 00:13:46.526 A:middle
它们很适合被替换

00:13:46.866 --> 00:13:48.136 A:middle
我们来看一下如果在

00:13:48.136 --> 00:13:50.616 A:middle
Symbols App 中

00:13:50.616 --> 00:13:51.136 A:middle
找一个标志会怎么样

00:13:51.136 --> 00:13:53.856 A:middle
首先启动 SF Symbols

00:13:53.856 --> 00:13:55.506 A:middle
搜索乌龟

00:13:56.096 --> 00:13:58.056 A:middle
因为我们可以使用这个

00:13:58.056 --> 00:13:59.226 A:middle
典型的乌龟和兔子

00:14:01.686 --> 00:14:02.266 A:middle
我可以用这个

00:14:02.266 --> 00:14:02.746 A:middle
这很不错

00:14:04.086 --> 00:14:05.056 A:middle
兔子也在这

00:14:05.316 --> 00:14:07.576 A:middle
完美 接下来 我要如何使用它们呢

00:14:07.916 --> 00:14:08.686 A:middle
非常简单

00:14:08.686 --> 00:14:10.316 A:middle
我们要介绍一个名为 UIImage(systemName 的

00:14:10.316 --> 00:14:12.266 A:middle
新的 API 

00:14:12.316 --> 00:14:15.376 A:middle
它和现有的 API 非常相似

00:14:15.836 --> 00:14:18.016 A:middle
你只需要放入

00:14:18.016 --> 00:14:19.376 A:middle
你从 SF Symbols App 复制的名称

00:14:19.376 --> 00:14:20.546 A:middle
这样就可以了

00:14:20.546 --> 00:14:22.706 A:middle
如果我们构建并运行 -- 哇 砰

00:14:23.516 --> 00:14:25.526 A:middle
看起来非常好

00:14:25.886 --> 00:14:26.896 A:middle
这只是两行代码

00:14:27.146 --> 00:14:30.426 A:middle
完美 Paolo 发给了我一个规范

00:14:30.536 --> 00:14:31.496 A:middle
因为我们一起在开发

00:14:31.496 --> 00:14:33.106 A:middle
这个 App

00:14:33.106 --> 00:14:34.556 A:middle
他真的不能再把

00:14:34.596 --> 00:14:35.616 A:middle
热比利时巧克力放在那了

00:14:35.676 --> 00:14:36.726 A:middle
因为我现在感觉自己就是

00:14:36.786 --> 00:14:37.436 A:middle
热比利时巧克力

00:14:38.306 --> 00:14:40.316 A:middle
但是他给了我这个规范

00:14:40.316 --> 00:14:41.326 A:middle
这看起来和之前的

00:14:41.326 --> 00:14:43.846 A:middle
不太一样

00:14:43.846 --> 00:14:45.206 A:middle
这里信息更少

00:14:45.206 --> 00:14:45.706 A:middle
我喜欢这个

00:14:45.736 --> 00:14:47.356 A:middle
这减轻了我的工作量

00:14:47.356 --> 00:14:49.816 A:middle
不过让我们集中注意力在图片上

00:14:49.816 --> 00:14:51.896 A:middle
因为这里有一个新的茶杯

00:14:52.026 --> 00:14:53.566 A:middle
他还给了我一个文件

00:14:53.966 --> 00:14:55.946 A:middle
我需要把这个 teacup.svg 文件

00:14:55.946 --> 00:14:57.446 A:middle
导入到我的资源目录

00:14:57.446 --> 00:15:00.576 A:middle
这当然是一个茶杯

00:15:00.696 --> 00:15:01.426 A:middle
还有很多

00:15:01.426 --> 00:15:02.686 A:middle
他真的花了很多精力

00:15:02.686 --> 00:15:04.676 A:middle
这就是我喜欢 Paolo 的原因

00:15:04.746 --> 00:15:06.816 A:middle
他非常注意细节

00:15:09.056 --> 00:15:10.516 A:middle
现在我们可以看到我的图片在这里

00:15:10.516 --> 00:15:12.366 A:middle
我只需要使用 UIImage(named

00:15:12.366 --> 00:15:13.226 A:middle
来获得我的茶杯标志

00:15:13.226 --> 00:15:15.186 A:middle
如果我们运行这个 得到的是这个

00:15:15.606 --> 00:15:17.256 A:middle
这真是一个又好看又清楚的茶杯

00:15:17.316 --> 00:15:18.916 A:middle
这就是我想要的

00:15:20.106 --> 00:15:21.146 A:middle
但是我不知道你们是否注意到

00:15:21.146 --> 00:15:22.386 A:middle
当我导入这个文件时

00:15:22.386 --> 00:15:26.106 A:middle
在我的资源目录中

00:15:26.106 --> 00:15:27.146 A:middle
有两个茶杯

00:15:27.476 --> 00:15:29.516 A:middle
你可以有两张

00:15:29.826 --> 00:15:31.256 A:middle
有着相同名称的图片

00:15:31.376 --> 00:15:33.386 A:middle
但是它们的类型不同

00:15:34.216 --> 00:15:35.686 A:middle
让我们回头看一看

00:15:35.686 --> 00:15:36.976 A:middle
解释一下正在发生的事

00:15:36.976 --> 00:15:37.986 A:middle
我们要使用信封

00:15:38.076 --> 00:15:39.776 A:middle
因为茶杯不是一个很好的例子

00:15:41.276 --> 00:15:43.106 A:middle
到现在为止 UIImage(named

00:15:43.396 --> 00:15:44.246 A:middle
还是很简单的

00:15:44.286 --> 00:15:45.486 A:middle
在资源库中有一个图像

00:15:45.486 --> 00:15:47.216 A:middle
你可以使用 API

00:15:47.296 --> 00:15:47.876 A:middle
将其导出

00:15:48.996 --> 00:15:50.266 A:middle
而标志的情况

00:15:50.266 --> 00:15:51.106 A:middle
相对于复杂一些

00:15:52.336 --> 00:15:53.676 A:middle
事实上你可以拥有一个

00:15:53.676 --> 00:15:54.856 A:middle
有相同名称的图片

00:15:54.916 --> 00:15:56.196 A:middle
但是它可能有三个版本

00:15:56.196 --> 00:15:57.916 A:middle
你可能会有一个

00:15:57.916 --> 00:15:58.566 A:middle
有这个名称的系统标志

00:15:58.566 --> 00:16:00.126 A:middle
还有一个有这个名称的

00:16:00.126 --> 00:16:01.386 A:middle
自定义标志

00:16:01.546 --> 00:16:03.826 A:middle
你之前的非标志图片也

00:16:05.016 --> 00:16:05.206 A:middle
依然存在

00:16:05.326 --> 00:16:07.556 A:middle
对于系统图片来说

00:16:07.556 --> 00:16:07.936 A:middle
这一点问题都没有

00:16:09.006 --> 00:16:10.136 A:middle
因为它们有单独的 API

00:16:10.136 --> 00:16:10.926 A:middle
所以它们在不同的

00:16:10.926 --> 00:16:12.076 A:middle
名称空间内

00:16:12.076 --> 00:16:13.236 A:middle
所以它们之间

00:16:13.236 --> 00:16:13.876 A:middle
没有冲突

00:16:14.346 --> 00:16:15.966 A:middle
这也意味着使用这个 API

00:16:15.966 --> 00:16:17.546 A:middle
不能获得一个自定义标志

00:16:17.546 --> 00:16:19.446 A:middle
你也不能使用 UIImage(named API

00:16:19.446 --> 00:16:21.566 A:middle
来获得一个

00:16:21.616 --> 00:16:21.796 A:middle
系统标志

00:16:21.796 --> 00:16:23.096 A:middle
它们是完全分开的

00:16:23.566 --> 00:16:25.996 A:middle
对于自定义标志

00:16:25.996 --> 00:16:28.676 A:middle
这是不同的

00:16:28.776 --> 00:16:30.526 A:middle
我们可以加载优先级

00:16:30.526 --> 00:16:32.376 A:middle
所以我们会先寻找一个

00:16:32.376 --> 00:16:32.796 A:middle
标志图片

00:16:32.896 --> 00:16:34.126 A:middle
如果我们找到了一个

00:16:34.126 --> 00:16:35.806 A:middle
我们就会返回另一个

00:16:35.836 --> 00:16:37.006 A:middle
不然我们就会寻找非标志图像

00:16:37.006 --> 00:16:38.286 A:middle
然后你们就会得到

00:16:38.286 --> 00:16:38.486 A:middle
那个图像

00:16:39.096 --> 00:16:39.906 A:middle
现在 你可能会说

00:16:39.906 --> 00:16:41.126 A:middle
这真麻烦

00:16:41.306 --> 00:16:42.616 A:middle
如果我两个都想要怎么办

00:16:43.056 --> 00:16:44.366 A:middle
好消息就是

00:16:45.706 --> 00:16:48.006 A:middle
运用相同的代码

00:16:48.076 --> 00:16:50.256 A:middle
我可以在 iOS 12 或者早期系统

00:16:50.256 --> 00:16:51.546 A:middle
运行我的 App

00:16:51.546 --> 00:16:53.916 A:middle
我将获得旧的图像 在这个例子中

00:16:54.426 --> 00:16:54.546 A:middle
就是点阵图

00:16:55.156 --> 00:16:57.656 A:middle
如果我在 iOS 13 或以上的系统运行我的 App

00:16:57.656 --> 00:16:59.046 A:middle
我将获得标志图像

00:16:59.046 --> 00:17:00.546 A:middle
所以我不需要编写

00:17:00.606 --> 00:17:01.986 A:middle
任何版本检测代码

00:17:01.986 --> 00:17:02.986 A:middle
来为不同的 OS 系统

00:17:02.986 --> 00:17:03.696 A:middle
获取不同的图像

00:17:04.366 --> 00:17:06.816 A:middle
只需要提供相同名称的两个图像

00:17:06.886 --> 00:17:08.915 A:middle
它就可以立刻使用

00:17:10.016 --> 00:17:11.945 A:middle
如果你想要在 iOS 13 或以上的系统

00:17:11.945 --> 00:17:13.665 A:middle
使用老的图片

00:17:13.665 --> 00:17:15.665 A:middle
你需要复制或重命名

00:17:19.076 --> 00:17:20.925 A:middle
让我们回到我们的幻灯片

00:17:20.986 --> 00:17:23.236 A:middle
我们还需要说的一件事

00:17:23.236 --> 00:17:26.356 A:middle
就是这个茶杯的配置

00:17:26.646 --> 00:17:27.816 A:middle
它应该是大的

00:17:28.836 --> 00:17:29.536 A:middle
如何做到呢

00:17:29.536 --> 00:17:31.646 A:middle
我们创建了一个引进的新的类型

00:17:31.646 --> 00:17:33.286 A:middle
SymbolConfiguration

00:17:33.836 --> 00:17:35.376 A:middle
我们将它创建为

00:17:35.376 --> 00:17:35.726 A:middle
大尺寸的

00:17:36.376 --> 00:17:38.536 A:middle
其它对象上的

00:17:38.536 --> 00:17:39.496 A:middle
配置属性是

00:17:39.496 --> 00:17:41.326 A:middle
未指定的

00:17:41.496 --> 00:17:42.836 A:middle
这里只有大缩放比例

00:17:42.836 --> 00:17:44.356 A:middle
然后我们可以使用

00:17:44.356 --> 00:17:46.136 A:middle
imageView 来展示我们的图像

00:17:46.376 --> 00:17:47.336 A:middle
在 UIImageView 上

00:17:47.336 --> 00:17:48.286 A:middle
有一个名为 preferredSymbolConfiguration

00:17:48.416 --> 00:17:49.866 A:middle
新的 UIImageView

00:17:50.426 --> 00:17:51.556 A:middle
它将指示 imageView 

00:17:51.556 --> 00:17:53.246 A:middle
使用这些配置

00:17:53.616 --> 00:17:54.446 A:middle
来呈现一个标志图像

00:17:54.676 --> 00:17:56.256 A:middle
它对于非标志图像

00:17:56.256 --> 00:17:57.296 A:middle
是没有影响的

00:17:57.836 --> 00:18:01.266 A:middle
如果我们运行这个

00:18:01.516 --> 00:18:02.946 A:middle
看看缩放大小的变化带来的改变

00:18:06.456 --> 00:18:07.736 A:middle
现在 你还可以使用

00:18:07.736 --> 00:18:11.436 A:middle
这个配置来改变

00:18:11.486 --> 00:18:12.056 A:middle
标志的尺大小

00:18:12.516 --> 00:18:14.206 A:middle
你指定一个磅值

00:18:14.206 --> 00:18:15.776 A:middle
也可以是粗度或缩放大小

00:18:16.386 --> 00:18:19.356 A:middle
重要的一点是

00:18:19.356 --> 00:18:22.056 A:middle
标志的磅值

00:18:22.236 --> 00:18:23.126 A:middle
不是屏幕的磅值

00:18:23.686 --> 00:18:26.686 A:middle
标志的磅值是

00:18:26.686 --> 00:18:27.916 A:middle
字体的大小

00:18:27.916 --> 00:18:29.336 A:middle
它们本身是排版的

00:18:30.086 --> 00:18:31.446 A:middle
屏幕磅值可以描述

00:18:31.446 --> 00:18:32.736 A:middle
图片的尺寸

00:18:32.736 --> 00:18:35.966 A:middle
它的宽度和高度

00:18:36.216 --> 00:18:37.636 A:middle
一图抵千言

00:18:37.756 --> 00:18:39.916 A:middle
我们来直观地看一下

00:18:39.916 --> 00:18:41.396 A:middle
比如说 在 “Favorite” 文本旁的

00:18:41.456 --> 00:18:44.156 A:middle
圆形标志

00:18:44.556 --> 00:18:45.996 A:middle
它们都被指定使用

00:18:46.056 --> 00:18:47.196 A:middle
28 磅值的系统字体

00:18:47.966 --> 00:18:49.396 A:middle
你可能会希望这个图片是

00:18:49.396 --> 00:18:51.256 A:middle
28 x 28 的尺寸

00:18:51.366 --> 00:18:53.226 A:middle
但结果并不是

00:18:53.366 --> 00:18:54.806 A:middle
这些数值

00:18:54.856 --> 00:18:56.366 A:middle
才是这个标志

00:18:56.366 --> 00:18:57.376 A:middle
在这个配置下的正确数值

00:18:57.646 --> 00:18:59.156 A:middle
图片不是方形的

00:18:59.236 --> 00:19:03.186 A:middle
而是圆形的

00:19:03.336 --> 00:19:04.806 A:middle
你需要放弃

00:19:04.856 --> 00:19:07.376 A:middle
使用尺寸来

00:19:07.376 --> 00:19:07.936 A:middle
描述标志

00:19:07.936 --> 00:19:10.016 A:middle
你必须使用

00:19:10.066 --> 00:19:11.396 A:middle
标志的磅值

00:19:11.396 --> 00:19:12.356 A:middle
而且你可以将其视为一个文本

00:19:12.356 --> 00:19:13.326 A:middle
因为如果你有一个文本

00:19:13.386 --> 00:19:15.026 A:middle
你会使用字体大小来

00:19:15.026 --> 00:19:17.646 A:middle
描述它 而不是使用尺寸

00:19:18.276 --> 00:19:22.216 A:middle
这也是一样

00:19:22.426 --> 00:19:23.616 A:middle
另外一个配置标志的

00:19:23.686 --> 00:19:25.296 A:middle
方法就是使用文本风格

00:19:25.296 --> 00:19:27.536 A:middle
这就意味着

00:19:27.536 --> 00:19:28.836 A:middle
标志会根据

00:19:28.836 --> 00:19:30.096 A:middle
动态文本风格规则运转

00:19:30.096 --> 00:19:31.486 A:middle
它会和拥有文本风格的

00:19:31.486 --> 00:19:33.206 A:middle
文本一样运转

00:19:34.106 --> 00:19:35.816 A:middle
它与文本风格匹配得

00:19:36.166 --> 00:19:36.676 A:middle
非常好

00:19:37.506 --> 00:19:39.596 A:middle
imageView 会自动地

00:19:39.646 --> 00:19:41.646 A:middle
改变图像的尺寸

00:19:41.646 --> 00:19:43.646 A:middle
还会在运行的时候

00:19:43.646 --> 00:19:45.026 A:middle
根据 App 的

00:19:45.066 --> 00:19:46.366 A:middle
偏好内容尺寸目录

00:19:46.426 --> 00:19:46.946 A:middle
来查找正确的尺寸

00:19:47.446 --> 00:19:50.506 A:middle
在实际操作中你会看到

00:19:50.546 --> 00:19:52.236 A:middle
比如这个文本很好看

00:19:52.236 --> 00:19:53.746 A:middle
字体也很大 那么标志也

00:19:53.806 --> 00:19:54.326 A:middle
随之缩放

00:19:54.326 --> 00:19:55.846 A:middle
它们拥有非常好看的

00:19:55.846 --> 00:19:56.306 A:middle
相同的粗度

00:19:59.176 --> 00:20:00.796 A:middle
所以图片可以

00:20:00.796 --> 00:20:01.756 A:middle
动态地改变大小 我们必须要谈到这个

00:20:01.756 --> 00:20:02.896 A:middle
因为你一般都会想要

00:20:02.896 --> 00:20:04.706 A:middle
通过宽度和高度

00:20:04.706 --> 00:20:05.256 A:middle
压缩一个图片

00:20:06.186 --> 00:20:08.826 A:middle
因为一个标志总是会渲染 -- 

00:20:09.126 --> 00:20:11.106 A:middle
它是一个矢量

00:20:12.136 --> 00:20:13.706 A:middle
你可能会想要

00:20:13.756 --> 00:20:14.816 A:middle
指定它的宽度和高度

00:20:14.946 --> 00:20:16.396 A:middle
但这并不是一个好主意

00:20:17.056 --> 00:20:18.876 A:middle
首先 这不是正确的

00:20:19.516 --> 00:20:21.126 A:middle
你可以看到在屏幕快照上

00:20:21.126 --> 00:20:23.046 A:middle
标志被描述为

00:20:23.046 --> 00:20:24.776 A:middle
17 磅值的标志

00:20:24.776 --> 00:20:27.456 A:middle
这可以说是非常小

00:20:27.456 --> 00:20:28.996 A:middle
但它还是被视为一个大的图片

00:20:29.666 --> 00:20:30.806 A:middle
因为宽度和高度

00:20:30.806 --> 00:20:31.046 A:middle
在那摆着

00:20:31.806 --> 00:20:32.836 A:middle
但是你也可以看到

00:20:32.836 --> 00:20:34.496 A:middle
它不是完全居中的

00:20:34.496 --> 00:20:37.436 A:middle
它有点偏左 也有点居上

00:20:37.576 --> 00:20:40.856 A:middle
第二 这不是性能 --

00:20:40.856 --> 00:20:41.916 A:middle
这不是展示一个

00:20:41.916 --> 00:20:43.776 A:middle
标志图像

00:20:43.776 --> 00:20:44.626 A:middle
最具性能的方法

00:20:45.636 --> 00:20:49.676 A:middle
所以你要做的

00:20:49.706 --> 00:20:50.936 A:middle
是不压缩标志图像

00:20:50.936 --> 00:20:52.336 A:middle
并让它保留

00:20:52.336 --> 00:20:52.696 A:middle
原始的大小

00:20:53.416 --> 00:20:57.526 A:middle
在这个例子中 我们把

00:20:57.526 --> 00:20:59.736 A:middle
标志的大小改成了 500 磅

00:20:59.796 --> 00:21:00.756 A:middle
以此来匹配

00:21:00.756 --> 00:21:02.496 A:middle
我们之前的尺寸

00:21:02.496 --> 00:21:04.006 A:middle
这样看起来好多了

00:21:04.166 --> 00:21:06.596 A:middle
因为它的居中比之前要好

00:21:07.336 --> 00:21:08.846 A:middle
尺寸也正确

00:21:10.356 --> 00:21:12.296 A:middle
性能也更多

00:21:16.076 --> 00:21:17.806 A:middle
如果你需要一个固定的尺寸

00:21:18.136 --> 00:21:19.256 A:middle
设置磅值大小

00:21:19.256 --> 00:21:21.616 A:middle
但是让标志对标志配置

00:21:21.776 --> 00:21:23.606 A:middle
作出反应

00:21:23.606 --> 00:21:25.336 A:middle
因为即便是大的

00:21:25.336 --> 00:21:26.616 A:middle
标志配置或小型的

00:21:26.616 --> 00:21:27.756 A:middle
配置都可能对

00:21:27.756 --> 00:21:29.446 A:middle
相同标志的尺寸

00:21:29.446 --> 00:21:30.096 A:middle
带来巨大的改变

00:21:30.726 --> 00:21:35.456 A:middle
现在 这里有很多配置

00:21:35.516 --> 00:21:38.426 A:middle
我们设定了

00:21:38.426 --> 00:21:39.916 A:middle
这些标志 -- 

00:21:39.916 --> 00:21:41.106 A:middle
Paolo 之前提到了

00:21:41.176 --> 00:21:42.646 A:middle
这些标志可以

00:21:42.646 --> 00:21:44.406 A:middle
与 San Francisco 即我们的系统字体 

00:21:44.436 --> 00:21:46.286 A:middle
兼容 不过它们可以与任何字体兼容

00:21:46.486 --> 00:21:48.646 A:middle
所以你可以使用这个 API

00:21:49.826 --> 00:21:51.406 A:middle
SymbolConfiguration(font

00:21:51.406 --> 00:21:52.526 A:middle
来创造一个可以

00:21:52.586 --> 00:21:53.806 A:middle
与你提供的字体相匹配

00:21:54.606 --> 00:21:56.056 A:middle
并与系统字体兼容的配置

00:21:56.526 --> 00:21:58.396 A:middle
它可以使用动态类型

00:21:58.396 --> 00:21:59.626 A:middle
字体 也可以使用

00:21:59.626 --> 00:22:00.346 A:middle
自定义字体

00:22:00.686 --> 00:22:02.616 A:middle
尤其是对于自定义字体来说

00:22:02.996 --> 00:22:04.046 A:middle
它会创造一个

00:22:04.046 --> 00:22:06.716 A:middle
比你通过手动复制

00:22:06.716 --> 00:22:07.896 A:middle
字体的数值

00:22:07.896 --> 00:22:09.346 A:middle
到你的配置中

00:22:09.346 --> 00:22:10.716 A:middle
要更保真的配置

00:22:11.446 --> 00:22:12.756 A:middle
所以最好使用

00:22:13.176 --> 00:22:13.926 A:middle
自定义字体

00:22:14.326 --> 00:22:16.416 A:middle
当你已经有了一个文本

00:22:16.416 --> 00:22:19.266 A:middle
或者一个配置好字体的标签

00:22:19.356 --> 00:22:20.246 A:middle
那就很容易

00:22:20.246 --> 00:22:22.726 A:middle
创造一个与字体相配的配置

00:22:26.766 --> 00:22:27.656 A:middle
关于配置的最后一件事

00:22:27.696 --> 00:22:29.896 A:middle
就是它们是不变的

00:22:29.896 --> 00:22:30.826 A:middle
你不能改变它们

00:22:30.876 --> 00:22:32.266 A:middle
如果你想要改变它们

00:22:32.266 --> 00:22:32.406 A:middle
怎么办呢

00:22:32.796 --> 00:22:33.826 A:middle
那你就得把它们结合起来

00:22:34.576 --> 00:22:35.346 A:middle
有一个方法叫

00:22:35.396 --> 00:22:37.396 A:middle
应用 它可以把

00:22:37.446 --> 00:22:38.866 A:middle
指定的配置应用至

00:22:38.866 --> 00:22:40.656 A:middle
你调用的配置上

00:22:40.656 --> 00:22:42.746 A:middle
我们会采用这个

00:22:43.386 --> 00:22:44.416 A:middle
你请求的配置

00:22:44.416 --> 00:22:46.896 A:middle
然后把所有特定的数值

00:22:46.896 --> 00:22:47.986 A:middle
运用到其他配置中

00:22:47.986 --> 00:22:50.506 A:middle
然后覆盖 或者在基本配置中

00:22:50.506 --> 00:22:51.236 A:middle
设定它们

00:22:51.236 --> 00:22:52.396 A:middle
你会得到一个

00:22:52.396 --> 00:22:54.066 A:middle
可以在其他地方使用的新的配置

00:22:54.486 --> 00:22:56.166 A:middle
但是它们是不可改变的

00:22:56.196 --> 00:22:57.976 A:middle
配置本身也不变

00:23:03.166 --> 00:23:04.756 A:middle
在我们的 App 中有一个

00:23:04.756 --> 00:23:06.676 A:middle
简单的评论部分

00:23:06.676 --> 00:23:08.476 A:middle
我们想要在下一个版本中

00:23:08.696 --> 00:23:11.406 A:middle
扩展这个部分

00:23:11.406 --> 00:23:12.236 A:middle
同时也开始用标志

00:23:12.426 --> 00:23:13.446 A:middle
我们在这里有头像的

00:23:13.446 --> 00:23:14.266 A:middle
占位符

00:23:14.266 --> 00:23:15.676 A:middle
我现在要把注意力集中在

00:23:15.676 --> 00:23:18.086 A:middle
一行上 Paolo 建议

00:23:18.206 --> 00:23:19.606 A:middle
换成一个新的标志

00:23:19.606 --> 00:23:20.386 A:middle
那么让我们试试看

00:23:21.636 --> 00:23:25.696 A:middle
这看起来好多了

00:23:25.876 --> 00:23:27.396 A:middle
一般来说 如果你想把图片

00:23:27.396 --> 00:23:28.746 A:middle
与文本对齐

00:23:28.746 --> 00:23:30.166 A:middle
你可以使用居中对齐

00:23:30.856 --> 00:23:32.716 A:middle
垂直居中对齐

00:23:32.796 --> 00:23:34.036 A:middle
在大部分情况下

00:23:34.036 --> 00:23:35.696 A:middle
它都会变成你预期的样子

00:23:35.696 --> 00:23:36.566 A:middle
这是最简单不过的了

00:23:36.656 --> 00:23:37.696 A:middle
标志其实

00:23:37.696 --> 00:23:39.176 A:middle
也是如此

00:23:39.446 --> 00:23:40.826 A:middle
你还是可以使用

00:23:40.896 --> 00:23:42.026 A:middle
垂直居中对齐

00:23:42.026 --> 00:23:42.816 A:middle
这实际上是首选的

00:23:44.756 --> 00:23:46.466 A:middle
UIKit 其实也把

00:23:46.466 --> 00:23:48.376 A:middle
排版信息运用到

00:23:48.436 --> 00:23:50.546 A:middle
标志中同时使用它让

00:23:50.546 --> 00:23:52.606 A:middle
标志和文本在

00:23:52.806 --> 00:23:53.746 A:middle
视觉上对齐

00:23:53.746 --> 00:23:55.706 A:middle
有时候两个元素的

00:23:55.706 --> 00:24:00.096 A:middle
框架可能并不会相匹配

00:24:00.096 --> 00:24:01.786 A:middle
所以这个居中是视觉上的

00:24:01.786 --> 00:24:05.066 A:middle
而不是绝对的 但是你

00:24:05.066 --> 00:24:05.656 A:middle
不需要做任何事

00:24:05.816 --> 00:24:07.476 A:middle
系统会帮助你

00:24:09.536 --> 00:24:11.156 A:middle
当然了 标签

00:24:11.156 --> 00:24:13.436 A:middle
可能有时候会不止一行

00:24:13.436 --> 00:24:15.516 A:middle
这时候垂直居中

00:24:15.516 --> 00:24:16.496 A:middle
也能起到很好的作用

00:24:17.306 --> 00:24:18.416 A:middle
标志也是一样

00:24:18.416 --> 00:24:19.326 A:middle
我们还是会使用排版信息

00:24:19.326 --> 00:24:20.836 A:middle
来适当地对齐

00:24:20.836 --> 00:24:22.746 A:middle
标签的中间

00:24:23.446 --> 00:24:24.996 A:middle
对于公开指示器

00:24:24.996 --> 00:24:26.206 A:middle
来说也很好

00:24:27.346 --> 00:24:29.236 A:middle
我们重新来看看这个画面

00:24:29.936 --> 00:24:31.256 A:middle
指示器就在

00:24:31.256 --> 00:24:32.366 A:middle
我所希望的地方

00:24:32.366 --> 00:24:35.196 A:middle
但我其实想要

00:24:35.196 --> 00:24:37.226 A:middle
头像占位符靠近我的第一行

00:24:37.316 --> 00:24:39.806 A:middle
所以我们来移动一下

00:24:39.806 --> 00:24:42.076 A:middle
在这个情况下 你可以使用

00:24:42.166 --> 00:24:44.106 A:middle
基线对齐 到现在为止

00:24:44.106 --> 00:24:45.686 A:middle
这可能有点

00:24:45.686 --> 00:24:46.386 A:middle
难以实现

00:24:46.756 --> 00:24:48.046 A:middle
你也可以选择边缘对齐

00:24:48.046 --> 00:24:48.956 A:middle
因为你知道文本和标签

00:24:48.956 --> 00:24:50.686 A:middle
会出现在那里

00:24:50.686 --> 00:24:52.146 A:middle
或者你也可以选择基线对齐

00:24:52.146 --> 00:24:53.716 A:middle
不过你必须算一算它的偏移

00:24:53.716 --> 00:24:54.336 A:middle
所以这也很奇怪

00:24:54.676 --> 00:24:55.746 A:middle
在这种情况下 针对标志

00:24:55.746 --> 00:24:58.016 A:middle
我们只需要基线对齐

00:24:58.016 --> 00:24:58.976 A:middle
就可以了

00:25:03.516 --> 00:25:07.956 A:middle
[掌声]

00:25:08.456 --> 00:25:09.576 A:middle
实际上你可以检测

00:25:09.576 --> 00:25:11.926 A:middle
基线 因为我们

00:25:12.156 --> 00:25:14.716 A:middle
在 UI Image 中引用了一个

00:25:14.716 --> 00:25:15.396 A:middle
名为 baselineOffsetFromBottom 的

00:25:15.986 --> 00:25:17.566 A:middle
新性能 它会展示

00:25:17.566 --> 00:25:19.686 A:middle
正如它所说的

00:25:19.686 --> 00:25:21.526 A:middle
从图像底部到基线的

00:25:21.526 --> 00:25:22.706 A:middle
偏移量数

00:25:23.416 --> 00:25:25.186 A:middle
这是一个可选的 CG 浮动

00:25:25.706 --> 00:25:27.236 A:middle
为什么呢 因为不是所有的图像

00:25:27.296 --> 00:25:27.906 A:middle
都有基线

00:25:28.046 --> 00:25:29.116 A:middle
标志在默认情况下有基线

00:25:29.166 --> 00:25:32.326 A:middle
但是其他的图像并没有

00:25:32.906 --> 00:25:34.356 A:middle
所以你需要检查

00:25:34.386 --> 00:25:36.356 A:middle
图像是否拥有基线

00:25:36.356 --> 00:25:37.406 A:middle
来看你能不能使用它

00:25:38.666 --> 00:25:39.486 A:middle
在 Objective-C 中

00:25:39.486 --> 00:25:40.336 A:middle
针对这个有另外的方法

00:25:40.706 --> 00:25:42.206 A:middle
因为它们并不是可选的

00:25:44.826 --> 00:25:46.456 A:middle
这些基线可能

00:25:46.576 --> 00:25:47.846 A:middle
有意想不到的值

00:25:47.846 --> 00:25:49.576 A:middle
在这种情况下 我们有两个

00:25:49.576 --> 00:25:49.966 A:middle
标志图像

00:25:50.536 --> 00:25:51.646 A:middle
它们与文本相邻

00:25:51.886 --> 00:25:53.056 A:middle
它们大小相同

00:25:53.056 --> 00:25:54.286 A:middle
拥有相同的基线

00:25:54.426 --> 00:25:56.136 A:middle
但如果我们展示出

00:25:56.136 --> 00:25:57.476 A:middle
它们的范围

00:25:57.476 --> 00:25:58.836 A:middle
我们会看到这个 v 形图案

00:25:58.836 --> 00:26:01.556 A:middle
比基线要高很多 而云朵则

00:26:01.556 --> 00:26:02.426 A:middle
正坐在基线上

00:26:03.316 --> 00:26:05.276 A:middle
如果我们看一眼它们的数值

00:26:05.276 --> 00:26:07.226 A:middle
就会发现与底部的

00:26:07.226 --> 00:26:08.456 A:middle
偏移量意味着

00:26:08.456 --> 00:26:10.046 A:middle
向上是正数偏移量

00:26:10.046 --> 00:26:11.726 A:middle
向下则是

00:26:11.726 --> 00:26:13.266 A:middle
负数偏移量

00:26:14.326 --> 00:26:16.726 A:middle
这也意味着

00:26:16.726 --> 00:26:18.046 A:middle
它对于一个

00:26:18.046 --> 00:26:19.516 A:middle
基线在其范围外的图像是有效的

00:26:20.056 --> 00:26:21.036 A:middle
比如这个例子中的 v 型图像 

00:26:21.886 --> 00:26:23.516 A:middle
如果你有一个

00:26:23.516 --> 00:26:24.636 A:middle
基线数值为零 

00:26:24.636 --> 00:26:25.766 A:middle
这并不代表你没有基线

00:26:25.896 --> 00:26:27.066 A:middle
这代表基线

00:26:27.066 --> 00:26:28.266 A:middle
和图像的底部

00:26:28.266 --> 00:26:28.686 A:middle
是持平的

00:26:29.236 --> 00:26:30.566 A:middle
这听起来很让人吃惊

00:26:30.566 --> 00:26:30.976 A:middle
但却有效

00:26:33.196 --> 00:26:35.646 A:middle
好消息是我们也

00:26:35.646 --> 00:26:38.366 A:middle
增加了 API 可以为图像

00:26:38.366 --> 00:26:38.876 A:middle
增加基线

00:26:39.386 --> 00:26:41.076 A:middle
你可以使用

00:26:41.116 --> 00:26:42.716 A:middle
withBaselineOffsetFromBottom

00:26:42.716 --> 00:26:43.936 A:middle
然后你就可以得到一个

00:26:44.006 --> 00:26:45.446 A:middle
你请求的

00:26:45.446 --> 00:26:46.886 A:middle
有基线配置的新的图像

00:26:47.146 --> 00:26:48.516 A:middle
再次 这是屏幕中的

00:26:48.516 --> 00:26:51.116 A:middle
离图像底部的偏移量

00:26:52.006 --> 00:26:53.196 A:middle
好消息就是

00:26:53.196 --> 00:26:54.966 A:middle
图像会和标志一样表现

00:26:54.966 --> 00:26:56.036 A:middle
这不是一个标志

00:26:56.036 --> 00:26:58.096 A:middle
但却会表现得像一个标志

00:26:58.096 --> 00:26:59.496 A:middle
因为它拥有一些

00:26:59.496 --> 00:27:00.136 A:middle
排版信息

00:27:00.726 --> 00:27:02.156 A:middle
所以你可以为标志图像

00:27:02.156 --> 00:27:05.146 A:middle
使用和普通图像一样的布局

00:27:05.506 --> 00:27:06.796 A:middle
你不需要检查

00:27:06.796 --> 00:27:07.876 A:middle
这个图像是否有基线

00:27:07.876 --> 00:27:09.926 A:middle
然后我使用这个布局

00:27:09.926 --> 00:27:11.456 A:middle
或者另外一个

00:27:11.456 --> 00:27:12.496 A:middle
这一切都更简单了

00:27:12.816 --> 00:27:15.216 A:middle
看看我们的例子

00:27:15.216 --> 00:27:17.486 A:middle
现在我们可以展示真实的头像

00:27:17.806 --> 00:27:20.176 A:middle
有些行则没有头像

00:27:20.236 --> 00:27:21.046 A:middle
这看起来好多了

00:27:21.046 --> 00:27:22.836 A:middle
我只需要将

00:27:22.836 --> 00:27:24.486 A:middle
第一行基线对齐

00:27:24.676 --> 00:27:26.026 A:middle
这真的很简单

00:27:27.816 --> 00:27:29.516 A:middle
我也想简单谈谈

00:27:29.516 --> 00:27:30.566 A:middle
平行对齐问题

00:27:30.696 --> 00:27:32.096 A:middle
你可以看到

00:27:32.516 --> 00:27:34.116 A:middle
图像在相同的纵列中

00:27:34.116 --> 00:27:36.696 A:middle
是平行对齐的

00:27:36.696 --> 00:27:38.246 A:middle
你可以通过指定一个

00:27:38.246 --> 00:27:40.146 A:middle
你想对齐的偏移量

00:27:40.196 --> 00:27:41.386 A:middle
然后把图像放在偏移量中间

00:27:41.386 --> 00:27:41.696 A:middle
来实现这一点

00:27:41.696 --> 00:27:42.786 A:middle
这很简单

00:27:43.106 --> 00:27:44.736 A:middle
然后你可以从偏移量到

00:27:44.736 --> 00:27:46.766 A:middle
文本 或者从

00:27:46.766 --> 00:27:47.496 A:middle
边缘到文本

00:27:47.496 --> 00:27:49.896 A:middle
你实际上应该

00:27:49.896 --> 00:27:51.796 A:middle
居中对齐 甚至平行对齐图像

00:27:51.796 --> 00:27:53.986 A:middle
而不是应用

00:27:53.986 --> 00:27:56.026 A:middle
前置或后续的限制

00:27:59.976 --> 00:28:02.416 A:middle
现在让我们回头看看我们的规范

00:28:02.416 --> 00:28:04.356 A:middle
在这里我想说的是

00:28:04.356 --> 00:28:06.076 A:middle
在默认条件下

00:28:06.076 --> 00:28:07.366 A:middle
初始情况选择中心对齐

00:28:07.366 --> 00:28:09.126 A:middle
不论是平行还是垂直

00:28:09.126 --> 00:28:09.576 A:middle
都是个好主意

00:28:10.216 --> 00:28:11.356 A:middle
在大部分情况中

00:28:11.356 --> 00:28:12.726 A:middle
这就是你想要的

00:28:12.726 --> 00:28:13.506 A:middle
系统也会为你处理一切事情

00:28:13.506 --> 00:28:14.676 A:middle
如果可行的话

00:28:14.676 --> 00:28:16.486 A:middle
它会使用排版信息

00:28:16.656 --> 00:28:18.166 A:middle
不然它就会使用

00:28:18.166 --> 00:28:19.526 A:middle
旧式的对齐方式

00:28:19.726 --> 00:28:22.816 A:middle
在这种情况下

00:28:22.816 --> 00:28:24.966 A:middle
Paolo 指定了基线对齐

00:28:24.966 --> 00:28:26.256 A:middle
因为第二行 -- 

00:28:26.256 --> 00:28:27.526 A:middle
第二个项目有两行

00:28:27.576 --> 00:28:28.396 A:middle
所以我们需要

00:28:28.396 --> 00:28:28.966 A:middle
使用基线

00:28:29.516 --> 00:28:30.736 A:middle
然后我们可以回到

00:28:30.736 --> 00:28:32.116 A:middle
基线对齐 但是

00:28:32.116 --> 00:28:33.036 A:middle
这也非常简单

00:28:33.556 --> 00:28:35.876 A:middle
这个规范也恰当地

00:28:35.876 --> 00:28:38.726 A:middle
指定了图像的

00:28:38.766 --> 00:28:39.506 A:middle
平行对齐

00:28:40.646 --> 00:28:42.176 A:middle
这使得规范

00:28:42.176 --> 00:28:43.206 A:middle
易于阅读

00:28:44.576 --> 00:28:46.826 A:middle
现在让我们来看一下按钮

00:28:47.836 --> 00:28:48.686 A:middle
按钮 --- 在 UIKit 中

00:28:48.686 --> 00:28:49.436 A:middle
有很多按钮

00:28:50.566 --> 00:28:51.776 A:middle
我们有两种类型的按钮

00:28:52.156 --> 00:28:53.786 A:middle
系统按钮和

00:28:53.786 --> 00:28:54.066 A:middle
常规按钮

00:28:54.066 --> 00:28:55.526 A:middle
让我们先从系统按钮开始

00:28:58.186 --> 00:28:59.466 A:middle
首先 UIKit 里的所有

00:28:59.466 --> 00:29:01.736 A:middle
按钮都有一个预设的

00:29:01.736 --> 00:29:04.006 A:middle
标志配置 对于系统按钮来说

00:29:04.006 --> 00:29:05.736 A:middle
它的主体是大号的

00:29:06.066 --> 00:29:07.836 A:middle
这意味着它会

00:29:07.836 --> 00:29:09.326 A:middle
根据动态类型的变化进行反应

00:29:09.326 --> 00:29:11.136 A:middle
有着正文文本风格 和大的尺寸

00:29:11.136 --> 00:29:13.886 A:middle
你们不觉得如果你不仅可以创造

00:29:13.886 --> 00:29:15.376 A:middle
在 Wi-Fi 网络列表的

00:29:16.106 --> 00:29:17.556 A:middle
信息按钮

00:29:17.556 --> 00:29:19.086 A:middle
还可以使用你自己的标志图像

00:29:19.766 --> 00:29:21.086 A:middle
创建和长相它一样的

00:29:21.086 --> 00:29:22.366 A:middle
属于你自己的系统按钮

00:29:22.366 --> 00:29:23.426 A:middle
是一件非常好的

00:29:23.426 --> 00:29:23.706 A:middle
事情吗

00:29:23.706 --> 00:29:25.056 A:middle
我们认为这是一个很好的主意

00:29:25.056 --> 00:29:26.736 A:middle
我们增加了一些

00:29:26.736 --> 00:29:28.706 A:middle
在 UIButton 的初始化程序

00:29:28.706 --> 00:29:29.856 A:middle
让你可以创建一个

00:29:29.856 --> 00:29:31.586 A:middle
拥有标志图像的系统按钮

00:29:31.826 --> 00:29:35.606 A:middle
它会表现得像一个 --

00:29:35.676 --> 00:29:36.676 A:middle
像一个常规的标志图像

00:29:37.516 --> 00:29:41.466 A:middle
[掌声]

00:29:41.966 --> 00:29:43.676 A:middle
现在 让我们来看看

00:29:43.676 --> 00:29:44.106 A:middle
常规按钮

00:29:44.256 --> 00:29:45.956 A:middle
在这个例子中 我有个弹出式窗口

00:29:45.956 --> 00:29:49.796 A:middle
它们在这个视图中

00:29:49.796 --> 00:29:50.596 A:middle
作为行动使用

00:29:50.906 --> 00:29:53.216 A:middle
这些标志在这真的大放异彩

00:29:53.216 --> 00:29:54.616 A:middle
他们都在恰当的位置

00:29:55.886 --> 00:29:57.296 A:middle
一个常规的按钮

00:29:57.296 --> 00:29:59.476 A:middle
一般会有一个中等大小的预设

00:30:02.586 --> 00:30:03.996 A:middle
关于这些预设大小的事情

00:30:03.996 --> 00:30:05.026 A:middle
如果你想改变它们怎么办呢

00:30:05.026 --> 00:30:06.636 A:middle
在 UIButton 上

00:30:06.636 --> 00:30:08.716 A:middle
有和在 UIImageView 上相似的 API

00:30:08.716 --> 00:30:08.926 A:middle
它的名字是

00:30:09.016 --> 00:30:11.546 A:middle
PreferredSymbolConfiguration forState

00:30:12.176 --> 00:30:13.596 A:middle
它和 UIButton

00:30:13.596 --> 00:30:14.986 A:middle
上的其他内容访问器

00:30:14.986 --> 00:30:15.516 A:middle
工作原理一样

00:30:15.516 --> 00:30:17.176 A:middle
你可以为配置设定为

00:30:17.176 --> 00:30:18.016 A:middle
某些状态

00:30:18.436 --> 00:30:19.586 A:middle
它会给你最大化的弹性

00:30:19.586 --> 00:30:21.536 A:middle
因为你可以设置

00:30:21.536 --> 00:30:22.366 A:middle
一个图像 你可以设置

00:30:22.366 --> 00:30:23.526 A:middle
一个配置 或两者都设置

00:30:23.526 --> 00:30:25.376 A:middle
它也会运行得很好

00:30:26.466 --> 00:30:28.146 A:middle
另一个按钮的例子就是这个

00:30:28.676 --> 00:30:30.636 A:middle
它某种程度上展现了

00:30:30.636 --> 00:30:32.696 A:middle
我们所认为的

00:30:32.696 --> 00:30:34.266 A:middle
标志与文本完美融合

00:30:34.266 --> 00:30:35.876 A:middle
这并不意味着它们经常紧挨着

00:30:36.046 --> 00:30:37.546 A:middle
这两个按钮应该在一起

00:30:37.546 --> 00:30:39.406 A:middle
它们的配置

00:30:39.406 --> 00:30:41.756 A:middle
是相同的 不论是左边的按钮

00:30:41.756 --> 00:30:42.896 A:middle
还是右边的按钮

00:30:43.406 --> 00:30:44.206 A:middle
优先加载的标志配置

00:30:44.206 --> 00:30:45.816 A:middle
与右边按钮的字体

00:30:45.816 --> 00:30:47.296 A:middle
是相配的

00:30:47.296 --> 00:30:48.416 A:middle
两者唯一的区别是

00:30:48.416 --> 00:30:50.416 A:middle
左边的按钮有一个标志

00:30:50.416 --> 00:30:52.196 A:middle
右边的按钮

00:30:52.196 --> 00:30:52.816 A:middle
有一个文本

00:30:53.776 --> 00:30:54.866 A:middle
你可以看到它们的

00:30:54.866 --> 00:30:57.496 A:middle
基线是一样的

00:30:57.496 --> 00:30:58.686 A:middle
因为它们的配置是完全相同的

00:30:58.686 --> 00:31:00.246 A:middle
它们也有相同的

00:31:00.246 --> 00:31:01.486 A:middle
度量标准

00:31:01.546 --> 00:31:02.556 A:middle
这让布局更加简单

00:31:06.116 --> 00:31:07.396 A:middle
为了完成我们的

00:31:07.396 --> 00:31:08.716 A:middle
按钮工作 -- 我提到过

00:31:08.716 --> 00:31:09.696 A:middle
在 UIKit 上有很多按钮

00:31:10.046 --> 00:31:11.576 A:middle
我们可以看看状态栏按钮

00:31:12.386 --> 00:31:14.616 A:middle
我们更新了

00:31:14.616 --> 00:31:16.046 A:middle
UIKit 中的原图以使用标志

00:31:16.046 --> 00:31:17.486 A:middle
它不仅可以运用在

00:31:17.486 --> 00:31:20.136 A:middle
状态栏按钮中 还可以运用在任何地方

00:31:20.346 --> 00:31:22.176 A:middle
状态栏按钮与这些新的原图

00:31:22.176 --> 00:31:22.866 A:middle
完美契合

00:31:23.226 --> 00:31:25.906 A:middle
现在 如果你要退回到

00:31:26.506 --> 00:31:27.886 A:middle
之前的系统

00:31:27.886 --> 00:31:28.866 A:middle
你需要记住

00:31:28.866 --> 00:31:30.756 A:middle
如果你在旧系统中

00:31:30.756 --> 00:31:32.186 A:middle
创建了自定义原图

00:31:32.186 --> 00:31:34.626 A:middle
与新的更新的原图相比

00:31:34.906 --> 00:31:36.226 A:middle
你会得到之前的更细的原图

00:31:36.226 --> 00:31:37.586 A:middle
所以请记住

00:31:37.586 --> 00:31:40.176 A:middle
如果你为旧的版本

00:31:40.296 --> 00:31:40.986 A:middle
创建了素材

00:31:42.616 --> 00:31:45.806 A:middle
你可以使用带图像的

00:31:46.356 --> 00:31:47.316 A:middle
状态栏按钮的标志

00:31:47.426 --> 00:31:48.866 A:middle
针对此我们有现成的 API

00:31:49.306 --> 00:31:51.046 A:middle
你只需要放一个标志

00:31:51.046 --> 00:31:51.256 A:middle
在那就行

00:31:51.256 --> 00:31:52.556 A:middle
它将与系统按钮

00:31:52.596 --> 00:31:53.926 A:middle
完美契合

00:31:54.046 --> 00:31:55.176 A:middle
你不需要做任何事

00:31:56.086 --> 00:31:59.776 A:middle
这就是所有你需要做的事情

00:31:59.776 --> 00:32:01.156 A:middle
再一次 像常规按钮一样

00:32:01.156 --> 00:32:03.036 A:middle
状态栏按钮也有

00:32:03.076 --> 00:32:03.806 A:middle
预设好的配置

00:32:04.446 --> 00:32:05.996 A:middle
在任何不压缩的尺寸类中

00:32:05.996 --> 00:32:07.786 A:middle
比如你手机中的

00:32:07.786 --> 00:32:10.276 A:middle
人像模式 

00:32:10.276 --> 00:32:11.026 A:middle
配置都会很大

00:32:11.736 --> 00:32:15.096 A:middle
如果你旋转你的手机

00:32:15.096 --> 00:32:16.576 A:middle
最后到了一个压缩尺寸类

00:32:16.636 --> 00:32:17.656 A:middle
我们会把按钮上的配置

00:32:17.656 --> 00:32:19.766 A:middle
改成中等

00:32:20.236 --> 00:32:21.456 A:middle
这会将标志调用得

00:32:21.816 --> 00:32:23.836 A:middle
更小 也可以

00:32:23.836 --> 00:32:25.256 A:middle
完美地契合更压缩的

00:32:25.296 --> 00:32:25.696 A:middle
状态栏

00:32:26.506 --> 00:32:27.696 A:middle
这也意味着

00:32:27.696 --> 00:32:29.016 A:middle
你不再需要提供一个

00:32:29.016 --> 00:32:30.856 A:middle
二级图片

00:32:30.856 --> 00:32:31.736 A:middle
因为系统会帮你完成一切工作

00:32:31.736 --> 00:32:34.076 A:middle
它会缩放来使用

00:32:34.116 --> 00:32:34.736 A:middle
内置的标志缩放比例

00:32:35.516 --> 00:32:39.596 A:middle
[掌声]

00:32:40.096 --> 00:32:41.906 A:middle
在 iPad 上 我们 -- 

00:32:41.906 --> 00:32:43.766 A:middle
因为我之前提到过的事情

00:32:43.766 --> 00:32:45.046 A:middle
我们经常会有一个大尺寸的

00:32:45.626 --> 00:32:49.376 A:middle
现在关于标志的另一个东西

00:32:49.546 --> 00:32:51.086 A:middle
就是渲染模式

00:32:51.816 --> 00:32:53.156 A:middle
任何常规图像

00:32:54.186 --> 00:32:56.356 A:middle
都有比如颜色数据的导入

00:32:56.356 --> 00:32:57.586 A:middle
但是对于标志来说 这是不一样的

00:32:57.586 --> 00:32:58.766 A:middle
它有一个固有的模式

00:32:59.236 --> 00:33:00.326 A:middle
它没有一个固有的颜色

00:33:00.326 --> 00:33:02.096 A:middle
我们使用 tintColor

00:33:02.096 --> 00:33:06.146 A:middle
来渲染标志

00:33:06.146 --> 00:33:07.206 A:middle
如果我们没有 tintColor

00:33:07.206 --> 00:33:07.716 A:middle
那就使用黑色

00:33:08.026 --> 00:33:09.056 A:middle
但是不要依赖于黑色

00:33:09.056 --> 00:33:10.416 A:middle
因为它不想 -- 

00:33:10.496 --> 00:33:12.646 A:middle
与深色模式融合得很好

00:33:12.706 --> 00:33:14.136 A:middle
它可能有改变的倾向

00:33:14.666 --> 00:33:16.896 A:middle
它如何运行呢

00:33:17.696 --> 00:33:20.186 A:middle
任何图像的渲染模式

00:33:20.186 --> 00:33:22.656 A:middle
都是自动的 到现在为止

00:33:22.856 --> 00:33:23.866 A:middle
对任何图像来说

00:33:24.046 --> 00:33:25.486 A:middle
它们都经常偏向

00:33:25.486 --> 00:33:25.946 A:middle
始终绘制原始状态

00:33:26.526 --> 00:33:30.826 A:middle
现在 对标志来说

00:33:30.826 --> 00:33:31.216 A:middle
情况不同了

00:33:31.726 --> 00:33:33.346 A:middle
非标志图像

00:33:33.346 --> 00:33:35.176 A:middle
还是倾向始终绘制原始状态

00:33:35.176 --> 00:33:36.986 A:middle
标志图像则会偏向

00:33:36.986 --> 00:33:37.746 A:middle
始终根据 tintColor 绘制图像

00:33:37.906 --> 00:33:39.166 A:middle
这意味着我们会

00:33:39.166 --> 00:33:40.976 A:middle
使用 tintColor 来为他们上色

00:33:41.016 --> 00:33:43.356 A:middle
事情就是如此

00:33:43.936 --> 00:33:44.856 A:middle
你可以通过现有的 API

00:33:44.856 --> 00:33:46.816 A:middle
来改变一个图片的

00:33:46.816 --> 00:33:47.686 A:middle
渲染模式

00:33:48.756 --> 00:33:50.206 A:middle
我们已经讲到了

00:33:50.206 --> 00:33:52.086 A:middle
基本的 UIKit 控制

00:33:52.086 --> 00:33:53.716 A:middle
但有时候你可能会想

00:33:53.716 --> 00:33:54.596 A:middle
在一个图形环境中绘制图像
 
00:33:55.136 --> 00:33:56.476 A:middle
这个时候你可能会用到

00:33:56.766 --> 00:33:57.316 A:middle
draw(in Rect

00:33:58.716 --> 00:34:00.446 A:middle
那么 对于标志来说

00:34:00.446 --> 00:34:01.696 A:middle
正如我之前提到的

00:34:01.696 --> 00:34:02.706 A:middle
这可能不是一个好主意

00:34:02.706 --> 00:34:03.666 A:middle
因为它们想要保留

00:34:03.666 --> 00:34:04.406 A:middle
原始的尺寸

00:34:04.486 --> 00:34:05.866 A:middle
所以这里最好使用 draw(at

00:34:06.356 --> 00:34:08.045 A:middle
让图像决定

00:34:08.045 --> 00:34:09.005 A:middle
它想要多大的尺寸

00:34:10.186 --> 00:34:11.016 A:middle
但是我们有一个问题

00:34:11.016 --> 00:34:12.335 A:middle
我们有一张这样的图片

00:34:12.335 --> 00:34:12.726 A:middle
但是它太小了

00:34:13.775 --> 00:34:15.516 A:middle
在默认状态下 图片有一个

00:34:15.556 --> 00:34:16.946 A:middle
未指定的配置

00:34:16.946 --> 00:34:18.896 A:middle
我们没有指定任何东西

00:34:18.896 --> 00:34:20.166 A:middle
如果我们只是 -- 如果你们必须

00:34:20.166 --> 00:34:21.696 A:middle
渲染 而我们没有找到

00:34:21.696 --> 00:34:23.496 A:middle
一个特定的数值

00:34:23.496 --> 00:34:24.636 A:middle
我们会回到系统初始状态

00:34:24.766 --> 00:34:26.356 A:middle
在这种情况下

00:34:26.436 --> 00:34:27.726 A:middle
它最终会是一个非常小的图片

00:34:28.306 --> 00:34:31.646 A:middle
现在我可以创建

00:34:31.646 --> 00:34:32.956 A:middle
一个配置让它变得更大

00:34:33.505 --> 00:34:36.266 A:middle
- 34 磅 粗体

00:34:36.505 --> 00:34:37.786 A:middle
然后使用新的 API

00:34:38.416 --> 00:34:40.326 A:middle
withConfiguration 将

00:34:40.386 --> 00:34:41.755 A:middle
配置运用在图片上

00:34:42.416 --> 00:34:43.746 A:middle
然后我们可以获得一个

00:34:43.746 --> 00:34:44.916 A:middle
嵌入该配置的新图片

00:34:45.565 --> 00:34:46.996 A:middle
我们创造出了这个

00:34:47.156 --> 00:34:48.906 A:middle
更大更粗的茶杯

00:34:48.906 --> 00:34:49.976 A:middle
这就是我想要的

00:34:54.476 --> 00:34:56.436 A:middle
再回到我们的弹出式窗口

00:34:57.005 --> 00:34:59.856 A:middle
Paolo 也让我们

00:35:02.036 --> 00:35:02.896 A:middle
因为标志在文本中很契合

00:35:03.586 --> 00:35:05.636 A:middle
我们可以用一些词语来替换

00:35:05.756 --> 00:35:06.216 A:middle
标志吗

00:35:07.056 --> 00:35:10.036 A:middle
答案是肯定的

00:35:10.036 --> 00:35:11.926 A:middle
标志本质上是排好版的

00:35:11.926 --> 00:35:12.756 A:middle
但它们仍然是图片

00:35:12.806 --> 00:35:14.236 A:middle
所以我们需要使用

00:35:14.236 --> 00:35:16.756 A:middle
拥有 NSTextAttachment 的属性字符串

00:35:18.196 --> 00:35:19.206 A:middle
现在 这个代码看起来

00:35:19.206 --> 00:35:20.856 A:middle
有点熟悉了 但是我们

00:35:20.996 --> 00:35:22.506 A:middle
有一个新的 API

00:35:22.506 --> 00:35:24.426 A:middle
那就是 NSTextAttachment(image

00:35:24.426 --> 00:35:25.956 A:middle
它会通过附加的图片

00:35:25.956 --> 00:35:27.136 A:middle
创造一个文本附件

00:35:28.306 --> 00:35:31.036 A:middle
现在这个文本附件

00:35:31.036 --> 00:35:32.416 A:middle
比常规的要更加智能

00:35:32.996 --> 00:35:35.656 A:middle
它了解标志

00:35:35.656 --> 00:35:37.316 A:middle
也会检查标志周围的字符串

00:35:37.316 --> 00:35:40.116 A:middle
来尽力完成

00:35:40.116 --> 00:35:43.286 A:middle
标志的配置

00:35:43.286 --> 00:35:44.566 A:middle
它会查看字体大小

00:35:44.566 --> 00:35:45.696 A:middle
粗细程度

00:35:45.696 --> 00:35:46.626 A:middle
但是同时还有颜色

00:35:46.656 --> 00:35:48.546 A:middle
然后一个完整的图片就

00:35:48.546 --> 00:35:49.446 A:middle
绘制完成了

00:35:53.516 --> 00:35:57.176 A:middle
[掌声]

00:35:57.676 --> 00:36:00.036 A:middle
旧的 API 或者现有的 API

00:36:00.426 --> 00:36:01.646 A:middle
创建文本附件

00:36:01.646 --> 00:36:02.606 A:middle
然后指派的图片

00:36:02.606 --> 00:36:03.576 A:middle
还是可以运行

00:36:03.576 --> 00:36:04.326 A:middle
但是不会获得相匹配的行为

00:36:04.886 --> 00:36:06.326 A:middle
当然了 你也可以

00:36:06.326 --> 00:36:07.636 A:middle
使用拥有常规图形的

00:36:07.636 --> 00:36:08.016 A:middle
新的 API

00:36:09.396 --> 00:36:11.526 A:middle
Paolo 在这里还想要一些颜色

00:36:12.666 --> 00:36:13.816 A:middle
看起来更好了

00:36:16.176 --> 00:36:18.926 A:middle
是的 我们又创造了一些新的

00:36:18.926 --> 00:36:19.526 A:middle
API 去实现它

00:36:20.686 --> 00:36:22.216 A:middle
你现在可以给一张图片着色了

00:36:22.836 --> 00:36:25.246 A:middle
所以 withTintColor 给图片

00:36:25.246 --> 00:36:26.906 A:middle
应用一种颜色 它使用起来

00:36:26.906 --> 00:36:27.846 A:middle
非常高效

00:36:28.116 --> 00:36:30.066 A:middle
它只有在需要的时候

00:36:30.126 --> 00:36:31.526 A:middle
才渲染颜色 然后它

00:36:31.526 --> 00:36:32.696 A:middle
会寻找最有效的方法

00:36:32.696 --> 00:36:33.526 A:middle
来做到这点

00:36:34.386 --> 00:36:35.386 A:middle
在此之前 你可能

00:36:35.386 --> 00:36:37.066 A:middle
必须对图像进行栅格化 并且

00:36:37.066 --> 00:36:38.446 A:middle
并将它渲染到图形上下文中

00:36:38.446 --> 00:36:39.436 A:middle
然后再应用颜色

00:36:39.766 --> 00:36:40.436 A:middle
你再也不需要

00:36:40.436 --> 00:36:40.796 A:middle
这么做了

00:36:41.296 --> 00:36:43.276 A:middle
这样就搞定了

00:36:44.516 --> 00:36:48.546 A:middle
[掌声]

00:36:49.046 --> 00:36:50.376 A:middle
这对于标志来说

00:36:50.376 --> 00:36:51.496 A:middle
格外重要 因为它们没有

00:36:51.496 --> 00:36:52.766 A:middle
一个固定的颜色 

00:36:52.766 --> 00:36:53.706 A:middle
这就给了它们一个颜色

00:36:54.196 --> 00:36:55.496 A:middle
现在 标志也有了

00:36:55.496 --> 00:36:56.376 A:middle
不同的渲染模式

00:36:56.376 --> 00:36:57.666 A:middle
所以如果你真的想要让那种颜色

00:36:57.726 --> 00:36:59.726 A:middle
弹出 你必须改变

00:36:59.726 --> 00:37:00.656 A:middle
渲染模式 你可以

00:37:00.656 --> 00:37:01.926 A:middle
使用这个可选参数

00:37:01.976 --> 00:37:02.946 A:middle
一次性完成

00:37:03.586 --> 00:37:07.556 A:middle
现在 这两个 API 还没有包含在

00:37:07.556 --> 00:37:09.096 A:middle
第一个 beta 版里  但是它们

00:37:09.096 --> 00:37:09.506 A:middle
很快就会被包含

00:37:13.226 --> 00:37:16.076 A:middle
所以我们已经看过了很多 API

00:37:16.786 --> 00:37:18.356 A:middle
我们认为我们提供了一个

00:37:18.356 --> 00:37:20.216 A:middle
很棒的工具组可以让你们的 App

00:37:20.506 --> 00:37:22.206 A:middle
在 iOS 13 中大放异彩

00:37:22.726 --> 00:37:25.076 A:middle
但是 这里有几个建议

00:37:25.736 --> 00:37:28.416 A:middle
与边缘对齐相比

00:37:28.466 --> 00:37:30.106 A:middle
应更倾向于水平和垂直居中

00:37:30.786 --> 00:37:31.926 A:middle
它是一个思路上的转变

00:37:32.176 --> 00:37:33.906 A:middle
但是一旦你弄明白了

00:37:33.906 --> 00:37:34.606 A:middle
它就会真的奏效

00:37:36.016 --> 00:37:37.476 A:middle
试着从最小元素到

00:37:37.476 --> 00:37:40.316 A:middle
最大元素

00:37:40.316 --> 00:37:41.126 A:middle
构建你的布局

00:37:41.126 --> 00:37:42.256 A:middle
从一些小东西开始

00:37:42.256 --> 00:37:43.866 A:middle
然后把它们当成一块积木

00:37:43.866 --> 00:37:44.786 A:middle
去做成更大的东西

00:37:44.826 --> 00:37:45.476 A:middle
这是非常容易

00:37:45.556 --> 00:37:47.946 A:middle
并且灵活的

00:37:48.026 --> 00:37:49.576 A:middle
图像大小可以改变

00:37:50.396 --> 00:37:52.516 A:middle
这就允许你的图像视图

00:37:52.516 --> 00:37:54.646 A:middle
和他们的图像尺寸相同  但是注意

00:37:54.646 --> 00:37:55.946 A:middle
它们是可以更改的

00:37:56.526 --> 00:37:58.686 A:middle
它可能发生在运行时 或者

00:37:58.686 --> 00:38:01.606 A:middle
App 启动时 又甚至

00:38:01.606 --> 00:38:02.966 A:middle
是系统更新时

00:38:05.116 --> 00:38:06.946 A:middle
缓存图像通常

00:38:06.946 --> 00:38:07.156 A:middle
没有什么用

00:38:08.436 --> 00:38:09.816 A:middle
它是 Bug 的一大来源

00:38:09.816 --> 00:38:11.306 A:middle
系统已经竭尽所能地

00:38:11.356 --> 00:38:13.936 A:middle
提供了最好的性能

00:38:14.016 --> 00:38:16.186 A:middle
并且缓存真的会

00:38:16.186 --> 00:38:18.086 A:middle
覆盖 所以没必要那样做

00:38:19.756 --> 00:38:22.026 A:middle
最后 栅格化

00:38:22.026 --> 00:38:25.886 A:middle
在大多数情况下 是最坏的解决方案

00:38:25.886 --> 00:38:27.586 A:middle
起码不是修复问题的

00:38:27.586 --> 00:38:28.366 A:middle
最佳解决方案

00:38:28.426 --> 00:38:32.386 A:middle
所以节省你的 CPU 资源

00:38:32.386 --> 00:38:34.616 A:middle
来做些有用的事情   

00:38:34.616 --> 00:38:36.496 A:middle
让系统栅格化图像吧

00:38:36.816 --> 00:38:38.316 A:middle
尽量避免栅格化

00:38:38.316 --> 00:38:40.486 A:middle
图像 特别是

00:38:40.486 --> 00:38:40.946 A:middle
标志图像

00:38:43.556 --> 00:38:45.096 A:middle
今天上午的

00:38:45.096 --> 00:38:46.206 A:middle
可访问性和本地化会议

00:38:46.206 --> 00:38:49.146 A:middle
非常有趣

00:38:49.146 --> 00:38:51.046 A:middle
因为标志使这些领域的适配

00:38:51.046 --> 00:38:52.636 A:middle
变得简单得多

00:38:52.636 --> 00:38:55.026 A:middle
明天将会推出

00:38:55.026 --> 00:38:56.376 A:middle
深色模式 该模式下

00:38:56.376 --> 00:38:57.576 A:middle
标志会因为暗色调

00:38:57.616 --> 00:39:00.576 A:middle
而非常闪耀

00:39:01.676 --> 00:39:04.886 A:middle
这还有两个实验室你可能

00:39:04.886 --> 00:39:05.486 A:middle
会感兴趣

00:39:05.486 --> 00:39:07.766 A:middle
在周四有文本和 SF symbols 实验室

00:39:07.766 --> 00:39:09.796 A:middle
以及字体实验室

00:39:10.136 --> 00:39:11.446 A:middle
在周五下午

00:39:11.446 --> 00:39:12.306 A:middle
还有一个设计实验室

00:39:12.826 --> 00:39:15.256 A:middle
当然 任何 UIKit 实验室都

00:39:15.256 --> 00:39:16.306 A:middle
欢迎你们

00:39:17.126 --> 00:39:18.266 A:middle
非常感谢你的聆听

00:39:18.266 --> 00:39:19.576 A:middle
享受接下来的 WWDC 大会吧

00:39:20.516 --> 00:39:26.500 A:middle
[掌声]

