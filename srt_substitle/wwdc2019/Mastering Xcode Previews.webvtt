WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:00:06.039 --> 00:00:09.910 align:middle line:0
（掌握Xcode预览）

00:00:13.881 --> 00:00:17.684 align:middle line:-2
各位下午好 欢迎来到
掌握Xcode预览演讲

00:00:18.051 --> 00:00:22.155 align:middle line:-2
这周你可能在许多地方
都听过Xcode预览介绍

00:00:22.222 --> 00:00:24.224 align:middle line:-1
主题演讲 国情咨文

00:00:24.291 --> 00:00:26.493 align:middle line:-2
还有一些关于SwiftUI
的演讲中可能都听过

00:00:26.860 --> 00:00:30.163 align:middle line:-2
但今天 我们关注的是
Xcode预览本身

00:00:30.964 --> 00:00:32.031 align:middle line:-1
我叫Anton

00:00:32.098 --> 00:00:34.268 align:middle line:-1
待会我会与

00:00:34.334 --> 00:00:37.337 align:middle line:-2
我的同事Nate一起介绍
Xcode预览是什么

00:00:37.404 --> 00:00:38.305 align:middle line:-1
它是如何运作的

00:00:38.372 --> 00:00:40.641 align:middle line:-1
以及在你的工作中

00:00:40.707 --> 00:00:41.742 align:middle line:-1
如何运用

00:00:41.808 --> 00:00:44.711 align:middle line:-2
无论你是用SwiftUI
创建新的app

00:00:45.078 --> 00:00:48.015 align:middle line:-2
或是用UIKit或AppKit
来维护已有app

00:00:48.849 --> 00:00:50.751 align:middle line:-1
让我先说一个小故事

00:00:52.052 --> 00:00:55.255 align:middle line:-1
一位设计师拿着他为你的

00:00:55.322 --> 00:00:58.892 align:middle line:-1
迪士尼app设计的界面样板找到你

00:00:59.193 --> 00:01:01.428 align:middle line:-1
你拿到样板 拿回办公室

00:01:01.495 --> 00:01:02.796 align:middle line:-1
开始创建

00:01:03.197 --> 00:01:05.999 align:middle line:-1
完成后再拿给设计师看

00:01:06.600 --> 00:01:07.901 align:middle line:-1
你运行代码

00:01:08.168 --> 00:01:10.904 align:middle line:-1
浏览之前做好的许多见面

00:01:10.971 --> 00:01:11.972 align:middle line:-1
找到这个界面

00:01:12.272 --> 00:01:13.740 align:middle line:-2
然后把该界面给设计师看
然后他们说

00:01:14.708 --> 00:01:16.710 align:middle line:-1
看起来不错 但是

00:01:17.578 --> 00:01:19.246 align:middle line:-1
我现在看这个做好的界面

00:01:19.713 --> 00:01:22.449 align:middle line:-1
我觉得这个按钮可以再蓝一点

00:01:23.250 --> 00:01:24.251 align:middle line:-1
没问题

00:01:24.318 --> 00:01:27.454 align:middle line:-2
你退出app 打开Xcode
开始编辑

00:01:28.422 --> 00:01:29.289 align:middle line:-1
然后再次运行

00:01:29.356 --> 00:01:31.358 align:middle line:-1
再从一堆界面中

00:01:31.425 --> 00:01:32.726 align:middle line:-1
找到刚刚创建的新界面

00:01:32.793 --> 00:01:34.127 align:middle line:-1
拿给设计师看

00:01:34.695 --> 00:01:35.529 align:middle line:-1
他们又说

00:01:36.129 --> 00:01:38.599 align:middle line:-1
好多了 但是

00:01:39.833 --> 00:01:41.535 align:middle line:-1
文字部分我觉得可以

00:01:41.802 --> 00:01:43.604 align:middle line:-1
可以再紧凑一点 你觉得呢

00:01:44.538 --> 00:01:46.039 align:middle line:-1
你应该知道这个故事是什么意思

00:01:46.106 --> 00:01:49.943 align:middle line:-2
这种弄来弄去的反复
其实是一个正常的过程

00:01:50.410 --> 00:01:51.645 align:middle line:-1
我们每个人都经历过

00:01:51.712 --> 00:01:54.481 align:middle line:-1
这也是我们创建好看的app的方式

00:01:54.748 --> 00:01:58.218 align:middle line:-1
但是这就消耗太多时间了

00:01:58.285 --> 00:02:01.755 align:middle line:-1
而且浪费时间的也不是反复的过程

00:02:01.822 --> 00:02:04.191 align:middle line:-1
不是这里小改一下 那里小弄一下

00:02:04.258 --> 00:02:05.859 align:middle line:-1
也不是得到反馈的过程

00:02:06.126 --> 00:02:09.562 align:middle line:-1
而是创建 运行 配置 浏览

00:02:09.630 --> 00:02:13.400 align:middle line:-1
再验证你刚刚对app

00:02:13.467 --> 00:02:16.103 align:middle line:-1
做出的那些更改是否达到预期效果

00:02:17.804 --> 00:02:18.639 align:middle line:-1
所以

00:02:19.540 --> 00:02:20.741 align:middle line:-1
我再举一个例子

00:02:22.309 --> 00:02:25.546 align:middle line:-1
你和设计师交流结束

00:02:25.612 --> 00:02:29.249 align:middle line:-1
你对新界面也很满意

00:02:29.550 --> 00:02:30.684 align:middle line:-1
你把它拿回去

00:02:30.984 --> 00:02:35.155 align:middle line:-1
但是你作为开发者的工作还没有结束

00:02:35.222 --> 00:02:39.459 align:middle line:-2
因为作为开发者
你肯定希望你的app能够正常运作

00:02:39.526 --> 00:02:40.360 align:middle line:-1
然后

00:02:40.928 --> 00:02:43.297 align:middle line:-1
正常运作的意思是

00:02:43.964 --> 00:02:46.600 align:middle line:-2
不管用户在什么样的
配置上运行你的app

00:02:46.667 --> 00:02:47.935 align:middle line:-1
新界面看起来都要很好

00:02:48.202 --> 00:02:52.072 align:middle line:-1
比如 在深色模式下要好看

00:02:53.907 --> 00:02:57.044 align:middle line:-1
或者是在不同动态大小

00:02:58.612 --> 00:03:01.014 align:middle line:-1
甚至是不同设备上都要好看

00:03:02.316 --> 00:03:06.486 align:middle line:-1
而且验证你的UI和app

00:03:06.553 --> 00:03:10.157 align:middle line:-1
在不同的情况下看起来都一样好

00:03:10.457 --> 00:03:12.626 align:middle line:-1
还是有一定难度的

00:03:12.693 --> 00:03:15.996 align:middle line:-2
之后还要将你的app
上架到App Store

00:03:16.363 --> 00:03:19.800 align:middle line:-1
作为开发者这个过程我们都很熟悉了

00:03:20.734 --> 00:03:23.136 align:middle line:-1
我们Xcode团队也一直在

00:03:23.203 --> 00:03:24.004 align:middle line:-1
思考这个问题

00:03:24.471 --> 00:03:25.973 align:middle line:-1
我们得出了解决方案

00:03:26.673 --> 00:03:28.041 align:middle line:-1
那就是Xcode预览

00:03:28.108 --> 00:03:31.345 align:middle line:-2
Xcode预览是
Xcode的新功能

00:03:33.881 --> 00:03:36.216 align:middle line:-1
该功能可以大大减少

00:03:36.283 --> 00:03:38.385 align:middle line:-1
构建 运行和配置视图

00:03:38.752 --> 00:03:40.654 align:middle line:-1
以验证所做改变的时间

00:03:40.721 --> 00:03:44.892 align:middle line:-1
让你能够专注于你真正想做的事情

00:03:44.958 --> 00:03:47.094 align:middle line:-1
那就是创建好app

00:03:48.962 --> 00:03:52.065 align:middle line:-2
但问题是怎么做
这一切都是如何运作的

00:03:53.000 --> 00:03:55.669 align:middle line:-1
那么你在app中启用预览时

00:03:55.736 --> 00:03:58.906 align:middle line:-2
Xcode会以一种
特殊方式来创建app

00:04:03.277 --> 00:04:05.546 align:middle line:-1
你正在处理的是哪个视图和哪个文件

00:04:05.612 --> 00:04:08.115 align:middle line:-1
它就只会编译该文件

00:04:08.182 --> 00:04:11.218 align:middle line:-2
和该视图 与app中的
其他部分分开来

00:04:12.119 --> 00:04:16.456 align:middle line:-1
然后使用Swift的动态替换功能

00:04:16.523 --> 00:04:19.059 align:middle line:-1
将该实现应用于app

00:04:20.226 --> 00:04:21.394 align:middle line:-1
因为这些代码

00:04:21.461 --> 00:04:23.230 align:middle line:-1
对于每次更改进行重新编译

00:04:23.297 --> 00:04:27.534 align:middle line:-2
比重新编译整个app
工作量要小得多

00:04:27.601 --> 00:04:31.738 align:middle line:-2
Xcode可以针对你所做的
每一项更改不断重复执行此操作

00:04:32.573 --> 00:04:37.611 align:middle line:-1
也就是说对更改进行的反馈会更快

00:04:38.412 --> 00:04:42.816 align:middle line:-2
但是这些变化Xcode
还可以进一步优化

00:04:43.217 --> 00:04:46.587 align:middle line:-2
对于仅涉及字面值
如字符串或数字的更改

00:04:46.653 --> 00:04:50.190 align:middle line:-1
Xcode不会做出重新编译

00:04:52.226 --> 00:04:55.295 align:middle line:-1
只会将新值传入正在运行的app中

00:04:55.629 --> 00:04:57.397 align:middle line:-1
你就可以获得即时反馈

00:04:57.664 --> 00:05:00.267 align:middle line:-1
就像可视化编辑工具那样

00:05:02.870 --> 00:05:05.072 align:middle line:-1
还有更为重要的一点是

00:05:06.573 --> 00:05:09.276 align:middle line:-1
Xcode预览并不代表

00:05:09.343 --> 00:05:12.112 align:middle line:-1
Xcode在运行app时

00:05:12.179 --> 00:05:13.714 align:middle line:-1
所见的视图

00:05:14.114 --> 00:05:17.217 align:middle line:-1
它实际上会构建和运行代码

00:05:18.619 --> 00:05:21.722 align:middle line:-1
所以在你运行app时可用的上下文

00:05:21.788 --> 00:05:25.459 align:middle line:-1
在预览视图中也可用

00:05:25.526 --> 00:05:26.927 align:middle line:-1
所以如果你有自定义资产

00:05:27.327 --> 00:05:29.530 align:middle line:-1
你就可以在预览中使用并进行渲染

00:05:29.596 --> 00:05:32.766 align:middle line:-2
如果你想要在app中
使用自定义逻辑

00:05:32.833 --> 00:05:35.903 align:middle line:-1
当然每款app都有自定义逻辑

00:05:36.203 --> 00:05:37.337 align:middle line:-1
你也同样可以使用

00:05:37.404 --> 00:05:41.742 align:middle line:-2
甚至是运行配置
比如设置用户默认值

00:05:41.808 --> 00:05:44.111 align:middle line:-1
在预览视图下同样可以使用

00:05:45.812 --> 00:05:50.450 align:middle line:-2
所以现在的问题是
Xcode怎么知道要向你展示什么

00:05:52.786 --> 00:05:54.154 align:middle line:-1
其实

00:05:54.688 --> 00:05:55.923 align:middle line:-1
告诉Xcode

00:05:56.490 --> 00:05:59.026 align:middle line:-1
要显示什么视图以及如何进行配置

00:05:59.092 --> 00:06:00.227 align:middle line:-1
只需要几行代码

00:06:01.028 --> 00:06:04.598 align:middle line:-1
你需要做的就是实现一个

00:06:04.665 --> 00:06:06.900 align:middle line:-2
符合PreviewProvider
协议的小类型

00:06:07.234 --> 00:06:09.536 align:middle line:-1
这也是SwiftUI框架的一部分

00:06:10.003 --> 00:06:11.805 align:middle line:-1
这部分有一个要求

00:06:11.872 --> 00:06:14.274 align:middle line:-1
就是你实现的预览属性

00:06:14.775 --> 00:06:15.876 align:middle line:-1
之后就会返回一些内容

00:06:15.943 --> 00:06:18.378 align:middle line:-1
而你得到的返回

00:06:19.213 --> 00:06:20.848 align:middle line:-1
都是取决于你

00:06:22.649 --> 00:06:26.687 align:middle line:-1
因为这些代码也是你app的一部分

00:06:26.753 --> 00:06:29.489 align:middle line:-1
它与app中的其他部分一起编译的

00:06:29.823 --> 00:06:34.194 align:middle line:-1
配置代码也是一样的道理

00:06:34.261 --> 00:06:35.162 align:middle line:-1
和视图一样

00:06:35.229 --> 00:06:38.265 align:middle line:-1
所以在这里你可以使用自定义逻辑

00:06:38.332 --> 00:06:42.302 align:middle line:-1
自定义资源甚至运行配置

00:06:42.870 --> 00:06:46.440 align:middle line:-1
运用代码来配置视图

00:06:46.507 --> 00:06:48.375 align:middle line:-1
还有许多好处

00:06:49.009 --> 00:06:51.578 align:middle line:-1
比如 这是SwiftUI代码

00:06:51.645 --> 00:06:53.280 align:middle line:-1
配置代码只是SwiftUI

00:06:53.347 --> 00:06:55.816 align:middle line:-2
如果你知道如何
创建SwiftUIView

00:06:55.883 --> 00:06:59.753 align:middle line:-1
那么你就知道如何配置该视图

00:07:03.991 --> 00:07:06.059 align:middle line:-2
将它放在源代码管理中
并与团队共享

00:07:06.126 --> 00:07:09.963 align:middle line:-2
这样你团队都可以从
你写的预览中获益

00:07:11.131 --> 00:07:14.334 align:middle line:-2
最后 因为你的变更
视图会不断变化

00:07:14.401 --> 00:07:15.769 align:middle line:-1
app也在不断变化

00:07:15.836 --> 00:07:20.707 align:middle line:-2
当视图或是它的API变化时
编译程序可以确保

00:07:20.774 --> 00:07:23.143 align:middle line:-1
预览与视图保持同步

00:07:23.210 --> 00:07:24.044 align:middle line:-1
这样

00:07:24.545 --> 00:07:26.780 align:middle line:-1
你就知道你预览的内容是正确的

00:07:28.916 --> 00:07:32.619 align:middle line:-1
所以这就是预览运作方式的简要介绍

00:07:33.187 --> 00:07:35.689 align:middle line:-1
接下来就讲讲如何配置预览

00:07:35.756 --> 00:07:38.859 align:middle line:-2
来充分利用预览的优势
有请Nate

00:07:48.702 --> 00:07:50.604 align:middle line:-1
Anton刚才说到预览其实是代码

00:07:51.271 --> 00:07:52.773 align:middle line:-1
现在我就来说说怎么写这个代码

00:07:54.408 --> 00:07:58.178 align:middle line:-2
我们Xcode预览团队
有一次到动物园去玩

00:08:01.915 --> 00:08:04.518 align:middle line:-1
我们想确保我们看到了每一个动物

00:08:05.619 --> 00:08:07.521 align:middle line:-1
作为开发者

00:08:07.588 --> 00:08:10.257 align:middle line:-1
我们实在忍不住想要创建一个app

00:08:10.624 --> 00:08:12.292 align:middle line:-1
来追踪动物园里的动物

00:08:13.961 --> 00:08:15.729 align:middle line:-1
我就担起了做这个app的任务

00:08:16.096 --> 00:08:18.732 align:middle line:-1
它的主要用户界面

00:08:19.566 --> 00:08:21.134 align:middle line:-1
就是动物园里的动物清单列表

00:08:21.768 --> 00:08:25.339 align:middle line:-1
在该列表中有每个动物名称

00:08:27.641 --> 00:08:29.276 align:middle line:-1
我来给你们看看现在我做到哪了

00:08:32.913 --> 00:08:36.383 align:middle line:-1
在画布中 你可以看到动物的预览

00:08:37.851 --> 00:08:41.121 align:middle line:-2
因为iPhone 10S的
运行目的地已经选择

00:08:41.188 --> 00:08:43.724 align:middle line:-2
我们在动物视图看到的
chrome就是这样的

00:08:44.858 --> 00:08:49.129 align:middle line:-2
但是我们想让该视图
在各个设备上看起来都好

00:08:49.196 --> 00:08:52.099 align:middle line:-1
我的手机是iPhone SE

00:08:52.833 --> 00:08:56.470 align:middle line:-2
我可以将运行目的地
更改为iPhone SE

00:08:56.537 --> 00:08:59.439 align:middle line:-1
但预览API还提供另一种机制

00:08:59.806 --> 00:09:02.176 align:middle line:-1
准确来说是预览设备

00:09:04.211 --> 00:09:06.246 align:middle line:-1
你可以将想要显示预览的

00:09:06.313 --> 00:09:07.581 align:middle line:-1
设备名称输入该机制

00:09:08.215 --> 00:09:13.220 align:middle line:-2
几乎同一时间 你就可以在画布上
看到设备显示该视图

00:09:14.354 --> 00:09:18.292 align:middle line:-2
现在我再看看设备
iPhone SE显示动物名称图

00:09:18.358 --> 00:09:19.493 align:middle line:-1
我发现了一个问题

00:09:19.826 --> 00:09:21.929 align:middle line:-1
最右边的文本被截断了

00:09:22.963 --> 00:09:24.131 align:middle line:-1
我们来解决这个问题

00:09:24.665 --> 00:09:27.801 align:middle line:-2
为此 我将HStack
改为VStack

00:09:29.169 --> 00:09:33.540 align:middle line:-2
画布马上就更新了
这正是我们先要的样子

00:09:34.908 --> 00:09:37.511 align:middle line:-2
Anton的手机是
iPhone 10r

00:09:37.578 --> 00:09:40.280 align:middle line:-2
我们想要确保该动物名称
在他的设备上也能正确显示

00:09:40.347 --> 00:09:43.617 align:middle line:-2
我们可以改变我们传递给
预览设备的参数

00:09:44.151 --> 00:09:45.285 align:middle line:-1
但是方法更简单

00:09:45.686 --> 00:09:49.022 align:middle line:-2
具体来说 我们可以将此视图
嵌入到一个组中

00:09:49.423 --> 00:09:54.228 align:middle line:-2
按住Command键并单击
动物名称图 然后向下滚动到嵌入组

00:09:54.928 --> 00:09:58.765 align:middle line:-1
之后添加动物名称图的第二个实例

00:09:59.032 --> 00:10:03.103 align:middle line:-2
这次我们用iPhone 10r
调用预览设备

00:10:04.638 --> 00:10:06.173 align:middle line:-1
我们可以看到 在画布中

00:10:06.607 --> 00:10:09.176 align:middle line:-1
该视图在两个设备中运行

00:10:10.444 --> 00:10:13.247 align:middle line:-1
动物的学名一般是用斜体写的

00:10:13.680 --> 00:10:15.649 align:middle line:-1
我们现在就来更改

00:10:19.853 --> 00:10:23.423 align:middle line:-2
现在画布中
我们就能验证更改是否正确

00:10:23.690 --> 00:10:25.192 align:middle line:-1
两台设备都可以

00:10:25.259 --> 00:10:26.527 align:middle line:-1
真的太简单了

00:10:33.767 --> 00:10:37.004 align:middle line:-1
我们可以看到在用户使用的设备上

00:10:37.070 --> 00:10:38.705 align:middle line:-1
我们的界面预览

00:10:39.072 --> 00:10:40.674 align:middle line:-1
对于像格子这样的小视图

00:10:40.741 --> 00:10:44.845 align:middle line:-1
也能让你更加专注于你想要的东西

00:10:45.179 --> 00:10:47.414 align:middle line:-1
摆脱多余的chrome

00:10:48.148 --> 00:10:50.584 align:middle line:-1
为此 预览API提供了这个方法

00:10:50.651 --> 00:10:51.718 align:middle line:-1
预览布局

00:10:52.653 --> 00:10:54.154 align:middle line:-1
现在这个预览布局方法

00:10:55.222 --> 00:10:56.957 align:middle line:-1
可以传递三个不同的参数

00:10:57.457 --> 00:10:59.993 align:middle line:-1
首先你可以指定设备

00:11:01.995 --> 00:11:04.097 align:middle line:-1
也就是现在画布上的内容

00:11:04.531 --> 00:11:05.365 align:middle line:-1
然后

00:11:06.133 --> 00:11:08.168 align:middle line:-1
你可以指定

00:11:08.235 --> 00:11:09.970 align:middle line:-1
预览显示的大小

00:11:10.037 --> 00:11:12.105 align:middle line:-1
如果你要将你的视图

00:11:12.172 --> 00:11:15.642 align:middle line:-2
嵌入到特定大小的更大的界面上
这就十分有用了

00:11:15.943 --> 00:11:18.612 align:middle line:-1
最后你可以使用适合大小功能

00:11:18.912 --> 00:11:23.317 align:middle line:-1
如果你希望视图可以根据内容

00:11:23.383 --> 00:11:25.919 align:middle line:-1
确定预览大小 那该功能十分有用

00:11:26.220 --> 00:11:28.722 align:middle line:-2
因为动物名称单元格
要被嵌入到列表中

00:11:29.122 --> 00:11:33.894 align:middle line:-1
该列表允许动物单元格

00:11:34.428 --> 00:11:37.197 align:middle line:-1
根据其内容垂直调整大小

00:11:37.264 --> 00:11:39.132 align:middle line:-1
我们来使用适合大小功能

00:11:41.535 --> 00:11:45.105 align:middle line:-2
画布马上进行更新
显示我们想要的效果

00:11:46.573 --> 00:11:49.009 align:middle line:-1
我现在点击画布右下方按钮

00:11:49.076 --> 00:11:50.410 align:middle line:-1
来将视图放大

00:11:51.945 --> 00:11:54.047 align:middle line:-1
这两个文本

00:11:54.548 --> 00:11:56.884 align:middle line:-1
红狐和它下面的所述科

00:11:56.950 --> 00:11:57.784 align:middle line:-1
犬类

00:11:58.986 --> 00:12:01.054 align:middle line:-1
有点太模糊了

00:12:01.421 --> 00:12:04.057 align:middle line:-1
我希望它们看起来是清晰可见的

00:12:04.124 --> 00:12:06.827 align:middle line:-1
所以我要将红狐加粗

00:12:07.394 --> 00:12:09.696 align:middle line:-1
我对该文本点击Command

00:12:10.330 --> 00:12:12.165 align:middle line:-1
向下滚动到检验操作

00:12:12.633 --> 00:12:14.868 align:middle line:-1
将字体加粗

00:12:17.137 --> 00:12:19.640 align:middle line:-1
源编辑器添加了新代码

00:12:20.007 --> 00:12:22.309 align:middle line:-1
预览也进行了相应的更新

00:12:23.110 --> 00:12:23.944 align:middle line:-1
看起来不错

00:12:25.445 --> 00:12:29.249 align:middle line:-1
很多用户喜欢用动态字体大小

00:12:29.583 --> 00:12:32.286 align:middle line:-1
我们来看看当用户将字体

00:12:32.586 --> 00:12:36.490 align:middle line:-2
调到最大的时候
我们的界面看起来是什么样的

00:12:37.491 --> 00:12:40.861 align:middle line:-2
因为预览API是
SwiftUI的一部分

00:12:41.128 --> 00:12:45.098 align:middle line:-2
我们在写预览的时候
就可以利用SwiftUI

00:12:45.165 --> 00:12:48.769 align:middle line:-2
在这种情况下
我们可以使用环境修饰符

00:12:50.237 --> 00:12:53.240 align:middle line:-1
并将字体类别键径值

00:12:53.307 --> 00:12:54.408 align:middle line:-1
调到最大

00:12:56.109 --> 00:13:00.013 align:middle line:-1
这样就能轻松改变

00:13:00.080 --> 00:13:01.481 align:middle line:-1
我们正在看的字体大小

00:13:01.548 --> 00:13:03.250 align:middle line:-1
还有更棒的一点是

00:13:03.317 --> 00:13:05.953 align:middle line:-1
我们可以一次看到

00:13:06.019 --> 00:13:09.022 align:middle line:-1
所有不同字体大小下的界面

00:13:09.556 --> 00:13:12.926 align:middle line:-1
我们要做的就是将该界面嵌入一个组

00:13:12.993 --> 00:13:16.597 align:middle line:-2
对于每一个大小
创建一个新的动物单元格

00:13:16.663 --> 00:13:19.333 align:middle line:-2
但是重复工作太多了
还有更好的方法

00:13:20.701 --> 00:13:23.303 align:middle line:-2
SwiftUI有一个
应用于所有功能

00:13:23.370 --> 00:13:26.173 align:middle line:-1
我对动物单元格点击Command

00:13:26.507 --> 00:13:27.941 align:middle line:-1
下滑选择重复

00:13:29.142 --> 00:13:33.180 align:middle line:-2
现在对于0到5
我们都得到了对应的预览

00:13:33.814 --> 00:13:34.948 align:middle line:-1
但是我想要的

00:13:35.482 --> 00:13:38.252 align:middle line:-1
是每种字体大小

00:13:38.318 --> 00:13:39.253 align:middle line:-1
都有预览

00:13:39.520 --> 00:13:44.057 align:middle line:-2
而且我想要每种情况的
大小类别键径

00:13:44.391 --> 00:13:47.661 align:middle line:-1
都在环境中指定为对应的值

00:13:49.062 --> 00:13:49.897 align:middle line:-1
就像这样

00:13:50.264 --> 00:13:52.165 align:middle line:-1
你可以看到在画布上

00:13:52.432 --> 00:13:55.369 align:middle line:-1
每种字体大小都显示出来了

00:14:04.845 --> 00:14:08.348 align:middle line:-1
在最小的字体那我发现一个问题

00:14:08.415 --> 00:14:10.450 align:middle line:-1
标题 也就是通俗名称

00:14:10.517 --> 00:14:12.619 align:middle line:-1
不是我想的那么显眼

00:14:12.886 --> 00:14:14.788 align:middle line:-1
让我们将它放大一点

00:14:15.322 --> 00:14:18.425 align:middle line:-2
我再次在视图上点击Command
这次实在画布中

00:14:19.393 --> 00:14:21.628 align:middle line:-1
再选择检查操作

00:14:22.262 --> 00:14:24.064 align:middle line:-1
改变标题字体

00:14:26.433 --> 00:14:29.937 align:middle line:-2
在源代码编辑器中插入代码
画布上也有相应的更新

00:14:30.537 --> 00:14:31.405 align:middle line:-1
看起来不错

00:14:32.105 --> 00:14:33.874 align:middle line:-1
你可能会遇到一个问题

00:14:33.941 --> 00:14:36.643 align:middle line:-1
当你在画布中有多个预览

00:14:37.044 --> 00:14:40.514 align:middle line:-1
很难区分

00:14:40.781 --> 00:14:44.084 align:middle line:-1
你要分清楚代码中的配置

00:14:44.151 --> 00:14:46.887 align:middle line:-1
预览静态属性的实现

00:14:46.954 --> 00:14:50.090 align:middle line:-1
对应的是画布中的哪个预览

00:14:51.325 --> 00:14:52.860 align:middle line:-1
为了解决这个问题

00:14:53.427 --> 00:14:56.763 align:middle line:-2
预览API提供一个功能
叫做预览显示名称

00:14:57.231 --> 00:14:59.132 align:middle line:-1
以免你想要使用这些

00:14:59.199 --> 00:15:01.401 align:middle line:-1
文字大小的名称

00:15:02.002 --> 00:15:05.839 align:middle line:-2
在每个预览的下方
我们就可以看到文字大小了

00:15:10.911 --> 00:15:12.246 align:middle line:-1
是的 真的很棒

00:15:14.448 --> 00:15:18.085 align:middle line:-1
预览API非常简洁且功能非常强大

00:15:18.619 --> 00:15:21.154 align:middle line:-2
接下来要讲的是
如何利用Xcode功能

00:15:21.221 --> 00:15:23.824 align:middle line:-2
来发挥预览的最大作用
有请Anton

00:15:31.598 --> 00:15:36.770 align:middle line:-1
我来继续讲这个演示

00:15:36.837 --> 00:15:38.572 align:middle line:-1
把Nate做的这个动物清单创建完

00:15:38.872 --> 00:15:39.973 align:middle line:-1
我要做的第一件事

00:15:40.040 --> 00:15:43.710 align:middle line:-1
是把注意力放到红狐图像占位符

00:15:44.011 --> 00:15:45.779 align:middle line:-1
我们发布此款app的时候

00:15:45.846 --> 00:15:48.982 align:middle line:-1
我们希望这些数据是来自于

00:15:49.049 --> 00:15:50.184 align:middle line:-1
我们将要提供的网络服务

00:15:50.817 --> 00:15:52.819 align:middle line:-1
但是我们还没有构建网络代码

00:15:52.886 --> 00:15:55.455 align:middle line:-2
所以我还没有这些数据
来填充我的视图

00:15:55.522 --> 00:15:57.991 align:middle line:-1
所以我先使用占位符代码

00:15:58.058 --> 00:16:01.261 align:middle line:-2
这对字符串来说会容易一些
就像现在我们对狐狸做的这样

00:16:01.328 --> 00:16:03.797 align:middle line:-1
但是对于图像来说就有些难度了

00:16:03.864 --> 00:16:07.000 align:middle line:-1
因为我可以在预览中加入

00:16:07.067 --> 00:16:08.502 align:middle line:-1
占位符资产

00:16:09.136 --> 00:16:09.970 align:middle line:-1
但是

00:16:10.437 --> 00:16:12.506 align:middle line:-1
但这也意味着我们要将此资产

00:16:12.573 --> 00:16:14.274 align:middle line:-1
与app一起发给用户

00:16:14.341 --> 00:16:16.009 align:middle line:-1
我不想这样

00:16:16.343 --> 00:16:18.278 align:middle line:-1
我也不想搞乱我的二进制文件

00:16:19.012 --> 00:16:24.084 align:middle line:-2
所以今年Xcode就出了一个
新功能来帮助解决这个问题

00:16:25.018 --> 00:16:26.720 align:middle line:-1
叫做开发资产

00:16:26.787 --> 00:16:30.657 align:middle line:-2
我现在就来展示这个功能
先打开项目编辑器

00:16:32.459 --> 00:16:36.230 align:middle line:-1
就在目标下面 下滑到开发资产

00:16:36.296 --> 00:16:38.198 align:middle line:-1
你可能已经注意到

00:16:38.665 --> 00:16:42.269 align:middle line:-2
我预先将预览资产
配置成目录 这里会保存所有图像

00:16:42.336 --> 00:16:43.570 align:middle line:-1
如果你是从头开始

00:16:43.637 --> 00:16:46.406 align:middle line:-1
并且使用的是新模板

00:16:46.473 --> 00:16:48.275 align:middle line:-1
它会自动预配置

00:16:48.342 --> 00:16:50.077 align:middle line:-1
但如果你编辑的是已经存在的app

00:16:50.143 --> 00:16:52.279 align:middle line:-1
添加这个也很容易

00:16:53.046 --> 00:16:55.349 align:middle line:-1
现在我将预览资产

00:16:55.415 --> 00:16:56.483 align:middle line:-1
加入到资产目录

00:16:56.550 --> 00:17:00.120 align:middle line:-2
就在我的预览数据下面
这是我的资产目录

00:17:00.187 --> 00:17:03.190 align:middle line:-1
这里已经有一张红狐的图片了

00:17:03.257 --> 00:17:04.958 align:middle line:-1
我就用它作为占位符

00:17:05.925 --> 00:17:08.929 align:middle line:-1
然后我打开动物名单元格

00:17:10.531 --> 00:17:11.365 align:middle line:-1
然后

00:17:13.066 --> 00:17:14.101 align:middle line:-1
我们可以预览

00:17:15.736 --> 00:17:20.040 align:middle line:-1
占位符已经是图片名称了

00:17:20.107 --> 00:17:23.176 align:middle line:-1
我们要做的就是把这个文字改成图像

00:17:26.012 --> 00:17:28.549 align:middle line:-1
图像就会在预览中出现了

00:17:28.916 --> 00:17:29.983 align:middle line:-1
看起来不错

00:17:30.284 --> 00:17:33.353 align:middle line:-1
但是我还想对它进行一些视觉处理

00:17:33.420 --> 00:17:35.055 align:middle line:-1
让它更加脱颖而出

00:17:35.322 --> 00:17:38.392 align:middle line:-1
我可以用SwiftUI代码来做

00:17:38.926 --> 00:17:43.063 align:middle line:-2
这看起来不错
有阴影和叠加

00:17:43.130 --> 00:17:45.299 align:middle line:-1
看起来不错 我们来看看代码

00:17:45.365 --> 00:17:49.403 align:middle line:-1
现在单元格的视图大部分

00:17:49.469 --> 00:17:51.004 align:middle line:-1
都被图像处理代码支配

00:17:51.371 --> 00:17:53.874 align:middle line:-1
我处理完图片

00:17:53.941 --> 00:17:56.643 align:middle line:-1
我也不想丢失这些细节

00:17:56.710 --> 00:18:00.614 align:middle line:-2
所以我Command
点击图像来进行提取

00:18:01.348 --> 00:18:02.416 align:middle line:-1
点击图像

00:18:02.850 --> 00:18:04.518 align:middle line:-1
选择提取视图

00:18:05.052 --> 00:18:09.022 align:middle line:-2
Xcode就会在下面的同一文件中
创建一个新的SwiftUI视图

00:18:09.089 --> 00:18:12.192 align:middle line:-1
我将其重新命名为动物图像

00:18:13.427 --> 00:18:16.363 align:middle line:-1
再给它一些参数 也就是图片名称

00:18:16.430 --> 00:18:18.932 align:middle line:-1
滑下来 这是我的动物图片

00:18:19.800 --> 00:18:22.936 align:middle line:-1
很简单 删除输入

00:18:26.240 --> 00:18:27.474 align:middle line:-1
更新预览

00:18:31.211 --> 00:18:33.180 align:middle line:-1
谢谢 我也觉得很厉害

00:18:33.580 --> 00:18:35.148 align:middle line:-1
你可以看到预览其实没有变

00:18:35.215 --> 00:18:38.685 align:middle line:-1
再划上去看看动物单元格是什么样的

00:18:38.752 --> 00:18:40.621 align:middle line:-1
现在就清楚多了

00:18:40.687 --> 00:18:44.024 align:middle line:-1
我也可以专注图像处理以外的细节了

00:18:45.025 --> 00:18:46.493 align:middle line:-1
现在看起来很好

00:18:46.560 --> 00:18:49.997 align:middle line:-2
请注意 我们现在
关注的只是视图本身

00:18:50.063 --> 00:18:53.534 align:middle line:-1
但它不会以这种方式出现在用户面前

00:18:53.600 --> 00:18:57.037 align:middle line:-1
用户只会在列表的上下文中

00:18:57.104 --> 00:18:59.406 align:middle line:-1
看到这个

00:18:59.473 --> 00:19:01.074 align:middle line:-1
所以现在我来做这一点

00:19:01.842 --> 00:19:05.746 align:middle line:-2
实际上我在这个
动物列表文件中已经开始了

00:19:05.812 --> 00:19:07.614 align:middle line:-1
之前我们还没有动物单元格

00:19:07.681 --> 00:19:12.753 align:middle line:-2
所以我创建了一个简单的
接收动物的列表

00:19:12.819 --> 00:19:15.923 align:middle line:-1
每个动物都会在单元格中展示

00:19:15.989 --> 00:19:19.560 align:middle line:-2
所以我用刚刚创建的新的
动物单元格来替换该代码

00:19:19.626 --> 00:19:20.861 align:middle line:-1
这里显示出来了

00:19:21.461 --> 00:19:23.830 align:middle line:-1
这和用户看到的十分接近了

00:19:25.199 --> 00:19:28.302 align:middle line:-1
但是没有动物园只有一只动物

00:19:28.368 --> 00:19:29.203 align:middle line:-1
所以

00:19:29.536 --> 00:19:34.308 align:middle line:-1
我用一些数据来填充该单元格

00:19:34.374 --> 00:19:38.078 align:middle line:-1
这和用户看到的就很接近了

00:19:38.912 --> 00:19:39.913 align:middle line:-1
那么要怎么做呢

00:19:39.980 --> 00:19:43.750 align:middle line:-1
向下滚动到预览配置代码

00:19:44.551 --> 00:19:47.087 align:middle line:-1
你可以看到我用只有一个元素的

00:19:47.154 --> 00:19:48.922 align:middle line:-1
数组来填充列表

00:19:49.256 --> 00:19:52.693 align:middle line:-1
所以我可以在这里进行硬编码

00:19:52.759 --> 00:19:54.328 align:middle line:-1
添加一些这个

00:19:54.595 --> 00:19:56.496 align:middle line:-1
三个单元格就会出现

00:19:56.864 --> 00:19:57.698 align:middle line:-1
很接近了

00:19:58.432 --> 00:20:00.601 align:middle line:-1
我可以继续这样填充

00:20:00.667 --> 00:20:02.402 align:middle line:-1
但这过于均匀

00:20:02.469 --> 00:20:05.539 align:middle line:-1
和用户看到的也不完全一样

00:20:06.139 --> 00:20:08.475 align:middle line:-1
动物名称有长有短

00:20:08.542 --> 00:20:09.610 align:middle line:-1
颜色也不一样

00:20:09.676 --> 00:20:13.413 align:middle line:-1
我真的很想知道它会是什么样子

00:20:14.014 --> 00:20:15.482 align:middle line:-1
那我还有其他选择吗

00:20:16.083 --> 00:20:17.251 align:middle line:-1
我还可以做一件事

00:20:17.317 --> 00:20:21.388 align:middle line:-2
因为预览代码是作为
app的一部分运行的

00:20:21.688 --> 00:20:24.057 align:middle line:-1
我实际上可以启动网络代码

00:20:24.124 --> 00:20:27.194 align:middle line:-1
点击网络 获取一些数据来做填充

00:20:27.261 --> 00:20:28.262 align:middle line:-1
可以这样做

00:20:28.328 --> 00:20:30.430 align:middle line:-1
但这样做会有一些问题

00:20:30.497 --> 00:20:31.331 align:middle line:-1
首先

00:20:32.032 --> 00:20:34.801 align:middle line:-2
我还没有创建网络代码
所以无法实现

00:20:35.102 --> 00:20:38.438 align:middle line:-1
第二 即使我创建了还是会有问题

00:20:38.505 --> 00:20:41.241 align:middle line:-1
因为每次我编辑该界面时

00:20:41.942 --> 00:20:45.212 align:middle line:-1
我必须要在线 且必须提供服务

00:20:46.280 --> 00:20:48.182 align:middle line:-1
这不是一个好方法

00:20:48.248 --> 00:20:53.620 align:middle line:-1
所以我想做的是获取数据并缓存

00:20:53.687 --> 00:20:55.556 align:middle line:-1
而且不用app中的

00:20:55.622 --> 00:20:58.559 align:middle line:-1
其他组件就可以看到视图

00:20:58.625 --> 00:21:00.460 align:middle line:-1
所以我已经提前做好；

00:21:00.527 --> 00:21:04.164 align:middle line:-1
我创建了JSON文件缓存

00:21:04.231 --> 00:21:05.065 align:middle line:-1
我来给你看看

00:21:05.465 --> 00:21:07.868 align:middle line:-2
预览数据下面就是一个
简单的JSON文件

00:21:07.935 --> 00:21:11.338 align:middle line:-1
就是一些动物列表来填充我们的数据

00:21:11.405 --> 00:21:12.739 align:middle line:-1
我能做的就是

00:21:13.707 --> 00:21:15.542 align:middle line:-1
我并不想把这个也一起传给用户

00:21:15.609 --> 00:21:17.277 align:middle line:-1
所以待会我要把它

00:21:18.045 --> 00:21:21.381 align:middle line:-2
添加到开发资产
但现在先暂时跳过

00:21:21.448 --> 00:21:26.453 align:middle line:-1
现在它已经在这里了 我只需要加载

00:21:26.520 --> 00:21:29.056 align:middle line:-1
我还要在预览代码中添加一些代码

00:21:29.122 --> 00:21:31.225 align:middle line:-1
从主包中加载JSON

00:21:31.758 --> 00:21:35.128 align:middle line:-2
并使用JSON解码器
来解析我的数据

00:21:35.195 --> 00:21:37.965 align:middle line:-1
现在我就有一组数据了 我可以

00:21:38.031 --> 00:21:39.299 align:middle line:-1
我把这个关了

00:21:39.600 --> 00:21:40.467 align:middle line:-1
我可以用

00:21:41.702 --> 00:21:45.072 align:middle line:-2
Self.sampleAnimals
来替代

00:21:46.440 --> 00:21:48.275 align:middle line:-1
更新预览

00:21:49.142 --> 00:21:51.745 align:middle line:-1
UI就会用样本动物进行填充

00:21:55.482 --> 00:21:56.316 align:middle line:-1
谢谢

00:21:56.984 --> 00:22:00.787 align:middle line:-1
这就比较像用户看到的界面了

00:22:00.854 --> 00:22:03.490 align:middle line:-1
但是在布局上马上也出现了一些问题

00:22:03.557 --> 00:22:05.592 align:middle line:-1
比如 这里的雪豹太长了

00:22:05.659 --> 00:22:08.562 align:middle line:-1
这个名称应该顶端对其

00:22:09.496 --> 00:22:12.633 align:middle line:-1
另外一个问题是 标题太大了

00:22:12.699 --> 00:22:15.669 align:middle line:-2
你现在看还可以
但到了这里就有点空

00:22:15.736 --> 00:22:17.871 align:middle line:-1
我想顶部和底部的字再大一点

00:22:17.938 --> 00:22:21.175 align:middle line:-1
因为这些改变都是在动物单元格里的

00:22:21.241 --> 00:22:23.277 align:middle line:-1
所以找到动物单元格进行连接

00:22:25.078 --> 00:22:25.946 align:middle line:-1
看看发生了什么

00:22:26.747 --> 00:22:29.016 align:middle line:-1
刚刚的预览不见了

00:22:29.082 --> 00:22:34.354 align:middle line:-2
我回到了单元格的上下文
所以列表不见了

00:22:34.855 --> 00:22:37.791 align:middle line:-1
我想在找到该单元格出现的

00:22:37.858 --> 00:22:40.627 align:middle line:-1
上下文的同时进行编辑

00:22:40.694 --> 00:22:41.528 align:middle line:-1
也就是该列表

00:22:41.962 --> 00:22:44.531 align:middle line:-1
我可以在此处添加预览

00:22:44.598 --> 00:22:45.666 align:middle line:-1
来预览该列表

00:22:45.732 --> 00:22:49.002 align:middle line:-2
就像我之前说到的
你可以提供任何内容

00:22:49.069 --> 00:22:50.137 align:middle line:-1
作为预览的一部分

00:22:50.604 --> 00:22:53.707 align:middle line:-1
但这也就意味着每次我要看

00:22:53.774 --> 00:22:54.608 align:middle line:-1
这里面的东西时

00:22:54.675 --> 00:22:56.643 align:middle line:-2
我要一遍又一编地
复制相同的代码

00:22:56.710 --> 00:22:57.744 align:middle line:-1
所以还有更好的方法

00:22:59.079 --> 00:23:00.347 align:middle line:-1
我来告诉你可以怎么做

00:23:00.848 --> 00:23:02.249 align:middle line:-1
再次回到动物列表

00:23:02.316 --> 00:23:04.585 align:middle line:-1
会看到和之前一样的预览列表

00:23:04.651 --> 00:23:08.121 align:middle line:-1
用到左下角这个固定按钮

00:23:08.422 --> 00:23:09.356 align:middle line:-1
点击

00:23:09.423 --> 00:23:10.591 align:middle line:-1
你就会看到

00:23:10.657 --> 00:23:15.262 align:middle line:-1
它将当前预览固定到此预览中

00:23:15.329 --> 00:23:18.632 align:middle line:-2
因为我是在不同的文件中进行导航的
我们来看看会发生什么

00:23:20.767 --> 00:23:21.935 align:middle line:-1
此预览不变

00:23:23.337 --> 00:23:24.171 align:middle line:-1
谢谢

00:23:27.241 --> 00:23:29.109 align:middle line:-1
这里有一个标题告诉我

00:23:29.176 --> 00:23:31.478 align:middle line:-1
现在的预览和之前

00:23:31.545 --> 00:23:32.679 align:middle line:-1
文件里的不一样

00:23:32.746 --> 00:23:35.415 align:middle line:-1
这是动物列表里的 所以你知道

00:23:35.482 --> 00:23:38.352 align:middle line:-1
如果我想从这个文件中获取原始预览

00:23:38.418 --> 00:23:40.587 align:middle line:-1
我就直接滑下去 一切都还在

00:23:40.654 --> 00:23:42.356 align:middle line:-1
我不需要做任何上下文

00:23:46.994 --> 00:23:48.962 align:middle line:-1
现在我知道要做什么

00:23:49.029 --> 00:23:52.032 align:middle line:-2
对VStack点击Command
调用检查

00:23:52.099 --> 00:23:54.835 align:middle line:-1
就可以检查和改变这里的对齐方式

00:23:55.736 --> 00:23:56.837 align:middle line:-1
放大一点

00:23:58.005 --> 00:23:58.972 align:middle line:-1
我们来看看

00:24:06.313 --> 00:24:07.247 align:middle line:-1
我们回去

00:24:07.314 --> 00:24:09.583 align:middle line:-1
再放小一点

00:24:11.218 --> 00:24:12.553 align:middle line:-1
看起来好多了 我喜欢

00:24:12.619 --> 00:24:13.887 align:middle line:-1
所以就让它这样了

00:24:14.454 --> 00:24:15.956 align:middle line:-1
下一步就是

00:24:16.023 --> 00:24:21.762 align:middle line:-2
是一个操作列表 你可以在每个
单元格被选中时使用这些操作

00:24:22.129 --> 00:24:25.299 align:middle line:-1
现在我要进行单元格实现

00:24:25.933 --> 00:24:28.435 align:middle line:-1
在另一个叫可选动物单元格的文件中

00:24:29.670 --> 00:24:32.873 align:middle line:-2
因为我不想破坏我的数据
我的动物单元格模型数据

00:24:32.940 --> 00:24:36.910 align:middle line:-1
不想加一些来自UI的东西

00:24:36.977 --> 00:24:40.047 align:middle line:-2
我添加了一个小包装程序
把这些数据都包起来

00:24:40.414 --> 00:24:43.016 align:middle line:-1
再向其添加选定的点

00:24:43.083 --> 00:24:47.354 align:middle line:-2
我再用这个
叫可选动物单元格的另一个视图

00:24:47.421 --> 00:24:50.591 align:middle line:-2
它要做的就是接受模型
显示我的动物单元格

00:24:50.657 --> 00:24:54.394 align:middle line:-1
检查选定点并显示操作

00:24:54.461 --> 00:24:55.729 align:middle line:-1
这些小图标

00:24:55.796 --> 00:24:58.065 align:middle line:-1
会给我更多的信息并拍照

00:24:59.399 --> 00:25:01.101 align:middle line:-1
如果我取消固定预览

00:25:01.168 --> 00:25:04.271 align:middle line:-2
你可以看到我为此单元格
创建了两个预览

00:25:04.338 --> 00:25:07.307 align:middle line:-2
一个是选定状态
另一个是未选定状态

00:25:07.741 --> 00:25:10.277 align:middle line:-2
反了 这个是未选定的
这个是选定的

00:25:11.712 --> 00:25:13.380 align:middle line:-1
这是一个好方法

00:25:13.447 --> 00:25:16.183 align:middle line:-2
但同样我希望在列表
上下文中看到这些

00:25:17.084 --> 00:25:19.353 align:middle line:-1
所以我要将选择也加入列表中

00:25:19.419 --> 00:25:21.321 align:middle line:-1
所以定位到动物列表

00:25:23.156 --> 00:25:28.362 align:middle line:-2
SwiftUI处理这样的数据的
方式是使用State变量

00:25:28.428 --> 00:25:32.299 align:middle line:-1
所以我在此添加以储存数据

00:25:32.366 --> 00:25:34.668 align:middle line:-1
就是我现在选择的数据

00:25:35.836 --> 00:25:38.172 align:middle line:-1
再用一些代码

00:25:38.472 --> 00:25:42.843 align:middle line:-2
进行翻译
因为该数据指定了所选模型

00:25:42.910 --> 00:25:46.280 align:middle line:-2
但不管单元格是否被选中
它都有一个布尔值

00:25:46.713 --> 00:25:48.182 align:middle line:-1
我要把它也加上去

00:25:49.783 --> 00:25:51.552 align:middle line:-1
现在我做了两件事

00:25:51.618 --> 00:25:53.353 align:middle line:-1
我要用这些可选动物表格

00:25:54.688 --> 00:25:56.089 align:middle line:-1
来替换动物列表

00:25:57.457 --> 00:25:58.525 align:middle line:-1
我只需要这样

00:25:58.592 --> 00:26:00.194 align:middle line:-1
更新预览

00:26:01.195 --> 00:26:02.563 align:middle line:-1
你可以看到

00:26:03.797 --> 00:26:04.932 align:middle line:-1
没有什么变化

00:26:05.432 --> 00:26:06.633 align:middle line:-1
为什么呢

00:26:06.700 --> 00:26:07.534 align:middle line:-1
因为

00:26:08.435 --> 00:26:10.304 align:middle line:-1
这里的选则是可选的

00:26:10.737 --> 00:26:12.873 align:middle line:-1
但是我的列表默认是没有被选中

00:26:12.940 --> 00:26:16.176 align:middle line:-1
所以看不到我刚刚改的东西

00:26:16.243 --> 00:26:18.879 align:middle line:-1
我也可以点击实时模式按钮

00:26:20.080 --> 00:26:21.248 align:middle line:-1
用实时视图查看页面

00:26:21.548 --> 00:26:23.150 align:middle line:-1
如果我点击

00:26:24.151 --> 00:26:25.285 align:middle line:-1
选择就出现了

00:26:26.019 --> 00:26:27.421 align:middle line:-1
和我想的一样

00:26:28.188 --> 00:26:30.891 align:middle line:-1
但如果我想创建静态 谢谢

00:26:31.358 --> 00:26:34.461 align:middle line:-1
但如果我想创建静态预览

00:26:35.262 --> 00:26:38.599 align:middle line:-1
来提醒我选择状态是这样的

00:26:38.665 --> 00:26:41.869 align:middle line:-2
所以当我对这些
进行更改时 我不会忘记

00:26:41.935 --> 00:26:43.871 align:middle line:-1
验证更改后的选择看起来是什么样的

00:26:43.937 --> 00:26:46.106 align:middle line:-1
我可以在这里创建静态预览

00:26:46.173 --> 00:26:48.342 align:middle line:-1
但是要对代码做出一些更改

00:26:48.408 --> 00:26:51.245 align:middle line:-1
因为这些数据是比较私密的

00:26:51.311 --> 00:26:54.348 align:middle line:-1
我无法从预览中做出更改

00:26:54.414 --> 00:26:56.517 align:middle line:-1
那么我该怎么做才能展示这个预览呢

00:26:56.583 --> 00:26:58.619 align:middle line:-1
我要做的就是将其移动至

00:26:58.685 --> 00:27:00.420 align:middle line:-1
我可以设置的绑定中

00:27:00.687 --> 00:27:03.357 align:middle line:-1
我将通过引入新视图来实现

00:27:03.423 --> 00:27:05.926 align:middle line:-1
我要在动物列表中创建私密视图

00:27:05.993 --> 00:27:07.961 align:middle line:-1
会运用于所有的实现中

00:27:08.028 --> 00:27:09.229 align:middle line:-1
我要叫它内容

00:27:09.596 --> 00:27:13.233 align:middle line:-2
因为这是私密的
所以只在该文件夹中可用

00:27:14.001 --> 00:27:17.804 align:middle line:-1
然后采用我刚刚构建的所有实现

00:27:18.272 --> 00:27:22.109 align:middle line:-1
移动到我刚刚声明的视图中

00:27:22.476 --> 00:27:23.610 align:middle line:-1
最后一点是

00:27:23.677 --> 00:27:27.414 align:middle line:-1
是为动物列表添加主体实现

00:27:27.481 --> 00:27:28.549 align:middle line:-1
根据是其内容

00:27:28.615 --> 00:27:32.085 align:middle line:-2
这样做只是证实了我刚刚
声明的内容视图

00:27:32.386 --> 00:27:33.420 align:middle line:-1
运用于动物

00:27:33.487 --> 00:27:35.789 align:middle line:-1
并创建一个绑定到选定的状态

00:27:36.356 --> 00:27:38.692 align:middle line:-1
现在可以看到预览中的改变

00:27:38.759 --> 00:27:40.527 align:middle line:-1
而不是预览动物列表了

00:27:41.128 --> 00:27:43.063 align:middle line:-1
预览的是动物列表内容

00:27:44.731 --> 00:27:45.799 align:middle line:-1
当我更新后

00:27:47.568 --> 00:27:49.369 align:middle line:-1
可以看到选定出现了

00:27:49.436 --> 00:27:51.371 align:middle line:-1
实现了选定的静态预览

00:27:51.438 --> 00:27:55.709 align:middle line:-1
现 在 我在这里设置动物列表预览

00:27:55.776 --> 00:27:58.445 align:middle line:-1
同样可以验证未选定时

00:27:58.512 --> 00:27:59.580 align:middle line:-1
动物列表看起来是什么样的

00:27:59.646 --> 00:28:04.117 align:middle line:-2
而且 我仍然可以使用
Live Vote验证过渡和动画

00:28:04.184 --> 00:28:05.886 align:middle line:-1
并对预览进行编辑

00:28:07.487 --> 00:28:08.322 align:middle line:-1
谢谢

00:28:11.625 --> 00:28:14.461 align:middle line:-1
现在我们介绍了XCode预览

00:28:14.528 --> 00:28:15.929 align:middle line:-1
以及如何在SwiftUI中使用

00:28:15.996 --> 00:28:19.099 align:middle line:-1
但是它能做的还有更多

00:28:19.633 --> 00:28:22.503 align:middle line:-1
下面欢迎Nate进行讲解

00:28:25.172 --> 00:28:27.508 align:middle line:-1
（演示）

00:28:27.574 --> 00:28:28.475 align:middle line:-1
谢谢Anton

00:28:33.347 --> 00:28:35.983 align:middle line:-1
并不是所有人都是从这周开始

00:28:36.049 --> 00:28:37.918 align:middle line:-2
用SwiftUI写一款
全新的app的

00:28:38.519 --> 00:28:40.220 align:middle line:-2
可能有些人在
App Store已经有app

00:28:40.287 --> 00:28:42.155 align:middle line:-1
或者是有已经做了几年的app了

00:28:42.923 --> 00:28:47.761 align:middle line:-2
因为SwiftUI与UIKit、AppKit
和WatchKit都有很好的集成

00:28:48.295 --> 00:28:51.164 align:middle line:-2
也因为API是
SwiftUI的一部分

00:28:52.032 --> 00:28:55.802 align:middle line:-2
Xcode预览在这些框架下
也能很好地工作

00:28:57.971 --> 00:28:59.306 align:middle line:-1
在我们的动物园app

00:28:59.907 --> 00:29:02.176 align:middle line:-1
当你点击详情按钮

00:29:02.543 --> 00:29:04.611 align:middle line:-2
也就是Anton刚刚在
单元格添加的按钮

00:29:04.878 --> 00:29:08.282 align:middle line:-1
就会展示选定动物的细节

00:29:08.882 --> 00:29:13.420 align:middle line:-2
该界面是用
UIViewController写的

00:29:14.788 --> 00:29:16.356 align:middle line:-1
叫动物视图控制器

00:29:17.524 --> 00:29:18.659 align:middle line:-1
让我给你们看看代码

00:29:19.426 --> 00:29:21.628 align:middle line:-1
我先关闭画布

00:29:21.695 --> 00:29:22.729 align:middle line:-1
按Command 返回

00:29:23.630 --> 00:29:25.766 align:middle line:-1
再转到动物视图控制器

00:29:27.768 --> 00:29:30.003 align:middle line:-1
我给你们看看视图控制器是怎样的

00:29:30.270 --> 00:29:32.539 align:middle line:-1
但是先不急创建和运行

00:29:32.606 --> 00:29:34.741 align:middle line:-1
我先创建一个预览

00:29:35.542 --> 00:29:37.344 align:middle line:-1
现在预览还只是代码

00:29:37.411 --> 00:29:40.347 align:middle line:-1
所以我们可以继续在此文件中

00:29:40.414 --> 00:29:43.150 align:middle line:-2
与此UIViewController
一起创建预览

00:29:43.684 --> 00:29:46.520 align:middle line:-1
但在这个例子中 我想创建新文件

00:29:47.120 --> 00:29:50.157 align:middle line:-2
按Command-0
打开项目导航器

00:29:50.557 --> 00:29:54.027 align:middle line:-1
之后在我想要的组中添加新文件

00:29:54.661 --> 00:29:56.563 align:middle line:-1
右击 选择新文件

00:29:57.431 --> 00:29:58.265 align:middle line:-1
SwiftFile

00:29:58.332 --> 00:30:01.702 align:middle line:-2
输入名称
动物图片控制器预览

00:30:06.306 --> 00:30:08.976 align:middle line:-2
预览API是
SwiftUI的一部分

00:30:09.042 --> 00:30:12.045 align:middle line:-1
所以要编写预览 你需要导入该框架

00:30:13.313 --> 00:30:15.616 align:middle line:-1
为了创建在画布中显示的预览

00:30:15.682 --> 00:30:18.685 align:middle line:-2
你需要为预览提供程序协议
添加一致性

00:30:19.219 --> 00:30:21.455 align:middle line:-1
在该例中 我要创建一个全新类型

00:30:21.522 --> 00:30:25.392 align:middle line:-2
来确定该协议
将其命名为动物视图控制器预览

00:30:26.226 --> 00:30:29.396 align:middle line:-1
现在 预览提供程序协议只有一个

00:30:29.463 --> 00:30:33.400 align:middle line:-1
必须实现的要求 即静态预览属性

00:30:33.967 --> 00:30:36.803 align:middle line:-1
为实现该属性 我要返回某些视图

00:30:36.870 --> 00:30:40.807 align:middle line:-2
在该例中我们需要嵌入
动物视图控制器中的视图

00:30:42.042 --> 00:30:46.747 align:middle line:-2
SwiftUI支持以
Representables的形式

00:30:47.047 --> 00:30:50.450 align:middle line:-2
将UIViewControllers
嵌入到SwiftViews中

00:30:50.751 --> 00:30:52.019 align:middle line:-1
欲了解更多详情

00:30:52.085 --> 00:30:54.488 align:middle line:-1
请查看集成SwiftUI演讲

00:30:54.988 --> 00:30:55.889 align:middle line:-1
在我们的例子中

00:30:56.156 --> 00:30:58.825 align:middle line:-2
因为我们想要
UIViewController

00:30:59.293 --> 00:31:02.996 align:middle line:-2
我们想要添加一个可表示的
UIViewController的一致性

00:31:03.530 --> 00:31:05.732 align:middle line:-1
方便起见 我继续操作

00:31:05.799 --> 00:31:08.569 align:middle line:-2
将其与
PreviewProvider一起添加

00:31:08.635 --> 00:31:10.637 align:middle line:-1
至动物视图控制器预览类别

00:31:11.972 --> 00:31:13.440 align:middle line:-1
为了达到目的

00:31:13.907 --> 00:31:16.109 align:middle line:-2
UIViewController
可表示的协议

00:31:16.176 --> 00:31:19.046 align:middle line:-1
还有三个要求需要实现

00:31:19.413 --> 00:31:23.317 align:middle line:-1
第一种是指定要表示的

00:31:23.383 --> 00:31:24.618 align:middle line:-2
UIViewController
类型

00:31:25.052 --> 00:31:27.454 align:middle line:-1
在该例中就是动物视图控制器

00:31:28.088 --> 00:31:29.089 align:middle line:-1
接下来

00:31:29.156 --> 00:31:33.026 align:middle line:-2
我们需要描述如何创建这些
带有上下文的

00:31:33.093 --> 00:31:35.262 align:middle line:-1
动物视图控制器

00:31:35.562 --> 00:31:37.231 align:middle line:-1
该上下文包括

00:31:37.297 --> 00:31:39.800 align:middle line:-1
用户是在明亮或是深色模式下使用

00:31:39.867 --> 00:31:41.535 align:middle line:-1
或是动态字体的大小

00:31:43.470 --> 00:31:44.304 align:middle line:-1
在该例中

00:31:44.371 --> 00:31:46.273 align:middle line:-2
我们已经在
UIStoryBoard

00:31:46.340 --> 00:31:47.674 align:middle line:-1
添加了包好的一类

00:31:47.741 --> 00:31:49.910 align:middle line:-1
我要从中加载动物视图控制器

00:31:51.478 --> 00:31:53.680 align:middle line:-1
我们要实现的第三个要求

00:31:53.747 --> 00:31:55.449 align:middle line:-2
就是更新
UIViewController

00:31:55.916 --> 00:31:59.419 align:middle line:-1
这允许我们根据环境的变化等

00:31:59.486 --> 00:32:02.723 align:middle line:-1
改变视图控制器的外观

00:32:03.390 --> 00:32:05.692 align:middle line:-1
在该例中 我们需要创建预览

00:32:06.159 --> 00:32:09.596 align:middle line:-1
所以我将继续将此实现留空

00:32:11.198 --> 00:32:12.866 align:middle line:-1
现在我们已经符合

00:32:13.233 --> 00:32:15.669 align:middle line:-2
UIViewController
可表示的协议

00:32:15.969 --> 00:32:18.739 align:middle line:-1
我们已准备好实施预览的方法

00:32:20.240 --> 00:32:23.343 align:middle line:-1
具体来说 我们将返回符合

00:32:23.410 --> 00:32:25.646 align:middle line:-2
UIViewController
表示类型的实例

00:32:25.712 --> 00:32:28.081 align:middle line:-1
也就是动物视图控制器预览

00:32:28.982 --> 00:32:30.984 align:middle line:-1
在这几行代码

00:32:31.451 --> 00:32:35.122 align:middle line:-2
你可以在Xcode中看到
UIViewController的预览

00:32:35.189 --> 00:32:36.290 align:middle line:-1
我们来看看

00:32:37.090 --> 00:32:39.159 align:middle line:-1
我要关闭项目导航

00:32:39.459 --> 00:32:42.296 align:middle line:-2
再打开画布
按Command-选项-返回

00:32:43.664 --> 00:32:47.100 align:middle line:-1
因为我们在源编辑器中添加了新方法

00:32:47.167 --> 00:32:48.435 align:middle line:-1
所以我们要重新创建

00:32:48.869 --> 00:32:50.437 align:middle line:-1
在画布中

00:32:50.504 --> 00:32:54.107 align:middle line:-2
UIViewController预览
是用Swift写的

00:32:54.174 --> 00:32:57.110 align:middle line:-1
谢谢 这真的很棒

00:32:57.945 --> 00:33:02.716 align:middle line:-2
在UIKit中用Swift写的
UIViewController预览

00:33:05.452 --> 00:33:07.688 align:middle line:-1
但是当我看该视图控制器

00:33:07.754 --> 00:33:09.189 align:middle line:-1
我发现了一个问题

00:33:09.489 --> 00:33:12.059 align:middle line:-1
这些文本读起来太困难了

00:33:13.026 --> 00:33:16.897 align:middle line:-2
图片上方的文字下面
还有一个底层视图

00:33:17.231 --> 00:33:20.100 align:middle line:-1
它是半透明的 因此让文本更加好读

00:33:20.367 --> 00:33:22.703 align:middle line:-1
但是这还不够半透明

00:33:23.136 --> 00:33:26.473 align:middle line:-1
所以让我们继续提高不透明度

00:33:26.940 --> 00:33:28.408 align:middle line:-1
我将该预览固定

00:33:28.709 --> 00:33:31.278 align:middle line:-1
这样我们就可以看到做出的改变

00:33:31.979 --> 00:33:34.348 align:middle line:-1
转到动物视图控制器文件

00:33:37.384 --> 00:33:41.955 align:middle line:-2
在这里我将底层视图的
alpha值调到0.5

00:33:42.689 --> 00:33:44.691 align:middle line:-1
画布立马做出更新

00:33:44.958 --> 00:33:48.829 align:middle line:-2
为视图控制器显示出
刚刚所做改变的预览

00:33:49.830 --> 00:33:53.200 align:middle line:-2
Xcode的预览
并不只是与SwiftUI一起工作

00:33:53.467 --> 00:33:55.402 align:middle line:-1
而是所有Swift代码

00:33:55.469 --> 00:33:58.405 align:middle line:-1
而且 我们可以获得所有热交换

00:33:58.472 --> 00:34:01.842 align:middle line:-1
和增量更新而无需重新编译文字值

00:34:01.909 --> 00:34:03.310 align:middle line:-1
就像Anton说的

00:34:03.377 --> 00:34:07.080 align:middle line:-2
SwiftUI UIAppKit
或WatchKit都可以一起工作

00:34:11.717 --> 00:34:12.553 align:middle line:-1
谢谢

00:34:15.121 --> 00:34:17.623 align:middle line:-2
Anton向你们展示了
动物视图控制器

00:34:18.158 --> 00:34:21.094 align:middle line:-2
我已经对其进行编辑了
所以我已经加上了预览

00:34:21.527 --> 00:34:22.563 align:middle line:-1
让我给你们看看

00:34:23.030 --> 00:34:26.934 align:middle line:-1
取消固定动物视图编辑器

00:34:27.201 --> 00:34:29.503 align:middle line:-1
点击左下角取消固定按钮

00:34:29.803 --> 00:34:30.771 align:middle line:-1
再转到

00:34:31.103 --> 00:34:33.540 align:middle line:-1
动物操作视图控制器表示

00:34:34.474 --> 00:34:37.543 align:middle line:-1
这是动物操作视图控制器的预览

00:34:38.277 --> 00:34:41.348 align:middle line:-1
我们觉得按钮隔太开了

00:34:41.614 --> 00:34:45.284 align:middle line:-1
我们觉得IImage不太合适

00:34:45.351 --> 00:34:47.688 align:middle line:-1
它与平台不太一致

00:34:48.655 --> 00:34:50.123 align:middle line:-1
我们来解决这个问题

00:34:50.991 --> 00:34:53.627 align:middle line:-1
打开动物操作视图操作器文件

00:34:54.027 --> 00:34:57.464 align:middle line:-1
因为我实是在很久很久之前写的

00:34:57.531 --> 00:34:59.533 align:middle line:-2
所以我用的是
Objective-C

00:35:04.972 --> 00:35:06.139 align:middle line:-1
很棒的语言

00:35:07.374 --> 00:35:10.377 align:middle line:-1
我们来把填充详情按钮的

00:35:10.444 --> 00:35:12.980 align:middle line:-2
系统图像改成
info.circle

00:35:14.748 --> 00:35:15.582 align:middle line:-1
再返回到

00:35:16.149 --> 00:35:17.651 align:middle line:-1
我们的预览

00:35:18.318 --> 00:35:19.486 align:middle line:-1
再更新预览

00:35:19.820 --> 00:35:23.023 align:middle line:-2
因为这是用Objective-C
而不是Swift写的

00:35:24.892 --> 00:35:28.295 align:middle line:-2
Xcode会告诉构建系统
启动正常重建

00:35:28.362 --> 00:35:31.832 align:middle line:-1
而不是使用增量更新或热交换

00:35:31.899 --> 00:35:34.134 align:middle line:-1
但还是很快

00:35:34.201 --> 00:35:37.604 align:middle line:-1
特别是比进行app重建

00:35:37.671 --> 00:35:40.240 align:middle line:-1
运行又导航来说快多了

00:35:41.208 --> 00:35:45.512 align:middle line:-2
Xcode预览不仅适用于
SwiftUI或是Swift文件

00:35:45.846 --> 00:35:50.117 align:middle line:-2
甚至UIKit、AppKit和WatchKit中
用Objective-C写的代码

00:35:50.184 --> 00:35:52.586 align:middle line:-1
而是适用于Xcode能理解的

00:35:52.653 --> 00:35:54.087 align:middle line:-1
所有源文件

00:36:04.898 --> 00:36:05.732 align:middle line:0
正如你所见

00:36:06.433 --> 00:36:09.636 align:middle line:-2
Xcode预览可以
真正加快工作流程

00:36:10.237 --> 00:36:11.605 align:middle line:-1
但是现在我想说说

00:36:12.206 --> 00:36:16.610 align:middle line:-1
如何调整你的app

00:36:17.411 --> 00:36:20.214 align:middle line:-2
如何调整app体系结构
使Xcode预览更加适合你

00:36:20.848 --> 00:36:21.682 align:middle line:-1
特别是

00:36:22.282 --> 00:36:23.917 align:middle line:-1
我想说说在我们动物园app中

00:36:23.984 --> 00:36:25.586 align:middle line:-1
出现过的一个类型

00:36:25.853 --> 00:36:28.055 align:middle line:-1
叫动物单元格模型

00:36:28.922 --> 00:36:30.457 align:middle line:-1
我们做了什么呢

00:36:31.658 --> 00:36:32.559 align:middle line:-1
来看看

00:36:32.626 --> 00:36:34.428 align:middle line:-1
我们填充了动物视图

00:36:35.195 --> 00:36:36.163 align:middle line:-1
动物单元格

00:36:36.897 --> 00:36:39.566 align:middle line:-1
因为SwiftUI流畅的API

00:36:40.300 --> 00:36:41.134 align:middle line:-1
还有

00:36:42.936 --> 00:36:46.573 align:middle line:-2
我们也可以很简便地
实现body方法

00:36:47.508 --> 00:36:49.910 align:middle line:-1
我们也用了单元格模型

00:36:51.011 --> 00:36:53.113 align:middle line:-1
哪个数据

00:36:53.180 --> 00:36:57.985 align:middle line:-2
进入视图的哪部分
都是非常明确的

00:37:02.122 --> 00:37:04.758 align:middle line:-1
我们就可以使用动物模型对象

00:37:04.825 --> 00:37:06.960 align:middle line:-1
再将其直接传入视图

00:37:07.728 --> 00:37:09.730 align:middle line:-1
但是我们没有 原因有二

00:37:11.465 --> 00:37:12.299 align:middle line:-1
第一

00:37:12.833 --> 00:37:14.868 align:middle line:-1
使用视图模型

00:37:15.202 --> 00:37:16.436 align:middle line:-1
添加新预览

00:37:17.104 --> 00:37:18.505 align:middle line:-1
是很容易的

00:37:19.206 --> 00:37:23.343 align:middle line:-1
为实现预览提供程序的一个好方法

00:37:23.744 --> 00:37:27.014 align:middle line:-1
是在视图模型中添加静态数组

00:37:27.381 --> 00:37:31.351 align:middle line:-1
并在您的静态预览属性的实现中

00:37:31.952 --> 00:37:35.989 align:middle line:-1
迭代该视图模型数组并填充视图

00:37:36.557 --> 00:37:40.727 align:middle line:-1
当新数据配置

00:37:40.794 --> 00:37:43.096 align:middle line:-1
会导致不同布局时 这就很有用了

00:37:43.931 --> 00:37:48.168 align:middle line:-2
你要做的就是创建一个新的
视图模型并将其加入该数组

00:37:49.203 --> 00:37:51.405 align:middle line:-1
然后你就会在画布上看到新预览

00:37:51.471 --> 00:37:53.207 align:middle line:-1
显示你的新视图布局

00:37:54.575 --> 00:37:57.110 align:middle line:-1
在说第二个为什么我们

00:37:57.477 --> 00:38:00.380 align:middle line:-2
要在动物园app中使用
视图模型的原因前

00:38:00.881 --> 00:38:03.550 align:middle line:-1
如果你们忍得了我的话

00:38:03.617 --> 00:38:04.551 align:middle line:-1
我想提一点哲学问题

00:38:08.188 --> 00:38:12.726 align:middle line:-1
应用程序的模型层包含丰富的对象图

00:38:13.427 --> 00:38:16.930 align:middle line:-2
在动物园app中
我们有动物模型对象

00:38:17.531 --> 00:38:20.868 align:middle line:-1
而且该动物模型对象也只是

00:38:21.235 --> 00:38:23.203 align:middle line:-1
许多动物中的一个

00:38:24.605 --> 00:38:25.672 align:middle line:-1
另一方面

00:38:25.739 --> 00:38:29.076 align:middle line:-1
该动物模型对象中含有基因数组

00:38:30.878 --> 00:38:33.614 align:middle line:-2
那么你要怎么将
这些信息展示给用户呢

00:38:34.948 --> 00:38:36.016 align:middle line:-1
好

00:38:36.483 --> 00:38:38.018 align:middle line:-1
并不是一次做到的

00:38:40.454 --> 00:38:44.691 align:middle line:-2
比如说 你不会在动物单元格里
加入基因组信息

00:38:44.758 --> 00:38:46.260 align:middle line:-1
信息量太大了

00:38:47.127 --> 00:38:49.496 align:middle line:-1
所以你要从

00:38:49.563 --> 00:38:52.132 align:middle line:-1
模型对象中提取

00:38:52.566 --> 00:38:54.101 align:middle line:-1
最重要的信息

00:38:54.535 --> 00:38:57.237 align:middle line:-1
再创建预览

00:38:57.771 --> 00:39:00.841 align:middle line:-1
但不是用一对一的方式来提取

00:39:01.375 --> 00:39:04.578 align:middle line:-1
通常要对数据进行一些转换

00:39:05.379 --> 00:39:09.016 align:middle line:-1
我们从动物模型对象中提取了两部分

00:39:09.416 --> 00:39:14.321 align:middle line:-2
并将它们组合起来
创建一个包含属性和种类的单个文本

00:39:16.990 --> 00:39:19.626 align:middle line:-1
转化和提取的过程

00:39:19.893 --> 00:39:21.028 align:middle line:-1
很容易出错

00:39:21.662 --> 00:39:24.064 align:middle line:-1
但是用预览模型就简单多了

00:39:25.899 --> 00:39:27.167 align:middle line:-1
这是一个预览模型

00:39:28.068 --> 00:39:32.606 align:middle line:-2
特别是我们的动物单元格模型
也是从模型对象构建的

00:39:34.441 --> 00:39:37.811 align:middle line:-2
我们就可以清楚地看到这些数据
从模型对象中被提取出来

00:39:37.878 --> 00:39:38.912 align:middle line:-1
再进行结合

00:39:38.979 --> 00:39:42.416 align:middle line:-2
我们就可以向用户展示
我们想要的东西了

00:39:43.650 --> 00:39:47.254 align:middle line:-1
而且这一点非常有用

00:39:47.321 --> 00:39:50.591 align:middle line:-1
因为检验起来更容易

00:39:50.924 --> 00:39:54.294 align:middle line:-1
当我们遇到新的模型对象

00:39:54.828 --> 00:39:58.198 align:middle line:-1
需要以不同的方式向用户展示时

00:39:58.699 --> 00:40:01.101 align:middle line:-1
我们需要做的就是利用XCTest

00:40:01.168 --> 00:40:07.007 align:middle line:-2
添加一个新的测试用例
并在该测试用例中创建一个模型对象

00:40:07.074 --> 00:40:08.876 align:middle line:-1
从中创建一个视图模型

00:40:08.942 --> 00:40:10.677 align:middle line:-1
再验证该视图模型

00:40:10.744 --> 00:40:13.747 align:middle line:-1
是否具有我们希望向用户显示的数据

00:40:13.814 --> 00:40:15.883 align:middle line:-1
以表示该模型对象

00:40:17.017 --> 00:40:20.454 align:middle line:-2
这也是为什么我们
要在动物园app中

00:40:20.521 --> 00:40:21.688 align:middle line:-1
使用视图模型的第二个原因

00:40:22.523 --> 00:40:23.624 align:middle line:-1
（应用架构）

00:40:23.690 --> 00:40:24.525 align:middle line:-1
那么对于总体app架构来说

00:40:24.591 --> 00:40:27.094 align:middle line:-1
这意味什么呢

00:40:29.997 --> 00:40:32.766 align:middle line:-1
构建一款好app 重要的一点是

00:40:33.300 --> 00:40:38.172 align:middle line:-1
是在你的模型层中

00:40:38.238 --> 00:40:40.007 align:middle line:-1
采用丰富的模型对象图

00:40:40.974 --> 00:40:43.277 align:middle line:-1
再向你的用户进行展示

00:40:43.343 --> 00:40:46.246 align:middle line:-1
再从中提取最重要的信息

00:40:46.613 --> 00:40:49.082 align:middle line:-1
再以好看的方式展示给用户

00:40:50.417 --> 00:40:54.087 align:middle line:-1
使用视图模型会简单得多

00:40:55.022 --> 00:40:56.056 align:middle line:-1
原因是

00:40:56.723 --> 00:40:59.159 align:middle line:-1
你可以使用以下流程

00:41:01.929 --> 00:41:05.032 align:middle line:-1
为你的模型对象构建视图模型

00:41:07.367 --> 00:41:09.236 align:middle line:-1
这个过程很容易出错

00:41:09.303 --> 00:41:11.705 align:middle line:-1
所以你一遍又一遍地测试

00:41:12.139 --> 00:41:15.242 align:middle line:-1
确保视图模型包含你想让

00:41:15.309 --> 00:41:16.610 align:middle line:-1
你的用户看到的完整数据

00:41:17.010 --> 00:41:19.913 align:middle line:-1
第二 对于每个视图模型的不同风格

00:41:21.748 --> 00:41:25.652 align:middle line:-2
都会呈现不同的布局
你都要加上预览

00:41:26.019 --> 00:41:28.088 align:middle line:-1
你可以在画布中检验

00:41:28.388 --> 00:41:32.426 align:middle line:-1
你的视图和你想让用户看到的一样

00:41:33.160 --> 00:41:35.796 align:middle line:-1
最后 你可以用XCUI测试

00:41:36.330 --> 00:41:39.199 align:middle line:-1
验证你的app在创建过程中的

00:41:39.499 --> 00:41:40.367 align:middle line:-1
工作方式

00:41:41.802 --> 00:41:44.338 align:middle line:-1
我想花点时间谈谈性能

00:41:44.404 --> 00:41:45.639 align:middle line:-1
（app的生命周期）

00:41:47.541 --> 00:41:48.542 align:middle line:-1
我们刚刚说过

00:41:49.409 --> 00:41:50.844 align:middle line:-1
预览只是一些代码

00:41:51.778 --> 00:41:53.013 align:middle line:-1
而后果就是

00:41:53.080 --> 00:41:56.016 align:middle line:-1
你不想在显示预览的时候

00:41:56.583 --> 00:41:58.785 align:middle line:-1
运行任意操作

00:41:59.052 --> 00:42:01.555 align:middle line:-1
你不想要这么多的运算

00:42:02.456 --> 00:42:04.725 align:middle line:-1
Xcode预览也是同样的道理

00:42:04.791 --> 00:42:08.195 align:middle line:-2
它会调用app
完成启动 进行操作

00:42:08.695 --> 00:42:12.232 align:middle line:-1
所以你也不想做一些无关紧要的工作

00:42:12.499 --> 00:42:16.570 align:middle line:-1
特别是当你只想看在画布上的

00:42:16.637 --> 00:42:20.541 align:middle line:-1
预览视图时 你并不想

00:42:20.607 --> 00:42:21.875 align:middle line:-1
设置UI层次结构

00:42:22.409 --> 00:42:23.243 align:middle line:-1
所以

00:42:23.610 --> 00:42:28.015 align:middle line:-2
识别app场景 使其符合
UIWindow场景代理

00:42:28.315 --> 00:42:31.485 align:middle line:-1
实现场景连接到操作方法

00:42:31.919 --> 00:42:34.521 align:middle line:-1
并在那里设置UI层次结构

00:42:35.355 --> 00:42:38.325 align:middle line:-1
看看 这并不只是对开发者有益

00:42:38.392 --> 00:42:40.494 align:middle line:-1
能让你更快地看到预览

00:42:40.761 --> 00:42:42.896 align:middle line:-1
对用户来说也是好消息

00:42:43.797 --> 00:42:46.133 align:middle line:-1
当你的app在后台运行时

00:42:46.400 --> 00:42:48.302 align:middle line:-1
它不会做一堆额外的工作

00:42:48.669 --> 00:42:51.705 align:middle line:-2
它只做它需要做的事情
然后就回去睡觉了

00:42:52.139 --> 00:42:54.274 align:middle line:-1
也避免了浪费用户的电池

00:42:55.843 --> 00:43:00.814 align:middle line:-1
（总结）

00:43:02.516 --> 00:43:03.550 align:middle line:-1
我们来做一个回顾

00:43:04.318 --> 00:43:08.789 align:middle line:-2
我们说到了如何写预览
预览API是SwiftUI的一部分

00:43:08.856 --> 00:43:10.190 align:middle line:-1
它的功能真的很强大

00:43:10.557 --> 00:43:13.994 align:middle line:-2
当你在写预览的时候
可以用到所有的SwiftUI

00:43:15.562 --> 00:43:18.232 align:middle line:-2
你也学习了如何使用
高级Xcode工作流程

00:43:18.298 --> 00:43:20.701 align:middle line:-1
比如说预览固定 在你要在不同

00:43:20.767 --> 00:43:23.103 align:middle line:-1
文件转换的时候固定预览视图

00:43:23.704 --> 00:43:26.640 align:middle line:-2
我们也说到了
如何使用开发资产

00:43:26.707 --> 00:43:29.576 align:middle line:-1
让你拥有丰富有趣的预览

00:43:31.712 --> 00:43:34.515 align:middle line:-1
而不用把测试数据也传给用户

00:43:35.082 --> 00:43:35.916 align:middle line:-1
最后

00:43:36.250 --> 00:43:37.284 align:middle line:-1
你也看到了

00:43:38.218 --> 00:43:41.555 align:middle line:-2
预览并不只是适用于
SwiftUI或者Swift

00:43:41.889 --> 00:43:44.658 align:middle line:-2
而是所有Xcode
能够理解的源文件类型

00:43:44.725 --> 00:43:47.427 align:middle line:-2
可以是用UIKit、AppKit
或是WatchKit写的

00:43:55.035 --> 00:43:57.070 align:middle line:-2
这就是掌握
Xcode预览的全部内容

00:43:57.137 --> 00:43:58.272 align:middle line:-1
谢谢大家捧场

00:43:58.338 --> 00:44:00.774 align:middle line:-1
（更多信息）

00:44:02.309 --> 00:44:03.577 align:middle line:0
来实验室找我们吧

