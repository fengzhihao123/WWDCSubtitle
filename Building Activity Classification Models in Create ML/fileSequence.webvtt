WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:00:07.516 --> 00:00:11.576 A:middle
[掌声]

00:00:12.076 --> 00:00:15.196 A:middle
&gt;&gt; 我是来自 Core ML 组的 Yuxin

00:00:15.566 --> 00:00:18.176 A:middle
今天 我非常激动地

00:00:18.176 --> 00:00:20.476 A:middle
向大家介绍

00:00:20.476 --> 00:00:22.996 A:middle
今年 Create ML 中的全新模型

00:00:22.996 --> 00:00:23.856 A:middle
行为分类

00:00:27.596 --> 00:00:30.966 A:middle
我们每天都通过设备

00:00:30.966 --> 00:00:34.226 A:middle
进行很多行为

00:00:34.496 --> 00:00:36.836 A:middle
比如玩游戏 做运动

00:00:37.626 --> 00:00:39.856 A:middle
我们的移动设备

00:00:40.106 --> 00:00:42.156 A:middle
也都配备了

00:00:42.286 --> 00:00:43.246 A:middle
大量传感器

00:00:44.366 --> 00:00:45.606 A:middle
例如 对于运动来说

00:00:47.166 --> 00:00:49.916 A:middle
加速度计和陀螺仪

00:00:49.916 --> 00:00:51.056 A:middle
都很常用

00:00:52.026 --> 00:00:54.146 A:middle
它们有助于

00:00:54.496 --> 00:00:56.146 A:middle
检测设备的

00:00:56.196 --> 00:00:59.456 A:middle
三维加速度 旋转速度

00:00:59.456 --> 00:01:00.516 A:middle
或设备方向

00:01:01.796 --> 00:01:06.346 A:middle
我们可以利用这些传感器数据来表示行为

00:01:08.166 --> 00:01:11.146 A:middle
例如 如果你在慢跑

00:01:12.066 --> 00:01:14.196 A:middle
数据就和站着不动时

00:01:14.196 --> 00:01:16.906 A:middle
有很大差异

00:01:18.276 --> 00:01:21.556 A:middle
同样地 如果你做出不同手势

00:01:21.636 --> 00:01:24.886 A:middle
玩不同游戏

00:01:24.886 --> 00:01:26.296 A:middle
或者进行不同的体育运动

00:01:26.366 --> 00:01:29.866 A:middle
你的行为数据也可能

00:01:29.866 --> 00:01:32.646 A:middle
有足够大的差异 以供识别

00:01:34.546 --> 00:01:38.436 A:middle
那么 什么是行为分类

00:01:39.306 --> 00:01:43.096 A:middle
它是一项任务

00:01:43.096 --> 00:01:45.706 A:middle
能够识别

00:01:45.706 --> 00:01:49.026 A:middle
对设备执行的

00:01:49.026 --> 00:01:50.586 A:middle
预定义物理操作集

00:01:51.416 --> 00:01:53.606 A:middle
如果你有不同的行为需要识别

00:01:53.676 --> 00:01:55.746 A:middle
或者你的 App

00:01:55.746 --> 00:02:00.006 A:middle
可能有不同的需求

00:02:00.006 --> 00:02:00.706 A:middle
这时该怎么办呢

00:02:00.706 --> 00:02:04.896 A:middle
我们十分希望

00:02:05.036 --> 00:02:07.086 A:middle
你能够根据自己的目的

00:02:07.086 --> 00:02:09.526 A:middle
定制自己的模型

00:02:10.735 --> 00:02:13.396 A:middle
于是我们在今年

00:02:13.436 --> 00:02:15.966 A:middle
向你们介绍

00:02:15.966 --> 00:02:19.506 A:middle
Create ML 中的行为分类

00:02:19.726 --> 00:02:22.126 A:middle
不如我们先举个例子

00:02:25.436 --> 00:02:28.426 A:middle
我很喜欢

00:02:28.536 --> 00:02:31.436 A:middle
和家人朋友玩极限飞盘

00:02:32.716 --> 00:02:36.056 A:middle
在游戏过后

00:02:36.056 --> 00:02:38.916 A:middle
我也很想看看

00:02:38.916 --> 00:02:41.486 A:middle
我的表现有多好

00:02:41.956 --> 00:02:43.646 A:middle
比如投掷技术的

00:02:43.646 --> 00:02:46.596 A:middle
种类和数量

00:02:47.076 --> 00:02:49.106 A:middle
所以我训练了一个飞盘运动分类器

00:02:49.106 --> 00:02:51.426 A:middle
来识别我的动作

00:02:52.206 --> 00:02:54.026 A:middle
并用在我的 Apple Watch 上

00:02:54.636 --> 00:02:56.886 A:middle
我觉得这行得通

00:02:57.246 --> 00:02:58.656 A:middle
我们先来看一个现场演示

00:03:02.976 --> 00:03:06.786 A:middle
它已与我的 Apple Watch 配对

00:03:07.816 --> 00:03:10.396 A:middle
模型会在我的 Apple Watch 上运行

00:03:11.926 --> 00:03:14.396 A:middle
这儿有一个开始按钮

00:03:15.886 --> 00:03:18.076 A:middle
一旦我按下开始按钮

00:03:18.076 --> 00:03:19.486 A:middle
我的 Apple Watch 就会开始

00:03:19.826 --> 00:03:21.076 A:middle
传输传感器数据

00:03:22.116 --> 00:03:23.846 A:middle
然后我的模型

00:03:23.846 --> 00:03:25.676 A:middle
就会进行连续预测

00:03:27.236 --> 00:03:30.516 A:middle
我们开始吧

00:03:30.636 --> 00:03:32.826 A:middle
现在它让我

00:03:32.826 --> 00:03:36.336 A:middle
做出一个飞盘动作

00:03:36.336 --> 00:03:39.306 A:middle
这意味着它预测了一个无行为类

00:03:39.306 --> 00:03:39.806 A:middle
显然目前是正确的

00:03:40.476 --> 00:03:43.906 A:middle
我先试试简单的动作

00:03:46.786 --> 00:03:48.696 A:middle
正手

00:03:49.516 --> 00:03:53.266 A:middle
[掌声]

00:03:53.766 --> 00:03:57.866 A:middle
接下来 反手

00:03:58.516 --> 00:04:01.306 A:middle
[掌声]

00:04:01.806 --> 00:04:03.566 A:middle
这是我最喜欢的动作

00:04:04.046 --> 00:04:04.976 A:middle
“鸡翅膀”

00:04:05.516 --> 00:04:10.026 A:middle
[掌声]

00:04:10.526 --> 00:04:13.476 A:middle
我还有一个更漂亮的秘密武器

00:04:13.476 --> 00:04:15.956 A:middle
要给你们展示 “保龄球”

00:04:16.261 --> 00:04:18.261 A:middle
[掌声]

00:04:18.505 --> 00:04:20.946 A:middle
它叫做 “保龄球手”

00:04:20.946 --> 00:04:21.805 A:middle
因为我像是在打保龄球

00:04:21.805 --> 00:04:24.846 A:middle
我再试一次 “保龄球手”

00:04:28.936 --> 00:04:30.696 A:middle
它只是机器学习模型啦

00:04:31.776 --> 00:04:36.746 A:middle
现在 我按下停止按钮

00:04:36.746 --> 00:04:40.516 A:middle
然后看看我的结果

00:04:41.726 --> 00:04:44.466 A:middle
在我看来还不错

00:04:45.586 --> 00:04:48.496 A:middle
对于特定的类别 比如 “保龄球手” 

00:04:48.496 --> 00:04:51.626 A:middle
我知道我可以回头收集更多的数据

00:04:52.546 --> 00:04:54.176 A:middle
所以我对这些数据很满意

00:04:54.526 --> 00:04:58.396 A:middle
今天我锻炼得不错

00:04:58.576 --> 00:05:04.056 A:middle
现在 我们说回上一话题

00:05:04.306 --> 00:05:07.896 A:middle
我知道作为开发者的你

00:05:07.896 --> 00:05:10.916 A:middle
会有很多其他更有创意的想法要探索

00:05:13.526 --> 00:05:17.156 A:middle
现在我们看一看

00:05:17.156 --> 00:05:19.656 A:middle
如何在 Create ML 中真正设置模型

00:05:23.056 --> 00:05:26.856 A:middle
只需要三步

00:05:26.856 --> 00:05:29.536 A:middle
首先 为自己的行为收集一些数据

00:05:30.046 --> 00:05:35.306 A:middle
使用 Create ML 训练模型

00:05:35.556 --> 00:05:39.926 A:middle
最后 将模型部署到你的 App 中

00:05:41.516 --> 00:05:44.086 A:middle
我们先来获得一些数据

00:05:46.396 --> 00:05:48.756 A:middle
访问传感器数据最简单的方法

00:05:48.756 --> 00:05:51.066 A:middle
是使用 Core Motion

00:05:52.526 --> 00:05:54.586 A:middle
更多有关它的信息

00:05:54.586 --> 00:05:56.836 A:middle
请参考我们之前的会议

00:05:57.106 --> 00:06:00.056 A:middle
以及 Apple 开发者文档

00:06:00.566 --> 00:06:04.216 A:middle
但从高层次的角度来看

00:06:04.666 --> 00:06:06.586 A:middle
你的 App 可以轻松访问

00:06:06.586 --> 00:06:08.686 A:middle
一系列传感器

00:06:09.036 --> 00:06:10.426 A:middle
也就是 Core Motion Framework

00:06:10.836 --> 00:06:13.736 A:middle
你还可以操控

00:06:13.736 --> 00:06:17.106 A:middle
开始 停止

00:06:17.106 --> 00:06:20.056 A:middle
或设置 App 中记录的更新间隔

00:06:20.396 --> 00:06:24.186 A:middle
你也可以使用

00:06:24.266 --> 00:06:26.546 A:middle
完全相同的机制

00:06:26.546 --> 00:06:28.666 A:middle
来收集你的训练数据

00:06:28.666 --> 00:06:34.251 A:middle
以及之后的设备推断

00:06:34.716 --> 00:06:37.346 A:middle
这就是我的数据

00:06:38.356 --> 00:06:40.086 A:middle
这是我的“正手”记录之一

00:06:40.086 --> 00:06:44.136 A:middle
它是 CSV 格式

00:06:45.716 --> 00:06:47.696 A:middle
有一列时间戳

00:06:47.696 --> 00:06:51.026 A:middle
以及其他几列

00:06:51.026 --> 00:06:52.996 A:middle
传感器特性

00:06:54.306 --> 00:06:56.446 A:middle
其实我在飞盘运动的例子中

00:06:56.446 --> 00:06:58.676 A:middle
还使用了加速度

00:06:58.936 --> 00:07:00.796 A:middle
和旋转速度

00:07:01.346 --> 00:07:03.386 A:middle
但是为了简单起见

00:07:03.386 --> 00:07:04.946 A:middle
这里只展示了三列

00:07:06.686 --> 00:07:08.826 A:middle
如果想要

00:07:08.826 --> 00:07:10.886 A:middle
进一步研究数据

00:07:10.886 --> 00:07:12.686 A:middle
行为模式

00:07:12.686 --> 00:07:15.326 A:middle
看起来可能会是这样

00:07:16.416 --> 00:07:20.046 A:middle
我的 “正手” 记录

00:07:20.046 --> 00:07:22.406 A:middle
在同一类上有三个来回动作

00:07:24.346 --> 00:07:27.346 A:middle
之后 在训练中

00:07:27.346 --> 00:07:29.046 A:middle
深度学习模型

00:07:29.046 --> 00:07:31.576 A:middle
会使用一个滑动窗口

00:07:31.616 --> 00:07:33.496 A:middle
在时间序列数据间移动

00:07:34.656 --> 00:07:36.366 A:middle
通过这种方式

00:07:36.366 --> 00:07:39.526 A:middle
它可以提取行为的

00:07:39.526 --> 00:07:41.646 A:middle
空间和时间模式

00:07:43.696 --> 00:07:45.586 A:middle
现在我们已经准备好了文件

00:07:46.376 --> 00:07:48.006 A:middle
你只需在这样的数据源层次结构中

00:07:48.006 --> 00:07:50.526 A:middle
组织数据

00:07:50.596 --> 00:07:53.626 A:middle
其中每个文件夹的名称

00:07:53.626 --> 00:07:54.566 A:middle
都是一个标签名称

00:07:54.566 --> 00:07:57.396 A:middle
这个文件夹下的所有文件

00:07:57.396 --> 00:07:59.836 A:middle
都属于同一个行为

00:08:03.866 --> 00:08:04.776 A:middle
和文本格式

00:08:05.736 --> 00:08:07.116 A:middle
你可以选择其中之一

00:08:07.196 --> 00:08:11.646 A:middle
也可以按照喜好混合搭配

00:08:13.736 --> 00:08:15.136 A:middle
数据准备好了

00:08:15.946 --> 00:08:20.506 A:middle
现在我们开始训练

00:08:20.566 --> 00:08:24.216 A:middle
只需从 Create ML App 的模板中

00:08:24.216 --> 00:08:27.566 A:middle
选择 Activity Classifier

00:08:27.776 --> 00:08:30.016 A:middle
这是一个标准的信息界面

00:08:30.016 --> 00:08:33.265 A:middle
你可以将你的训练数据

00:08:33.265 --> 00:08:36.576 A:middle
拖放到这个窗口中

00:08:37.356 --> 00:08:39.076 A:middle
在 Activity 中

00:08:39.126 --> 00:08:41.866 A:middle
你可以预览记录里有多少文件

00:08:41.936 --> 00:08:43.946 A:middle
和多少样例

00:08:45.516 --> 00:08:47.646 A:middle
Activity 上的

00:08:47.726 --> 00:08:50.326 A:middle
一个特殊步骤是

00:08:50.326 --> 00:08:52.436 A:middle
你需要告诉 Create ML

00:08:52.526 --> 00:08:54.506 A:middle
你想尝试的传感器特性是什么

00:08:55.926 --> 00:08:59.276 A:middle
只需从这个列表中选择一个或多个

00:09:02.856 --> 00:09:04.666 A:middle
都来自你的文件

00:09:04.666 --> 00:09:08.666 A:middle
即 CSV 文件的标题

00:09:11.626 --> 00:09:14.236 A:middle
你还可以选择

00:09:14.236 --> 00:09:15.796 A:middle
根据行为的快慢

00:09:16.736 --> 00:09:18.756 A:middle
来调整参数

00:09:18.816 --> 00:09:23.166 A:middle
比如预测窗口尺寸

00:09:23.806 --> 00:09:27.116 A:middle
对于飞盘运动的例子

00:09:27.236 --> 00:09:28.706 A:middle
实际上我用了两秒窗口

00:09:28.786 --> 00:09:31.096 A:middle
也就是 100 个样本

00:09:31.096 --> 00:09:34.896 A:middle
我将在这里输入 100

00:09:34.896 --> 00:09:37.126 A:middle
因为我的数据

00:09:37.126 --> 00:09:39.616 A:middle
最初是以 50 hz 的频率采样的

00:09:42.516 --> 00:09:44.756 A:middle
现在我们按下 “训练” 按钮

00:09:44.756 --> 00:09:49.066 A:middle
可以从这里开始训练

00:09:49.526 --> 00:09:52.146 A:middle
我相信你们在这一周内

00:09:52.146 --> 00:09:54.596 A:middle
已经多次看到了整个过程

00:09:54.856 --> 00:09:57.256 A:middle
所以我会略过这部分内容

00:09:57.516 --> 00:09:59.576 A:middle
因为从这里开始的

00:09:59.576 --> 00:10:01.716 A:middle
整个工作流程

00:10:01.896 --> 00:10:03.216 A:middle
与 Create ML 中的其他模型完全相同

00:10:06.366 --> 00:10:07.896 A:middle
如果你对准确性还满意

00:10:07.896 --> 00:10:10.406 A:middle
那么就可以

00:10:10.586 --> 00:10:13.056 A:middle
继续尝试一些新的数据

00:10:13.056 --> 00:10:15.446 A:middle
来评估这个模型的性能

00:10:19.046 --> 00:10:21.646 A:middle
这是一个标准测试标签

00:10:22.296 --> 00:10:24.426 A:middle
和刚才一样

00:10:24.576 --> 00:10:26.276 A:middle
提供测试数据

00:10:29.906 --> 00:10:32.506 A:middle
在评估之后

00:10:32.506 --> 00:10:34.666 A:middle
你会看到

00:10:34.666 --> 00:10:37.876 A:middle
一张包含每个类别

00:10:37.876 --> 00:10:39.396 A:middle
查准率和查全率的表

00:10:42.236 --> 00:10:44.306 A:middle
对于我的飞盘运动的例子

00:10:44.516 --> 00:10:47.336 A:middle
你可以在这里看到

00:10:47.466 --> 00:10:49.416 A:middle
“保龄球手”和“锤击”这些特定的类别

00:10:49.416 --> 00:10:50.496 A:middle
不是那么完美

00:10:51.666 --> 00:10:53.206 A:middle
这可能意味着

00:10:53.206 --> 00:10:55.026 A:middle
我需要再为这两类

00:10:55.026 --> 00:10:55.986 A:middle
收集更多的数据

00:10:55.986 --> 00:10:58.976 A:middle
然后再次迭代

00:10:58.976 --> 00:11:01.086 A:middle
就可以提高性能

00:11:03.196 --> 00:11:05.556 A:middle
最终我们就

00:11:05.556 --> 00:11:08.676 A:middle
得到了一个训练模型

00:11:08.676 --> 00:11:10.596 A:middle
你可以选择保存模型

00:11:10.596 --> 00:11:12.846 A:middle
并将它部署到我们的 App 中

00:11:13.926 --> 00:11:16.276 A:middle
或者你可以在 Mac 上

00:11:16.616 --> 00:11:19.706 A:middle
直接在 Create ML App 中

00:11:19.706 --> 00:11:20.736 A:middle
进行批量预测

00:11:22.596 --> 00:11:24.296 A:middle
只需在窗口中

00:11:24.586 --> 00:11:27.256 A:middle
添加一些新的未显示和未标记的数据

00:11:27.256 --> 00:11:30.746 A:middle
你就会看到

00:11:30.886 --> 00:11:33.356 A:middle
即时的预测结果

00:11:33.356 --> 00:11:36.256 A:middle
包括标签名称 置信度

00:11:36.896 --> 00:11:38.806 A:middle
以及行为数据的预览

00:11:38.806 --> 00:11:43.766 A:middle
以便更好地了解你的行为

00:11:46.106 --> 00:11:48.906 A:middle
最后 这是我的 Core ML 模型

00:11:50.316 --> 00:11:53.856 A:middle
我的飞盘运动例子

00:11:54.096 --> 00:11:55.866 A:middle
是一个神经网络分类器

00:11:56.396 --> 00:11:59.496 A:middle
它只有 1.1 MB

00:11:59.496 --> 00:12:01.906 A:middle
体量非常小

00:12:01.906 --> 00:12:03.466 A:middle
对于移动设备来说非常简单

00:12:06.306 --> 00:12:09.246 A:middle
此外 你还可以看到

00:12:09.446 --> 00:12:11.766 A:middle
你在训练中使用的

00:12:11.766 --> 00:12:13.936 A:middle
所有传感器特性的

00:12:13.936 --> 00:12:16.596 A:middle
完整列表

00:12:16.596 --> 00:12:17.836 A:middle
以及预测窗口大小

00:12:18.506 --> 00:12:21.156 A:middle
之后 关于你的设备推断

00:12:21.156 --> 00:12:23.386 A:middle
你只需使用

00:12:23.386 --> 00:12:26.036 A:middle
相同的数据

00:12:26.036 --> 00:12:27.386 A:middle
相同的大小来保持一致

00:12:29.546 --> 00:12:31.896 A:middle
这就是 Create ML App

00:12:32.446 --> 00:12:34.206 A:middle
我们在 macOS 中也有这个框架

00:12:35.546 --> 00:12:37.516 A:middle
你可以使用

00:12:37.516 --> 00:12:40.056 A:middle
Xcode Playground 

00:12:40.056 --> 00:12:44.256 A:middle
Swift Script 或者命令行工具

00:12:44.756 --> 00:12:46.916 A:middle
来自动化整个过程

00:12:47.416 --> 00:12:48.036 A:middle
就像这样

00:12:51.196 --> 00:12:53.156 A:middle
Activity 上的

00:12:53.156 --> 00:12:56.046 A:middle
一个特殊步骤是

00:12:56.046 --> 00:12:57.996 A:middle
需要指定 selectedSensors

00:12:59.136 --> 00:13:01.356 A:middle
除此之外

00:13:01.426 --> 00:13:03.616 A:middle
工作流程的其余部分

00:13:03.726 --> 00:13:05.706 A:middle
与我们拥有的其他模型一样

00:13:06.776 --> 00:13:06.896 A:middle
都是标准统一的

00:13:07.246 --> 00:13:09.806 A:middle
训练评估和模型保存

00:13:09.806 --> 00:13:13.656 A:middle
只是针对每个模型的一行代码

00:13:17.526 --> 00:13:19.476 A:middle
这就是我们如何查看

00:13:19.476 --> 00:13:22.246 A:middle
Create ML 中的行为分类器

00:13:23.416 --> 00:13:25.676 A:middle
除此之外

00:13:25.676 --> 00:13:27.656 A:middle
我还想分享一些

00:13:27.756 --> 00:13:28.486 A:middle
这个模型的更优实践

00:13:32.436 --> 00:13:34.316 A:middle
理解你的行为

00:13:35.486 --> 00:13:38.086 A:middle
使用相关的传感器

00:13:38.086 --> 00:13:40.666 A:middle
比如加速度计和陀螺仪

00:13:40.666 --> 00:13:44.046 A:middle
都是非常常见的基于运动的任务

00:13:46.526 --> 00:13:49.206 A:middle
这有助于收集一些

00:13:49.206 --> 00:13:51.526 A:middle
无行为类

00:13:51.876 --> 00:13:54.206 A:middle
或其他类数据

00:13:55.276 --> 00:13:57.466 A:middle
这对运行时的性能

00:13:57.466 --> 00:13:59.046 A:middle
特别有帮助

00:14:07.626 --> 00:14:09.886 A:middle
对于 Activity 而言

00:14:09.886 --> 00:14:11.866 A:middle
还涉及到每个类别记录文件的数量

00:14:11.866 --> 00:14:14.986 A:middle
和记录长度

00:14:16.036 --> 00:14:21.196 A:middle
最后 Core Motion 既提供

00:14:21.396 --> 00:14:23.446 A:middle
原始传感器数据

00:14:23.446 --> 00:14:26.096 A:middle
也提供处理过的设备运动数据

00:14:27.566 --> 00:14:29.926 A:middle
设备运动

00:14:29.926 --> 00:14:32.486 A:middle
是 Core Motion 框架下的一种传感器融合

00:14:32.486 --> 00:14:34.756 A:middle
它还提供了归一化

00:14:34.926 --> 00:14:37.906 A:middle
时间对齐

00:14:38.106 --> 00:14:39.506 A:middle
和偏差消除

00:14:40.506 --> 00:14:42.496 A:middle
有时候 这对于处理数据

00:14:42.496 --> 00:14:46.086 A:middle
是很有帮助的

00:14:48.076 --> 00:14:48.946 A:middle
这就是 Activity

00:14:49.516 --> 00:14:54.500 A:middle
[掌声]

