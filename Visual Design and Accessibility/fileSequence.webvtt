WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:00:01.516 --> 00:00:04.500 A:middle
[音乐]

00:00:14.436 --> 00:00:16.706 A:middle
&gt;&gt;大家好 我是 Sommer Panage

00:00:18.016 --> 00:00:20.216 A:middle
我是辅助功能团队的工程经理

00:00:21.186 --> 00:00:24.626 A:middle
我很开心能和你们分享三种方法

00:00:24.626 --> 00:00:27.000 A:middle
让你的 App 在视觉辅助上做得更好

00:00:28.176 --> 00:00:29.516 A:middle
我将介绍动态字体

00:00:30.116 --> 00:00:32.756 A:middle
减弱动态效果的重大改进

00:00:33.386 --> 00:00:35.296 A:middle
和一个从 Mac 迁移到 iOS 的 API

00:00:35.296 --> 00:00:39.006 A:middle
我们称之为无需用颜色区分

00:00:40.796 --> 00:00:42.576 A:middle
我们先说动态字体

00:00:44.046 --> 00:00:45.676 A:middle
动态字体是一个让用户

00:00:45.676 --> 00:00:49.746 A:middle
在屏幕上自定义字体大小的功能

00:00:55.176 --> 00:00:56.026 A:middle
一些用户会选择更大的字体

00:00:57.216 --> 00:00:59.366 A:middle
对有些用户而言大字体不过是个人偏好

00:01:03.966 --> 00:01:08.716 A:middle
是否有大字体意味着能否使用设备

00:01:11.136 --> 00:01:14.376 A:middle
在为用户添加动态字体功能时

00:01:14.376 --> 00:01:16.796 A:middle
我想提醒大家四个原则

00:01:18.216 --> 00:01:23.206 A:middle
首先 让字体尽可能灵活

00:01:23.766 --> 00:01:26.026 A:middle
如果字体可以放大 就让它变大

00:01:27.666 --> 00:01:31.346 A:middle
第二 屏幕多宽就用多宽

00:01:33.026 --> 00:01:36.336 A:middle
第三 不要因为字体变大而截断内容

00:01:36.896 --> 00:01:40.266 A:middle
显示的文本量应和默认 UI 一致

00:01:46.036 --> 00:01:48.176 A:middle
避免 UI 看起来头重脚轻

00:01:50.486 --> 00:01:52.806 A:middle
在 iOS 中有 11 种不同的文本样式

00:01:54.076 --> 00:01:54.076 A:middle
从标题到说明文字以及脚注

00:01:55.726 --> 00:01:58.256 A:middle
都可以使用动态字体

00:02:02.636 --> 00:02:05.016 A:middle
和 UI 文本视图使用动态字体

00:02:06.866 --> 00:02:08.846 A:middle
你只需要在这些文本样式中

00:02:08.846 --> 00:02:10.985 A:middle
选中首选字体

00:02:11.356 --> 00:02:15.086 A:middle
并将 adjustFontForContentSizeCategory

00:02:15.086 --> 00:02:17.066 A:middle
标签值设为真

00:02:17.916 --> 00:02:19.366 A:middle
这样就可以保证

00:02:19.696 --> 00:02:21.476 A:middle
即使 App 在前端运行

00:02:21.476 --> 00:02:23.736 A:middle
只要用户更改字体大小

00:02:23.736 --> 00:02:24.806 A:middle
视图就会更新

00:02:26.796 --> 00:02:29.086 A:middle
从 iOS 11 开始

00:02:29.086 --> 00:02:30.916 A:middle
对自定义字体使用动态字体功能

00:02:30.916 --> 00:02:32.146 A:middle
变得更容易了

00:02:33.476 --> 00:02:37.536 A:middle
你可能想将字体和大小映射到

00:02:37.636 --> 00:02:39.886 A:middle
之前看到的全部 11 种字体上

00:02:41.096 --> 00:02:44.266 A:middle
我为每种样式创建了字体词典

00:02:45.876 --> 00:02:49.186 A:middle
然后看是否有给定样式的字体

00:02:50.226 --> 00:02:53.516 A:middle
如果有 就使用 UI 字体指标适当缩放

00:02:53.516 --> 00:02:58.696 A:middle
如果没有 就返回到首选系统字体

00:03:02.576 --> 00:03:04.496 A:middle
我希望能看到它运作

00:03:06.096 --> 00:03:08.436 A:middle
现在我可以使用新的 Xcode

00:03:08.436 --> 00:03:10.776 A:middle
环境覆盖窗格轻松预览动态字体

00:03:10.776 --> 00:03:12.746 A:middle
我可以滑动动态字体滑块

00:03:12.796 --> 00:03:17.000 A:middle
立刻就能在模拟器中查看结果

00:03:19.656 --> 00:03:22.156 A:middle
接下来 我想和你们聊聊减弱动态效果

00:03:23.536 --> 00:03:27.126 A:middle
动态效果在 iOS 中十分常用

00:03:28.046 --> 00:03:29.716 A:middle
我们在许多地方都使用动态效果

00:03:29.716 --> 00:03:31.986 A:middl
为客户创造沉浸式的体验

00:03:33.626 --> 00:03:35.596 A:middle
但是对某些用户来说

00:03:35.596 --> 00:03:37.076 A:middle
这些效果可能并不理想

00:03:37.926 --> 00:03:40.836 A:middle
三分之一的人对动态效果十分敏感

00:03:41.396 --> 00:03:43.216 A:middle
对于大多数人来说

00:03:43.216 --> 00:03:46.616 A:middle
坐过山车或在车上看书才会引起不适

00:03:46.616 --> 00:03:48.166 A:middle
但是对一小部分人来说

00:03:48.166 --> 00:03:52.966 A:middle
观看屏幕上的动态效果就会触发不适

00:03:55.446 --> 00:03:57.236 A:middle
为了使 iOS 适应所有用户

00:03:59.046 --> 00:04:00.966 A:middle
我们已在辅助功能中

00:04:00.966 --> 00:04:02.346 A:middle
提供减弱动态效果的设置

00:04:02.346 --> 00:04:05.466 A:middle
来关闭系统中的天气和视差效果

00:04:07.176 --> 00:04:09.016 A:middle
这是减弱动态效果的 API

00:04:09.016 --> 00:04:10.606 A:middle
你们可能已经十分熟悉了

00:04:11.676 --> 00:04:13.686 A:middle
如果开启了减弱动态效果

00:04:13.686 --> 00:04:15.516 A:middle
你的 App 也应作出相应调整

00:04:17.856 --> 00:04:20.636 A:middle
另一个动态效果是视频自动播放

00:04:21.416 --> 00:04:25.016 A:middle
我们看到 滚动浏览 App Store 预览时

00:04:25.016 --> 00:04:26.836 A:middle
精选游戏会开始播放

00:04:28.166 --> 00:04:29.646 A:middle
虽然对有些人来说

00:04:29.646 --> 00:04:32.026 A:middle
这可能会让他们想点进去了解更多

00:04:34.056 --> 00:04:35.906 A:middle
但对于其他人来说

00:04:35.906 --> 00:04:37.396 A:middle
这可能会带来不适 甚至引发焦虑

00:04:39.096 --> 00:04:42.706 A:middle
所以用户应能决定是否自动播放视频

00:04:43.006 --> 00:04:44.936 A:middle
我们很高兴能在今年宣布

00:04:44.936 --> 00:04:47.056 A:middle
iOS 13 中新的动态效果设置

00:04:48.066 --> 00:04:50.336 A:middle
设置 辅助功能 动态效果

00:04:50.336 --> 00:04:51.446 A:middle
自动播放视频预览

00:04:52.606 --> 00:04:54.786 A:middle
禁用此设置后

00:04:54.786 --> 00:04:57.146 A:middle
我们的 App 比如说 App Store

00:04:57.146 --> 00:04:58.406 A:middle
将不再自动播放内容

00:04:58.406 --> 00:05:02.606 A:middle
需要用户操作才能开始和停止播放预览

00:05:03.866 --> 00:05:05.756 A:middle
自动播放视频预览默认启用

00:05:08.006 --> 00:05:10.516 A:middle
但你可以随时将其关闭

00:05:10.516 --> 00:05:12.806 A:middle
另外 我们制作了开源 API

00:05:14.136 --> 00:05:16.336 A:middle
如果启用了视频自动播放功能

00:05:18.206 --> 00:05:19.806 A:middle
则还应确保 App 中的所有视频

00:05:19.806 --> 00:05:22.686 A:middle
都为用户提供了播放或暂停功能

00:05:23.606 --> 00:05:24.656 A:middle
当然也要注意通知信息这一项

00:05:26.116 --> 00:05:27.266 A:middle
以便及时作出改变

00:05:29.116 --> 00:05:31.246 A:middle
如果你的 App 已有 App 内设置

00:05:32.976 --> 00:05:34.876 A:middle
那你只需要镜像它

00:05:34.876 --> 00:05:36.336 A:middle
将我们的全局设置镜像为默认设置

00:05:37.096 --> 00:05:39.466 A:middle
但你也可以使用 App 中的设置

00:05:39.466 --> 00:05:41.536 A:middle
来允许用户自定义你的操作

00:05:43.386 --> 00:05:45.746 A:middle
iOS 中的另一种动态效果是屏幕间过渡

00:05:49.306 --> 00:05:54.886 A:middle
我们在设置里就会看到典型的滑动过渡

00:06:03.416 --> 00:06:06.696 A:middle
进行粒度更细的控制

00:06:06.696 --> 00:06:08.656 A:middle
我们在启用减弱动态效果时

00:06:08.656 --> 00:06:10.146 A:middle
引入了一个额外的设置

00:06:10.836 --> 00:06:12.356 A:middle
即首选交叉淡出过渡效果

00:06:14.346 --> 00:06:16.536 A:middle
正如你所见

00:06:16.536 --> 00:06:19.076 A:middle
启用了该设置

00:06:19.076 --> 00:06:20.976 A:middle
横向滑动会变成溶解过渡效果

00:06:22.166 --> 00:06:23.636 A:middle
现在 当启用这些设置时

00:06:23.636 --> 00:06:26.346 A:middle
UIKit 会为你实现溶解过渡效果

00:06:26.816 --> 00:06:30.586 A:middle
只要使用 UIKit 标准导航或模态演示

00:06:30.586 --> 00:06:31.886 A:middle
你就可以免费获得这项操作

00:06:35.396 --> 00:06:38.546 A:middle
最后 我想谈谈无需用颜色区分

00:06:40.646 --> 00:06:44.056 A:middle
色盲可能导致某些颜色和其它颜色不同

00:06:44.056 --> 00:06:47.926 A:middle
但和另外一些颜色十分相近

00:06:48.906 --> 00:06:50.296 A:middle
比如对于有红绿色盲的人来说

00:06:50.296 --> 00:06:55.226 A:middle
某些红色绿色和黄色看起来都差不多

00:06:56.306 --> 00:06:57.646 A:middle
要了解这一点对用户的影响

00:06:57.716 --> 00:06:59.306 A:middle
以及我们如何解决这样的问题

00:06:59.306 --> 00:07:02.766 A:middle
我想让你们看一下我和同事们做的这个小 App

00:07:03.656 --> 00:07:05.716 A:middle
我们都喜欢花生酱

00:07:05.806 --> 00:07:07.486 A:middle
我刚添加了一个新功能

00:07:07.546 --> 00:07:10.596 A:middle
以便追踪我个人的花生酱状态

00:07:11.206 --> 00:07:13.836 A:middle
我给我正在吃的花生酱添加了绿色圆圈

00:07:13.836 --> 00:07:20.216 A:middle
之前吃过但现在没吃的花生酱添加了黄色圆圈

00:07:20.216 --> 00:07:21.806 A:middle
还没吃过的花生酱添加了红色圆圈

00:07:23.446 --> 00:07:24.806 A:middle
如果我有朋友想用这个 App

00:07:24.806 --> 00:07:26.456 A:middle
但刚好他们是色盲

00:07:26.456 --> 00:07:28.536 A:middle
他们看到的 App 可能就是这个样子

00:07:29.086 --> 00:07:30.146 A:middle
正如你所见

00:07:30.236 --> 00:07:31.486 A:middle
所有的圆圈都混在一起

00:07:33.816 --> 00:07:36.576 A:middle
现在在 iOS 13 中用户可以进入

00:07:36.576 --> 00:07:37.746 A:middle
设置 辅助功能 显示与文字大小

00:07:39.426 --> 00:07:43.546 A:middle
启用无需用颜色区分

00:07:44.546 --> 00:07:50.256 A:middle
作为开发人员

00:07:51.936 --> 00:07:54.266 A:middle
我可以检查这两项代码

00:07:55.296 --> 00:07:56.926 A:middle
如果设置为真

00:07:56.926 --> 00:07:58.476 A:middle
先前 App 中只能用颜色传递信息之处

00:08:04.196 --> 00:08:05.366 A:middle
比如形状

00:08:07.156 --> 00:08:09.816 A:middle
现在回到我的花生酱 App

00:08:09.816 --> 00:08:12.226 A:middle
当我看到用户已启用无需用颜色区分

00:08:12.226 --> 00:08:17.526 A:middle
就用绿色勾号 黄色问号

00:08:17.526 --> 00:08:22.176 A:middle
和红色叉号来替换之前圆圈

00:08:22.966 --> 00:08:24.356 A:middle
所以即使 App 看起来像这样

00:08:26.566 --> 00:08:28.236 A:middle
我们仍然可以辨别出不同状态的花生酱

00:08:29.446 --> 00:08:31.016 A:middle
你现在可能在想

00:08:31.016 --> 00:08:31.766 A:middle
Sommer 等一下

00:08:32.366 --> 00:08:34.385 A:middle
这个 App 现在看起来更好

00:08:34.546 --> 00:08:36.885 A:middle
干嘛还要用普通圆圈版呢

00:08:37.756 --> 00:08:38.806 A:middle
你们的想法完全正确

00:08:39.986 --> 00:08:42.436 A:middle
实际上 如果可以

00:08:42.436 --> 00:08:44.896 A:middle
我们不应只靠颜色来传达信息

00:08:45.716 --> 00:08:48.116 A:middle
在我的花生酱 App 中这样做很容易

00:08:48.206 --> 00:08:49.116 A:middle
我可以不用圆圈

00:08:51.076 --> 00:08:51.726 A:middle
但实际情况并不总是这么容易

00:08:53.746 --> 00:08:55.266 A:middle
比如这个游戏 Causality

00:08:56.576 --> 00:08:59.856 A:middle
游戏玩法是根据屏幕上的颜色来操作

00:09:04.956 --> 00:09:08.156 A:middle
因此游戏创建者提供了色盲模式

00:09:10.026 --> 00:09:12.836 A:middle
勾选后 玩家和目标头部上方

00:09:12.896 --> 00:09:15.986 A:middle
会出现符号标志 并相互关联

00:09:17.456 --> 00:09:20.366 A:middle
游戏设计师可能不想在原始设计中

00:09:20.366 --> 00:09:22.116 A:middle
出现这种额外的符号噪声

00:09:23.196 --> 00:09:25.296 A:middle
但对一些用户而言

00:09:25.356 --> 00:09:26.956 A:middle
这正是游戏可玩的原因

00:09:28.246 --> 00:09:29.656 A:middle
就是这样

00:09:29.656 --> 00:09:32.866 A:middle
我们已经展示了三种方式

00:09:33.116 --> 00:09:37.056 A:middle
使我们的 App 便于让所有用户访问

00:09:38.276 --> 00:09:39.716 A:middle
我们可以用动态字体支持所有文本大小

00:09:42.266 --> 00:09:44.386 A:middle
我们可以通过新的动态效果设置

00:09:44.386 --> 00:09:45.766 A:middle
来适应对动态效果敏感的用户

00:09:49.196 --> 00:09:50.856 A:middle
还可以勾选无需用颜色区分

00:09:50.856 --> 00:09:52.016 A:middle
用不同的方式传递信息

00:09:54.216 --> 00:09:55.656 A:middle
非常感谢大家花时间参会

00:09:56.516 --> 00:10:00.500 A:middle
[掌声]

