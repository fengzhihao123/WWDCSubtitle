WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:15:59.706 --> 00:16:01.746 A:middle
一个新的可用类

00:16:01.746 --> 00:16:04.756 A:middle
你可以使用它解码所有的 GeoJSON 数据

00:16:07.756 --> 00:16:09.556 A:middle
我现在要写一个名叫

00:16:09.656 --> 00:16:11.486 A:middle
decodeFeatures 的方法来解码单个的

00:16:11.546 --> 00:16:12.696 A:middle
IMDF 文件

00:16:13.276 --> 00:16:17.236 A:middle
在这个方法中

00:16:17.236 --> 00:16:18.896 A:middle
我们首先从磁盘里

00:16:18.896 --> 00:16:21.276 A:middle
读取 IMDF 文件的内容

00:16:21.276 --> 00:16:23.456 A:middle
并使用实例化后的 MKGeoJSONDecoder 方法

00:16:24.106 --> 00:16:27.556 A:middle
对数据进行解码

00:16:27.756 --> 00:16:29.826 A:middle
我们可以得到一个

00:16:29.826 --> 00:16:32.746 A:middle
MKGeoJSONFeature 型的对象数组

00:16:32.746 --> 00:16:40.036 A:middle
我们可以使用它来初始化我们的模型类

00:16:40.036 --> 00:16:41.206 A:middle
我现在要写一个名为 IMDFDecoder 的方法

00:16:41.206 --> 00:16:43.106 A:middle
来解码 IMDF 档案文件

00:16:43.136 --> 00:16:45.946 A:middle
或是 IMDF 文件集

00:16:51.236 --> 00:16:52.906 A:middle
让我们创建我们希望解码的

00:16:52.906 --> 00:16:54.346 A:middle
特征对象的具体实例吧

00:16:54.376 --> 00:16:56.026 A:middle
例如 venues（场所）

00:16:56.026 --> 00:16:57.886 A:middle
levels（楼层）以及 units（空间单元）

00:16:57.886 --> 00:17:00.316 A:middle
我们使用的就是刚才我写过的

