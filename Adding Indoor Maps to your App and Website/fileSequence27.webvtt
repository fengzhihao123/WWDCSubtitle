WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:26:57.326 --> 00:27:00.216 A:middle
rendererFor overlay 这个方法里

00:27:00.376 --> 00:27:02.876 A:middle
我们将调用 feature.configure(overlayRenderer:)

00:27:02.916 --> 00:27:05.316 A:middle
这个方法来为特征应用上不同的颜色

00:27:05.706 --> 00:27:07.516 A:middle
而不是让每个多边形

00:27:07.516 --> 00:27:11.346 A:middle
都使用相同的风格和颜色

00:27:11.936 --> 00:27:16.266 A:middle
类似的 对于

00:27:16.266 --> 00:27:18.456 A:middle
annotation 来说 我将调用

00:27:18.986 --> 00:27:23.336 A:middle
stylableFeature.configure(annotationView:)

00:27:23.696 --> 00:27:26.306 A:middle
方法 来给每个 annotation 应用特定的样式

00:27:26.956 --> 00:27:31.156 A:middle
我们想把 occupant 渲染成

00:27:31.216 --> 00:27:33.876 A:middle
一个简单点配上一个标签

00:27:33.876 --> 00:27:35.936 A:middle
之后 amenity 就是一个灰色的点

00:27:36.756 --> 00:27:38.776 A:middle
为了完成这件事

00:27:39.186 --> 00:27:40.736 A:middle
我已经实现了 自定义 annotation 视图的语句

00:27:40.736 --> 00:27:42.036 A:middle
并且把它们放到项目文件里了

00:27:43.166 --> 00:27:45.376 A:middle
在这个位置 我们调用了上面提到的

00:27:45.376 --> 00:27:48.336 A:middle
configure(annotationView:) 方法

00:27:48.416 --> 00:27:50.386 A:middle
并将特定的样式应用给了

00:27:50.496 --> 00:27:51.516 A:middle
annotation 视图

00:27:52.106 --> 00:27:55.296 A:middle
现在 让我们再运行一下这个 App

00:27:55.296 --> 00:27:56.556 A:middle
看看我们的地图是不是看起来不一样了

00:27:57.156 --> 00:28:03.566 A:middle
好了 它现在看起来

