WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:33:59.666 --> 00:34:01.446 A:middle
importGeoJSON 方法需要接收两个参数

00:34:01.696 --> 00:34:03.336 A:middle
第一个是需要转换的 GeoJSON 特征量

00:34:03.336 --> 00:34:04.826 A:middle
第二个是

00:34:04.826 --> 00:34:07.226 A:middle
GeoJSON 的代理对象

00:34:07.226 --> 00:34:08.835 A:middle
代理对象允许我们以

00:34:08.835 --> 00:34:11.525 A:middle
自定义的方式来创建项目

00:34:12.525 --> 00:34:14.216 A:middle
在这个基本示例中

00:34:14.436 --> 00:34:15.065 A:middle
我们有两个代理对象

00:34:15.966 --> 00:34:17.735 A:middle
geoJSONDidError 让我们能够对

00:34:17.735 --> 00:34:20.025 A:middle
错误做出反应

00:34:20.025 --> 00:34:21.926 A:middle
geoJSONDidComplete 可以给我们一个

00:34:21.926 --> 00:34:23.755 A:middle
刚创建好的项目的数组

00:34:28.356 --> 00:34:30.065 A:middle
之后们们通过 showItems 方法

00:34:30.065 --> 00:34:32.335 A:middle
来显示之前得到的项

00:34:33.176 --> 00:34:34.666 A:middle
我们其实也可以用 addItems 方法

00:34:34.896 --> 00:34:36.216 A:middle
但区别是 addItems 方法

00:34:36.216 --> 00:34:38.936 A:middle
不会把地图的中心点给聚焦在新添加的项目上

00:34:41.656 --> 00:34:43.386 A:middle
为了给 overlays 添加样式

00:34:43.606 --> 00:34:45.626 A:middle
比如说多边形和线条

00:34:45.626 --> 00:34:46.815 A:middle
我们可以运用 styleForOverlay 方法

00:34:47.696 --> 00:34:49.235 A:middle
它用一个新获得的 overlay 作为参数

00:34:49.235 --> 00:34:51.226 A:middle
并期望返回一个

00:34:51.226 --> 00:34:53.056 A:middle
style 型的对象

00:34:54.005 --> 00:34:55.585 A:middle
当然我们也可以创建一个

00:34:55.585 --> 00:34:57.296 A:middle
全新的样式

00:34:57.296 --> 00:34:59.066 A:middle
但我们也可以通过 style 属性

00:34:59.066 --> 00:35:00.936 A:middle
使用与 overlay 相关联的默认样式

