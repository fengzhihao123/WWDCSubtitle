WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:00:00.506 --> 00:00:05.926 A:middle
[音乐]

00:00:06.426 --> 00:00:08.396 A:middle
&gt;&gt; 大家好我是 Sommer Panage 

00:00:08.396 --> 00:00:09.996 A:middle
我是 Apple 辅助功能团队

00:00:09.996 --> 00:00:12.976 A:middle
的工程经理

00:00:12.976 --> 00:00:15.486 A:middle
接下来我将会谈及

00:00:15.486 --> 00:00:16.286 A:middle
Large Content Viewer

00:00:16.566 --> 00:00:18.426 A:middle
这一功能将帮助那些

00:00:18.426 --> 00:00:20.106 A:middle
喜欢大号字体的用户

00:00:20.836 --> 00:00:22.456 A:middle
在这次演讲中你将会学习到

00:00:22.456 --> 00:00:24.616 A:middle
如何确保 App 内全部内容

00:00:24.616 --> 00:00:26.666 A:middle
都能适于每个用户阅读的方法

00:00:28.216 --> 00:00:30.146 A:middle
我们将首先概览一下

00:00:30.146 --> 00:00:32.856 A:middle
Large Content Viewer 以及其为什么重要

00:00:33.626 --> 00:00:35.476 A:middle
接下来我们将关注一些

00:00:35.916 --> 00:00:37.226 A:middle
能够让你在你的 App 中

00:00:37.226 --> 00:00:38.016 A:middle
使用这一功能的 API

00:00:38.876 --> 00:00:41.266 A:middle
最后我们将查看在 App 中

00:00:41.266 --> 00:00:42.826 A:middle
你可能会遇到的问题实例

00:00:42.826 --> 00:00:46.916 A:middle
以及如何解决它们

00:00:47.176 --> 00:00:49.186 A:middle
所以让我们先从一些背景说起

00:00:51.136 --> 00:00:52.906 A:middle
在我们谈及 Large Content Viewer 前

00:00:52.906 --> 00:00:55.046 A:middle
让我们先从动态类型

00:00:55.046 --> 00:00:57.206 A:middle
这一相关话题开始

00:00:58.166 --> 00:01:00.366 A:middle
动态类型是一个可以帮助你

00:01:00.366 --> 00:01:03.506 A:middle
定制系统内字体尺寸的功能

00:01:04.096 --> 00:01:05.946 A:middle
当你想在屏幕上显示更多内容

00:01:05.946 --> 00:01:07.336 A:middle
你可以将字体的尺寸调小

00:01:07.336 --> 00:01:09.486 A:middle
这一功能也可以帮助你

00:01:09.486 --> 00:01:10.866 A:middle
让屏幕上的字体变得更大更可读

00:01:11.246 --> 00:01:13.226 A:middle
默认状态下你可以

00:01:13.226 --> 00:01:14.876 A:middle
在七种不同的尺寸中选择

00:01:16.116 --> 00:01:17.666 A:middle
但当你进入辅助功能设置后

00:01:17.666 --> 00:01:21.696 A:middle
你可以启用更大的尺寸

00:01:21.696 --> 00:01:23.246 A:middle
会有五个额外的尺寸供选择

00:01:24.026 --> 00:01:26.026 A:middle
这是非常重要的

00:01:26.026 --> 00:01:27.426 A:middle
使用这一功能的人并不只因为

00:01:27.426 --> 00:01:29.996 A:middle
他们想要不同的字体尺寸

00:01:30.546 --> 00:01:31.806 A:middle
他们这样做的原因是

00:01:31.806 --> 00:01:34.046 A:middle
需要更大的字体尺寸

00:01:34.046 --> 00:01:37.226 A:middle
来让自己的文本可读性更高

00:01:37.746 --> 00:01:39.216 A:middle
接下来让我们来看一下

00:01:39.216 --> 00:01:40.716 A:middle
动态类型是如何改变

00:01:40.716 --> 00:01:42.796 A:middle
iOS 的显示行为的

00:01:43.016 --> 00:01:44.636 A:middle
这里展示了手机 App 在默认字体

00:01:44.736 --> 00:01:46.286 A:middle
尺寸下的显示效果

00:01:47.886 --> 00:01:49.906 A:middle
如果我现在将字体设置为

00:01:49.906 --> 00:01:51.586 A:middle
辅助功能设置中的其中一个尺寸

00:01:51.886 --> 00:01:53.376 A:middle
文本的大小变大了许多

00:01:54.006 --> 00:01:55.816 A:middle
但你也许注意到了

00:01:55.896 --> 00:01:57.606 A:middle
文本在屏幕上占据的部分

00:01:57.746 --> 00:01:58.846 A:middle
并没有变得更大

00:02:04.536 --> 00:02:06.046 A:middle
如果顾客将尺寸

00:02:06.046 --> 00:02:08.175 A:middle
调节到与我们在内容区域看到的

00:02:08.175 --> 00:02:10.045 A:middle
尺寸一样大时

00:02:10.045 --> 00:02:11.946 A:middle
他们不太可能看到

00:02:12.066 --> 00:02:13.326 A:middle
我们在标签栏中看到的字体

00:02:13.426 --> 00:02:14.596 A:middle
因为该尺寸还是太小

00:02:15.466 --> 00:02:17.216 A:middle
你可能也不能直接把图标

00:02:17.216 --> 00:02:18.926 A:middle
放在上面做补偿

00:02:19.606 --> 00:02:21.526 A:middle
然而我们并不想调大标签栏

00:02:21.526 --> 00:02:22.946 A:middle
因为这会使得

00:02:22.946 --> 00:02:24.286 A:middle
留给显示主要内容

00:02:24.286 --> 00:02:26.376 A:middle
的面积变得非常小

00:02:26.376 --> 00:02:27.876 A:middle
就像这一例子中的联系人名单

00:02:28.396 --> 00:02:30.856 A:middle
所以如果你想使用

00:02:30.886 --> 00:02:32.856 A:middle
更大的文本尺寸

00:02:32.856 --> 00:02:34.536 A:middle
我们允许你长按需要调节的按钮

00:02:34.536 --> 00:02:35.626 A:middle
来获得更大的版本

00:02:36.096 --> 00:02:38.256 A:middle
这是它的显示效果

00:02:38.746 --> 00:02:40.226 A:middle
你可以用手指在底部栏拖动

00:02:40.226 --> 00:02:42.916 A:middle
以获取这些按钮的内容

00:02:43.456 --> 00:02:44.716 A:middle
当你将手指拖动到

00:02:44.716 --> 00:02:46.216 A:middle
你想要点击的按钮上时

00:02:46.216 --> 00:02:48.366 A:middle
只需要松开手指

00:02:48.626 --> 00:02:50.126 A:middle
Apple 设备就会执行

00:02:50.126 --> 00:02:50.926 A:middle
点按按钮的操作

00:02:51.616 --> 00:02:53.366 A:middle
这就是我们称作

00:02:53.366 --> 00:02:54.576 A:middle
Large Content Viewer 的功能

00:02:55.196 --> 00:02:57.046 A:middle
这一功能允许视力不佳的用户

00:02:57.246 --> 00:02:59.396 A:middle
可以方便的使用像是标签栏

00:02:59.626 --> 00:03:00.666 A:middle
或是其他尺寸较小的 UI 

00:03:01.566 --> 00:03:02.986 A:middle
让你的 App 在合适的时候

00:03:02.986 --> 00:03:05.466 A:middle
显示大功能内容查看器非常重要

00:03:06.206 --> 00:03:07.906 A:middle
如果你使用标准的 UIKit 栏

00:03:07.906 --> 00:03:10.386 A:middle
你就已经启用了 Large Content Viewer 功能

00:03:10.956 --> 00:03:12.226 A:middle
在之前你可能没有注意到

00:03:12.226 --> 00:03:13.736 A:middle
这是因为这一功能仅在

00:03:13.736 --> 00:03:15.316 A:middle
辅助功能设置中的尺寸时

00:03:15.316 --> 00:03:16.296 A:middle
才会体现出来

00:03:16.866 --> 00:03:18.896 A:middle
但如果你使用自定义栏

00:03:19.276 --> 00:03:21.256 A:middle
或者一些其他自定义的 UI

00:03:21.256 --> 00:03:22.926 A:middle
并且他们的尺寸较小的话

00:03:22.926 --> 00:03:24.846 A:middle
你可能需要在内部适配 API

00:03:24.846 --> 00:03:26.686 A:middle
来使得你的 UI 功能

00:03:26.686 --> 00:03:28.326 A:middle
与标准 UIKit 相符合

00:03:28.796 --> 00:03:30.596 A:middle
需要注意的是

00:03:30.596 --> 00:03:32.636 A:middle
这一功能只在你无法调大

00:03:32.636 --> 00:03:33.346 A:middle
自定义 UI 时使用

00:03:34.736 --> 00:03:36.876 A:middle
使用动态类型进行缩放时

00:03:36.926 --> 00:03:38.586 A:middle
Large Content Viewer 功能

00:03:38.586 --> 00:03:39.616 A:middle
将会被优先启用

00:03:40.186 --> 00:03:44.736 A:middle
但有的时候我们的栏不能缩放

00:03:45.036 --> 00:03:46.956 A:middle
让我们来看看如何在你的 App 中

00:03:46.956 --> 00:03:48.846 A:middle
支持 Large Content Viewer

00:03:48.846 --> 00:03:51.226 A:middle
这一功能

00:03:51.446 --> 00:03:53.446 A:middle
早前我已经说明了

00:03:53.446 --> 00:03:54.806 A:middle
如果你使用标准 UIKit 栏

00:03:54.916 --> 00:03:57.096 A:middle
Large Content Viewer 功能就会开启

00:03:57.886 --> 00:03:59.406 A:middle
但你可能还需要一些操作

00:03:59.406 --> 00:04:01.506 A:middle
来确保界面的美观

00:04:02.736 --> 00:04:04.166 A:middle
如果你的栏组件使用 PDF 图像

00:04:04.166 --> 00:04:06.606 A:middle
确保你检查了素材目录中

00:04:06.706 --> 00:04:09.406 A:middle
Preserve Vector 选择框

00:04:09.406 --> 00:04:11.306 A:middle
处于启用状态

00:04:12.106 --> 00:04:13.466 A:middle
这将确保你的图片

00:04:13.466 --> 00:04:15.836 A:middle
顺畅地放大为更大的尺寸

00:04:16.435 --> 00:04:19.305 A:middle
但如果你的图片按钮使用 PNG

00:04:19.305 --> 00:04:21.555 A:middle
这样不具备矢量数据

00:04:21.555 --> 00:04:24.246 A:middle
那在默认情况下

00:04:24.246 --> 00:04:25.716 A:middle
图片在预览框中的显示

00:04:25.766 --> 00:04:27.616 A:middle
就会变得模糊

00:04:28.316 --> 00:04:29.686 A:middle
想要修复这一情况的话

00:04:29.686 --> 00:04:32.116 A:middle
你需要提供更大尺寸的图像

00:04:33.366 --> 00:04:35.756 A:middle
使用具有更放大尺寸

00:04:35.756 --> 00:04:38.616 A:middle
性能的图像来建立 UI 栏项目

00:04:39.286 --> 00:04:41.006 A:middle
如果你需要调整位置

00:04:41.006 --> 00:04:42.876 A:middle
比如你想调节那些

00:04:42.876 --> 00:04:44.216 A:middle
在预览器内看起来没有处于

00:04:44.216 --> 00:04:45.466 A:middle
居中状态的图片位置时

00:04:45.466 --> 00:04:47.616 A:middle
你可以调节选项中的

00:04:47.616 --> 00:04:50.506 A:middle
大型内容图片尺寸

00:04:51.416 --> 00:04:53.516 A:middle
那当你需要使用自定义 UI 的时候

00:04:53.516 --> 00:04:54.276 A:middle
应该如何处理呢

00:04:55.166 --> 00:04:57.626 A:middle
在 iOS 13 之前

00:04:57.626 --> 00:04:59.186 A:middle
在 Large Content Viewer 中

00:04:59.186 --> 00:05:00.876 A:middle
直接拖动即可

00:05:01.416 --> 00:05:03.586 A:middle
现在我们添加了一些 API

00:05:03.586 --> 00:05:05.346 A:middle
让你可以得到与标准 UIKit 栏

00:05:05.446 --> 00:05:07.396 A:middle
相同显示方法的 UI 

00:05:08.016 --> 00:05:09.556 A:middle
当你在自定义状态栏时

00:05:09.556 --> 00:05:12.076 A:middle
你首先需要做的事

00:05:12.076 --> 00:05:13.766 A:middle
是将状态栏里的按钮

00:05:13.766 --> 00:05:16.126 A:middle
指定为需要被显示的对象

00:05:17.046 --> 00:05:18.936 A:middle
接着 Large Content Viewer 就会

00:05:18.936 --> 00:05:21.256 A:middle
为每个指定的按钮请求

00:05:21.256 --> 00:05:22.436 A:middle
标题或是图片信息

00:05:22.776 --> 00:05:24.706 A:middle
如果你为这些按钮选定的是

00:05:24.706 --> 00:05:26.516 A:middle
标准 UIKit 类型

00:05:26.516 --> 00:05:28.086 A:middle
你将会直接得到这些信息

00:05:29.126 --> 00:05:31.006 A:middle
最后你还需要为

00:05:31.006 --> 00:05:32.316 A:middle
你自定义的状态栏

00:05:32.316 --> 00:05:33.596 A:middle
设定手势交互方式

00:05:35.196 --> 00:05:38.276 A:middle
全新的 UILargeContentViewerItem

00:05:38.276 --> 00:05:40.746 A:middle
协议指定了 Large Content Viewer 

00:05:40.746 --> 00:05:44.026 A:middle
显示你的内容所需要的信息

00:05:45.306 --> 00:05:47.006 A:middle
而 ShowsLargeContentViewer 

00:05:47.006 --> 00:05:49.186 A:middle
属性是你需要

00:05:49.186 --> 00:05:50.726 A:middle
用来标记你的状态栏按钮的属性

00:05:51.136 --> 00:05:53.496 A:middle
将需要在查看器中

00:05:53.496 --> 00:05:54.566 A:middle
显示的按钮的该属性设置为“true”值

00:05:55.686 --> 00:05:57.206 A:middle
接着你就可以指定

00:05:57.206 --> 00:05:59.456 A:middle
largeContentTitle 属性

00:05:59.456 --> 00:06:00.626 A:middle
和 largeContentImage 属性

00:06:00.926 --> 00:06:02.576 A:middle
你可以指定其中一项属性

00:06:02.876 --> 00:06:03.616 A:middle
也可以指定两个属性

00:06:04.486 --> 00:06:07.226 A:middle
如果你想要重复使用

00:06:07.226 --> 00:06:09.026 A:middle
别的小图标上的 PDF 图片

00:06:09.026 --> 00:06:10.976 A:middle
就将 scalesLargeContentImage

00:06:10.976 --> 00:06:11.966 A:middle
属性设置为“true”值即可

00:06:12.656 --> 00:06:14.546 A:middle
但正如我们早前在 UI 栏

00:06:14.546 --> 00:06:16.626 A:middle
对象中所看到的一样

00:06:16.626 --> 00:06:19.186 A:middle
你需要保存对应图像的矢量数据

00:06:19.696 --> 00:06:21.566 A:middle
最后如果你想要居中图像

00:06:21.566 --> 00:06:23.096 A:middle
你可以使用属性中的

00:06:23.096 --> 00:06:25.116 A:middle
largeContentImageInsets 选项

00:06:27.216 --> 00:06:29.226 A:middle
UIView 中已经预置了该协议

00:06:29.226 --> 00:06:31.756 A:middle
并且提供了对齐标志

00:06:31.996 --> 00:06:34.116 A:middle
所以在很多情况下

00:06:34.116 --> 00:06:35.656 A:middle
你可以使用设置属性而不是

00:06:35.656 --> 00:06:37.396 A:middle
建立子类来覆盖的方法

00:06:38.296 --> 00:06:39.966 A:middle
正如我们之前提到的是

00:06:40.306 --> 00:06:42.256 A:middle
确定的 UIKit 类

00:06:42.256 --> 00:06:44.376 A:middle
像是 UI 按钮及标签

00:06:44.376 --> 00:06:47.126 A:middle
将会返回其标题和图像的默认值

00:06:47.636 --> 00:06:50.416 A:middle
那就是你注释标签栏中

00:06:50.416 --> 00:06:51.586 A:middle
按钮的方法

00:06:52.496 --> 00:06:54.166 A:middle
接下来你还需要增加

00:06:54.166 --> 00:06:56.446 A:middle
标签栏本身的手势交互

00:06:56.806 --> 00:06:58.756 A:middle
增加交互方式的方法是

00:06:58.756 --> 00:07:00.716 A:middle
使用支持添加

00:07:00.846 --> 00:07:02.456 A:middle
拖拽及丢弃指令

00:07:02.526 --> 00:07:03.556 A:middle
相同的 addInteraction 方法

00:07:03.856 --> 00:07:06.906 A:middle
这里展示了 Large Content Viewer 

00:07:06.906 --> 00:07:08.526 A:middle
是如何实现交互的方法

00:07:08.846 --> 00:07:10.806 A:middle
这里面有一些属性

00:07:11.276 --> 00:07:12.896 A:middle
在一个简易的情况下

00:07:12.896 --> 00:07:14.356 A:middle
你可以创建一个没有变元的实例

00:07:14.356 --> 00:07:15.936 A:middle
并且不需要更改任何其他属性

00:07:16.156 --> 00:07:18.896 A:middle
即可创建一个交互方法

00:07:19.416 --> 00:07:21.426 A:middle
但如果你的 App 有任何其他的

00:07:21.426 --> 00:07:23.206 A:middle
手势识别方法的话

00:07:23.206 --> 00:07:24.706 A:middle
你可能需要调整其行为

00:07:25.866 --> 00:07:27.676 A:middle
你可以为它提供委托

00:07:27.676 --> 00:07:30.306 A:middle
来得到替代它的粒度控制

00:07:31.156 --> 00:07:32.396 A:middle
你也可以利用

00:07:32.396 --> 00:07:34.516 A:middle
gestureRecognizer 属性

00:07:34.516 --> 00:07:36.246 A:middle
来设置与 App 内

00:07:36.246 --> 00:07:38.546 A:middle
其他手势识别方法的关联

00:07:39.206 --> 00:07:41.806 A:middle
最后如果你要检查

00:07:41.806 --> 00:07:43.606 A:middle
是否开启了 Large Content Viewer

00:07:43.936 --> 00:07:46.006 A:middle
你可以检查 isEnabled 属性

00:07:46.536 --> 00:07:48.096 A:middle
当然你可以通过关注通知

00:07:48.096 --> 00:07:50.536 A:middle
来查看其变化

00:07:52.356 --> 00:07:53.836 A:middle
这里有一些使用委托

00:07:53.836 --> 00:07:56.136 A:middle
来定制其行为的方式

00:07:57.836 --> 00:08:00.026 A:middle
首先你可以指定

00:08:00.026 --> 00:08:01.616 A:middle
用户将手指从部件上移开时

00:08:01.616 --> 00:08:03.756 A:middle
视图中要进行的操作

00:08:04.146 --> 00:08:06.206 A:middle
这一操作应该在用户

00:08:06.206 --> 00:08:07.176 A:middle
点击对应部件时完成

00:08:07.826 --> 00:08:08.956 A:middle
如果你不采用这一方法

00:08:08.956 --> 00:08:10.436 A:middle
并且使用例如 UI 按钮的

00:08:10.436 --> 00:08:12.326 A:middle
标准 UI 控制方式

00:08:12.326 --> 00:08:14.376 A:middle
默认情况下这里的操作将会是

00:08:14.376 --> 00:08:16.306 A:middle
发起一个内部弹起的事件

00:08:16.926 --> 00:08:18.556 A:middle
但如果你在这里进行

00:08:18.556 --> 00:08:21.086 A:middle
更多的自定义设置

00:08:21.086 --> 00:08:22.376 A:middle
比如其自带的点击弹出视图

00:08:22.376 --> 00:08:24.136 A:middle
你也可以采用这种方法

00:08:24.136 --> 00:08:26.376 A:middle
来实现你想要执行的行为

00:08:27.206 --> 00:08:29.316 A:middle
接下来介绍对

00:08:29.316 --> 00:08:31.426 A:middle
对象中特定坐标进行设定的选项

00:08:31.946 --> 00:08:33.706 A:middle
默认情况下对象

00:08:33.706 --> 00:08:35.366 A:middle
通过在视图层次结构上

00:08:35.366 --> 00:08:37.236 A:middle
递归调用事件内部的点

00:08:37.236 --> 00:08:38.106 A:middle
的方式被查询到

00:08:38.765 --> 00:08:40.836 A:middle
但如果你没有使用视图的话

00:08:40.876 --> 00:08:42.496 A:middle
这个方法就可能无效

00:08:42.986 --> 00:08:45.356 A:middle
所以这个方法让你

00:08:45.356 --> 00:08:47.136 A:middle
返回到特定点

00:08:47.136 --> 00:08:48.816 A:middle
所对应显示的对象

00:08:50.016 --> 00:08:52.346 A:middle
最后你应该决定该由

00:08:52.346 --> 00:08:53.836 A:middle
哪个 viewController 来控制

00:08:53.836 --> 00:08:54.916 A:middle
Large Content Viewer 这一功能

00:08:55.456 --> 00:08:57.446 A:middle
默认情况下 UIKit 将会尝试

00:08:57.446 --> 00:08:58.956 A:middle
选取一个你添加到

00:08:58.956 --> 00:09:01.556 A:middle
视图中的 viewController 交互

00:09:02.406 --> 00:09:03.796 A:middle
但如果该默认设置

00:09:03.796 --> 00:09:05.166 A:middle
在你的 App 上没有很好地工作

00:09:05.326 --> 00:09:06.536 A:middle
你可以在这里指定你想要的

00:09:08.556 --> 00:09:10.236 A:middle
至此我们讲解了 API 的内容

00:09:11.026 --> 00:09:12.616 A:middle
现在让我们来看看一些

00:09:12.616 --> 00:09:14.206 A:middle
说明其如何使用的例子

00:09:15.776 --> 00:09:18.136 A:middle
让我们先从一个简单的例子说起

00:09:18.616 --> 00:09:20.446 A:middle
你已经构建了一个自定义栏

00:09:20.446 --> 00:09:22.606 A:middle
但在栏内你是用的是

00:09:22.606 --> 00:09:23.056 A:middle
标准 UIKit 视图

00:09:23.426 --> 00:09:25.546 A:middle
这里我们有一个带有

00:09:25.546 --> 00:09:27.096 A:middle
UI 按钮和 UI 图标的栏

00:09:28.816 --> 00:09:30.446 A:middle
因为我们使用标准视图

00:09:30.446 --> 00:09:32.856 A:middle
我们需要做的是使用

00:09:32.856 --> 00:09:35.006 A:middle
showsLargeContentViewer 属性

00:09:35.316 --> 00:09:37.786 A:middle
来设定按钮和标签

00:09:38.166 --> 00:09:39.876 A:middle
在这里不需要设置标题或是图片

00:09:39.876 --> 00:09:42.076 A:middle
因为这些内容可以

00:09:42.076 --> 00:09:44.406 A:middle
从属性页面中找到

00:09:45.336 --> 00:09:47.166 A:middle
最后我们可以在不设定

00:09:47.166 --> 00:09:48.646 A:middle
任何属性的情况下对自定义栏

00:09:48.906 --> 00:09:50.956 A:middle
添加需要的手势交互

00:09:51.296 --> 00:09:52.296 A:middle
这就可以了

00:09:53.556 --> 00:09:55.246 A:middle
如果你的自定义栏除了

00:09:55.246 --> 00:09:56.806 A:middle
按钮之外还使用别的组件

00:09:57.106 --> 00:09:59.076 A:middle
你可能需要别的一些 API

00:09:59.826 --> 00:10:01.696 A:middle
我们先把你的按钮称为

00:10:01.696 --> 00:10:04.786 A:middle
MyButton 的自定义实例类

00:10:05.326 --> 00:10:08.406 A:middle
你可以覆盖原有的

00:10:08.406 --> 00:10:10.086 A:middle
Large Content Viewer 组件属性

00:10:10.176 --> 00:10:12.366 A:middle
来返回你所需要的结果

00:10:13.136 --> 00:10:15.166 A:middle
在这里我们将 
showsLargeContentViewer

00:10:15.166 --> 00:10:17.596 A:middle
的返回值设置为“true”

00:10:17.736 --> 00:10:19.236 A:middle
将标题属性的返回值设置为

00:10:19.236 --> 00:10:19.606 A:middle
我们的文字

00:10:21.116 --> 00:10:23.226 A:middle
如果你的每个按钮图片

00:10:23.226 --> 00:10:25.466 A:middle
都有原始的矢量数据

00:10:25.466 --> 00:10:27.186 A:middle
你可以将数据指定为 Large Content Viewer

00:10:27.186 --> 00:10:28.406 A:middle
要显示的图像数据

00:10:29.266 --> 00:10:31.006 A:middle
只要确保 scalesLargeContentImage

00:10:31.006 --> 00:10:33.406 A:middle
的返回值为“true”

00:10:33.406 --> 00:10:35.226 A:middle
就可以让图像放大到正确尺寸

00:10:36.656 --> 00:10:38.666 A:middle
最后让我们来看

00:10:38.666 --> 00:10:40.436 A:middle
当你想要使用另外的手势识别时

00:10:40.436 --> 00:10:42.036 A:middle
应该如何处理的实例

00:10:42.036 --> 00:10:44.436 A:middle
在 Apple 的 Safari 浏览器 App 中

00:10:44.436 --> 00:10:46.126 A:middle
有这么一个经典例子

00:10:46.866 --> 00:10:48.366 A:middle
当你轻击返回按钮时

00:10:48.596 --> 00:10:50.326 A:middle
它会回到之前的页面

00:10:50.826 --> 00:10:52.356 A:middle
但如果你长按返回按钮

00:10:52.716 --> 00:10:54.156 A:middle
这一操作会打开

00:10:54.156 --> 00:10:55.396 A:middle
查看浏览历史记录的页面

00:10:56.166 --> 00:10:57.956 A:middle
Large Content Viewer 也可以

00:10:57.956 --> 00:10:59.436 A:middle
利用长按手势来启用

00:11:04.436 --> 00:11:06.936 A:middle
你绝对应该让两者同时生效

00:11:07.546 --> 00:11:09.436 A:middle
换种说法就是

00:11:09.436 --> 00:11:11.266 A:middle
让 Large Content Viewer 生效

00:11:11.266 --> 00:11:12.876 A:middle
来让用户知道按钮具有什么功能

00:11:13.486 --> 00:11:15.216 A:middle
而当用户查看了这些功能之后

00:11:15.216 --> 00:11:17.006 A:middle
此前长按按钮进行的操作

00:11:17.006 --> 00:11:18.586 A:middle
依旧可以被唤醒

00:11:19.606 --> 00:11:21.386 A:middle
要实现这一功能

00:11:21.386 --> 00:11:22.786 A:middle
首先需要增加已有 longPressRecognizer

00:11:22.846 --> 00:11:24.866 A:middle
属性的持续时间

00:11:25.466 --> 00:11:26.916 A:middle
这样我们就在执行后续操作前

00:11:26.916 --> 00:11:28.576 A:middle
给了用户额外的时间来查看

00:11:28.576 --> 00:11:31.106 A:middle
Large Content Viewer 显示的内容

00:11:31.766 --> 00:11:34.036 A:middle
你还应该确保持续时间

00:11:34.036 --> 00:11:35.586 A:middle
在用户更改设置后

00:11:35.586 --> 00:11:36.566 A:middle
进行更新

00:11:37.116 --> 00:11:39.026 A:middle
如果它们开始或者停止使用

00:11:39.026 --> 00:11:40.766 A:middle
辅助功能设置中的字体尺寸

00:11:41.076 --> 00:11:43.056 A:middle
那么持续时间也应该更新

00:11:44.306 --> 00:11:45.676 A:middle
接下来我们需要设置

00:11:45.676 --> 00:11:47.926 A:middle
UIGestureRecognizer 委托

00:11:47.926 --> 00:11:48.706 A:middle
给已有的

00:11:48.766 --> 00:11:49.886 A:middle
longPressRecognizer 属性

00:11:51.366 --> 00:11:53.406 A:middle
之后在你的委托回调里

00:11:53.766 --> 00:11:55.386 A:middle
你就能确保

00:11:55.386 --> 00:11:55.966 A:middle
已有的 longPressRecognizer

00:11:55.966 --> 00:11:58.106 A:middle
和 gestureRecognizer 两个属性

00:11:58.106 --> 00:11:59.576 A:middle
可以同时被

00:11:59.576 --> 00:12:02.216 A:middle
Large Content Viewer 识别出来

00:12:02.466 --> 00:12:04.446 A:middle
这样二者之间就不会

00:12:04.526 --> 00:12:06.156 A:middle
导致另一个功能不工作了

00:12:07.456 --> 00:12:09.476 A:middle
在这里我们可以看到

00:12:09.476 --> 00:12:10.976 A:middle
在实施了 Large Content Viewer 之后

00:12:11.036 --> 00:12:11.866 A:middle
我们的程序是如何表现的

00:12:12.606 --> 00:12:14.576 A:middle
如果在 Large Content Viewer 显示期间

00:12:14.576 --> 00:12:16.156 A:middle
我将手指松开

00:12:16.286 --> 00:12:17.806 A:middle
就可以进行返回操作

00:12:18.336 --> 00:12:19.936 A:middle
而当我长按一段时间之后

00:12:19.936 --> 00:12:21.676 A:middle
我依旧能够进入

00:12:21.676 --> 00:12:22.746 A:middle
浏览历史记录的页面

00:12:23.286 --> 00:12:25.836 A:middle
这就是如何让你的 App

00:12:25.836 --> 00:12:27.306 A:middle
适应那些喜欢大尺寸字体人群

00:12:27.306 --> 00:12:29.426 A:middle
但 UI 元素又需要保持

00:12:29.656 --> 00:12:30.886 A:middle
较小尺寸的方法

00:12:30.886 --> 00:12:33.176 A:middle
要注意的是你只能在

00:12:33.176 --> 00:12:35.066 A:middle
UI 元素无法缩放的时候

00:12:35.236 --> 00:12:36.136 A:middle
使用 Large Content Viewer 功能

00:12:36.836 --> 00:12:38.436 A:middle
为动态类型进行缩放

00:12:38.436 --> 00:12:39.846 A:middle
总会是更好的选择

00:12:40.146 --> 00:12:41.936 A:middle
所以如果你能使用这一功能的话

00:12:41.936 --> 00:12:42.386 A:middle
不要将 Large Content Viewer 作为 API 使用

00:12:43.396 --> 00:12:45.696 A:middle
最后如果你的自定义视图

00:12:45.696 --> 00:12:47.516 A:middle
还有别的交互方式的话

00:12:47.656 --> 00:12:48.676 A:middle
这些自定义视图

00:12:48.676 --> 00:12:50.656 A:middle
对于使用 Large Content Viewer 的用户

00:12:50.656 --> 00:12:51.606 A:middle
依旧可以生效

00:12:52.206 --> 00:12:54.026 A:middle
用这样的方法所有人都能够使用

00:12:54.026 --> 00:12:55.516 A:middle
你的 App 的这些功能了

00:12:55.966 --> 00:12:56.836 A:middle
这就是我要说的全部内容

00:12:57.156 --> 00:12:57.966 A:middle
感谢观看

